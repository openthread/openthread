#!/usr/bin/expect -f
#
#  Copyright (c) 2020, The OpenThread Authors.
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions are met:
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#  3. Neither the name of the copyright holder nor the
#     names of its contributors may be used to endorse or promote products
#     derived from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
#  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#  POSSIBILITY OF SUCH DAMAGE.
#

source "tests/scripts/expect/_multinode.exp"


set timeout 1
setup_nodes
spawn $env(OT_COMMAND) 3
set spawn_3 $spawn_id


set spawn_id $spawn_1
send "channel\n"
expect "channel"
expect -re {(\d+)}
set channel $expect_out(1,string)
expect "Done"

set spawn_id $spawn_3
send "channel $channel\n"
expect "Done"
send "promiscuous enable\n"
expect "Done"


# ping
set spawn_id $spawn_2
send "ipaddr\n"
expect -re {(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4})}
set addr $expect_out(1,string)

set spawn_id $spawn_1
send "ping $addr\n"
expect "16 bytes from $addr: icmp_seq=1"
send "ping $addr 20 10 0.00123456 255\n"
for {set i 2} {$i <= 11} {incr i} {
    expect "28 bytes from $addr: icmp_seq=$i"
}


# pcap receive
set spawn_id $spawn_3
expect -re {============================================\[len = +\d+]============================}
expect -re {\|( ([0-9A-Z]{2}|\.\.)){16}\|( .){16}\|}
expect -- "-----------------------------------------------------------------------------------"
send "promiscuous disable\n"
expect "Done"


# child
set spawn_id $spawn_2
send "extaddr\n"
expect -re {([0-9a-f]{16})}
set extaddr $expect_out(1,string)
expect "Done"

set spawn_id $spawn_1
send "child table\n"
expect "$extaddr"
expect "Done"
send "child list\n"
expect -re {(\d+)}
set child_id $expect_out(1,string)
expect "Done"
send "child $child_id\n"
expect "Ext Addr: $extaddr"
expect "Done"


# router
set spawn_id $spawn_1
send "extaddr\n"
expect -re {([0-9a-f]{16})}
set extaddr $expect_out(1,string)
expect "Done"
send "router list\n"
expect -re {(\d+)}
set router_id $expect_out(1,string)
expect "Done"
send "router $router_id\n"
expect -re {Rloc: ([0-9a-f]{4})}
set rloc $expect_out(1,string)
expect "Done"
send "router table\n"
expect "| ID | RLOC16 | Next Hop | Path Cost | LQ In | LQ Out | Age | Extended MAC     |"
expect "+----+--------+----------+-----------+-------+--------+-----+------------------+"
expect -re "\\| +$router_id +\\| +0x$rloc +\\| +\\d+ +\\| +\\d+ +\\| +\\d+ +\\| +\\d+ +\\| +\\d+ +\\| +$extaddr +\\|"
expect "Done"


# scan
set spawn_id $spawn_1
send "extaddr\n"
expect -re {([0-9a-f]{16})}
set extaddr $expect_out(1,string)
expect "Done"
send "panid\n"
expect -re {([0-9a-f]{4})}
set pan $expect_out(1,string)
expect "Done"
send "extpanid\n"
expect -re {([0-9a-f]{16})}
set extpan $expect_out(1,string)
expect "Done"
send "networkname\n"
expect "networkname"
expect -re {\r\n(.*?)\r\n}
set network $expect_out(1,string)
expect "Done"
send "channel\n"
expect -re {(\d+)}
set channel $expect_out(1,string)
expect "Done"

set spawn_id $spawn_3
send "scan $channel\n"
expect "| J | Network Name     | Extended PAN     | PAN  | MAC Address      | Ch | dBm | LQI |"
expect "+---+------------------+------------------+------+------------------+----+-----+-----+"
wait_for "" "\\| +\\d +\\| +$network +\\| +$extpan +\\| +$pan +\\| +$extaddr +\\| +$channel +\\| +-?\\d+ +\\| +\\d +\\|"
wait_for "" "Done"
send "scan energy 100\n"
expect "| Ch | RSSI |"
expect "+----+------+"
for {set i 11} {$i <= 26} {incr i} {
    expect -re "\\| $i \\| +-?\\d+ \\|"
}
expect "Done"


dispose_nodes
