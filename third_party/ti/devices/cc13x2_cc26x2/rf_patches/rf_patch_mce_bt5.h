/******************************************************************************
*  Filename:       rf_patch_mce_bt5.h
*  Revised:        $Date: 2017-12-01 13:47:22 +0100 (fr, 01 des 2017) $
*  Revision:       $Revision: 18103 $
*
*  Description: RF core patch for Bluetooth 5 support in CC13x2 and CC26x2
*
*  Copyright (c) 2015-2017, Texas Instruments Incorporated
*  All rights reserved.
*
*  Redistribution and use in source and binary forms, with or without
*  modification, are permitted provided that the following conditions are met:
*
*  1) Redistributions of source code must retain the above copyright notice,
*     this list of conditions and the following disclaimer.
*
*  2) Redistributions in binary form must reproduce the above copyright notice,
*     this list of conditions and the following disclaimer in the documentation
*     and/or other materials provided with the distribution.
*
*  3) Neither the name of the ORGANIZATION nor the names of its contributors may
*     be used to endorse or promote products derived from this software without
*     specific prior written permission.
*
*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
*  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
*  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
*  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
*  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
*  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
*  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
*  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
*  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
*  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
*  POSSIBILITY OF SUCH DAMAGE.
*
******************************************************************************/
#ifndef _RF_PATCH_MCE_BT5_H
#define _RF_PATCH_MCE_BT5_H

#include <stdint.h>
#include "../inc/hw_types.h"

#ifndef MCE_PATCH_TYPE
#define MCE_PATCH_TYPE static const uint32_t
#endif

#ifndef PATCH_FUN_SPEC
#define PATCH_FUN_SPEC static inline
#endif

#ifndef RFC_MCERAM_BASE
#define RFC_MCERAM_BASE 0x21008000
#endif

#ifndef MCE_PATCH_MODE
#define MCE_PATCH_MODE 0
#endif

MCE_PATCH_TYPE patchBt5Mce[511] = { 
   0x2dee609e,
   0x2dc22dce,
   0x2fef0f54,
   0x5f970fef,
   0x5000179d,
   0x048005a0,
   0x40007f40,
   0x0f080128,
   0x04000800,
   0x404003ff,
   0x00002e20,
   0x00130003,
   0x00210010,
   0x00320022,
   0x00430031,
   0x00500040,
   0x00620053,
   0x00710061,
   0x005f0072,
   0x005d0060,
   0x005b005e,
   0x0059005c,
   0x0055005a,
   0x00570056,
   0x00cc0058,
   0x003c00c3,
   0x00000033,
   0x00020001,
   0x04000003,
   0x00180800,
   0x00030008,
   0x000a001a,
   0x0011002c,
   0x0003003e,
   0x00180008,
   0x0011001a,
   0x000a002c,
   0x4000003e,
   0x0000000c,
   0x00091488,
   0x000105f9,
   0x008b8000,
   0x0f500080,
   0x0a1d0000,
   0x00000590,
   0x04000005,
   0x00c17b20,
   0x000f0000,
   0x017f7f27,
   0x000c8000,
   0x14980000,
   0x05f90009,
   0x80000000,
   0x0080008b,
   0x00000f70,
   0x0590121d,
   0x00050000,
   0x7b200400,
   0x000000c1,
   0x7f26000f,
   0x4000017f,
   0x000ca00c,
   0x00030387,
   0x050140cd,
   0x01ee8000,
   0x06700080,
   0x091e0000,
   0x00560500,
   0x0000000c,
   0x00505014,
   0x001f0000,
   0x00007f7f,
   0x7f7f8804,
   0x00002c7f,
   0x00000000,
   0x009f0000,
   0x2e204040,
   0xfd900c03,
   0x0000783c,
   0x720e720d,
   0x7210720f,
   0xa4e5a35d,
   0xb63c67d8,
   0x7100b0d0,
   0xb110a0d0,
   0x8162721b,
   0x39621020,
   0x00200630,
   0x11011630,
   0x6c011401,
   0x60cb60c2,
   0x613c60f2,
   0x60cd60c2,
   0x624e61d9,
   0x60d360c2,
   0x616460f2,
   0x60c31220,
   0x73111210,
   0x73137312,
   0x001081b1,
   0xb07091b0,
   0xc4b160a5,
   0xc79160d4,
   0xc1fb78bc,
   0xc540c302,
   0xc62160d8,
   0xc5fb78ac,
   0xc460c302,
   0x6f131820,
   0x16116e23,
   0x68d91612,
   0x9c8c94eb,
   0x1e008170,
   0xc03044c2,
   0xc1f092b0,
   0xc63292d0,
   0x1820c9c0,
   0x120340ef,
   0x16126e23,
   0x830068ec,
   0x60c29990,
   0x7291b005,
   0x91f0c100,
   0xb120b128,
   0xb111b113,
   0x7100b0e8,
   0xa0e8b128,
   0xb910b230,
   0x99308c80,
   0x84a2b111,
   0xc0f384b4,
   0x7100b0d1,
   0xb002b012,
   0xa0d1b111,
   0x722c7291,
   0xb013b630,
   0xb0e0b003,
   0xb1207100,
   0x92c08170,
   0x96408190,
   0xb1207100,
   0x964292c3,
   0xb1207100,
   0x71009644,
   0xa0e0b120,
   0xb633a630,
   0x7100b0d3,
   0xa0d3b113,
   0x9910c030,
   0x9930c020,
   0x7100b0d1,
   0xa0d1b111,
   0xa0037291,
   0x7263a002,
   0x73067305,
   0x72917391,
   0xc7c0a230,
   0x60c29010,
   0x65bd658d,
   0x710065c4,
   0x7393a910,
   0x8b4fb910,
   0x3d8f316f,
   0x7313720f,
   0x00000000,
   0xb231b074,
   0x970fb35d,
   0xa044a4e5,
   0x67d0b064,
   0x67e5c2b1,
   0x455722f3,
   0x971f7100,
   0x9933c0a3,
   0xa2359117,
   0xb0787100,
   0x67d4c243,
   0xc030453c,
   0x60c267f7,
   0x7860658d,
   0xc5f065be,
   0x65c46968,
   0xb115b0d5,
   0x7100c031,
   0x22508090,
   0xb07445ce,
   0x7393a910,
   0x720fb910,
   0xb2317313,
   0xb35da0d5,
   0x39208b40,
   0xa4e59700,
   0xb064a044,
   0xb23467d0,
   0x67e5c261,
   0x458722f3,
   0xb0787100,
   0x67d4c2a3,
   0x67f7c040,
   0x84b060c2,
   0x997095a0,
   0x100e8980,
   0x959084a0,
   0x89809970,
   0xc080140e,
   0xc080180e,
   0x8351180e,
   0x39213981,
   0x16310661,
   0x14101100,
   0x311e6c00,
   0x318e311e,
   0x972e398e,
   0x22308240,
   0xb0d545b0,
   0xb1157100,
   0x61a8a0d5,
   0x91e0c100,
   0x99107810,
   0x789a13e7,
   0xc540b4e5,
   0xb0029010,
   0xb006b004,
   0x78507000,
   0x90309050,
   0x90607870,
   0x70009040,
   0xb06cb235,
   0xb089b011,
   0xa0d1b4e5,
   0xb13da0d0,
   0x7000b0fd,
   0x8a439a31,
   0x31338a54,
   0x31343d63,
   0x96933d64,
   0xb05396a4,
   0x8990616b,
   0x73119300,
   0x721f7312,
   0x81707291,
   0x819092c0,
   0xc0509640,
   0xc15c67f7,
   0xc07ec31d,
   0xb0e8c008,
   0xb1287100,
   0xb230a0e8,
   0x8c80b910,
   0xb1119930,
   0x7100b0d1,
   0xb634a0d1,
   0xb002b0e1,
   0xb003b012,
   0xb121b013,
   0xa0e17100,
   0xb630a634,
   0xb0d3b113,
   0xb0e0b120,
   0xc0f084a4,
   0x663f104f,
   0x6a063914,
   0xc0f084b4,
   0x663f104f,
   0x6a0c3914,
   0xc0408c94,
   0x663f104f,
   0x6a123914,
   0x22048c94,
   0x81df4624,
   0x8210663f,
   0x421f2210,
   0xc0306219,
   0x663fc00f,
   0x62316a20,
   0xc01ec35d,
   0x663f81df,
   0x22108210,
   0x6224422c,
   0xc00fc030,
   0x6a2d663f,
   0xa0e16231,
   0x9910c030,
   0x9930c040,
   0xb0d1b111,
   0xa0d17100,
   0xa0037291,
   0x7223a002,
   0x061f60c2,
   0x148f313f,
   0x6ff214cf,
   0x39481028,
   0x14d20632,
   0x71006f23,
   0x92ceb120,
   0x70009643,
   0x67f7c060,
   0x93008990,
   0xdb007265,
   0xb31d9660,
   0x91e0c100,
   0x9320c0c0,
   0x97507b90,
   0xc3b1c100,
   0x6f13c7d2,
   0x16116e23,
   0x6a5f1612,
   0x677b67a8,
   0x22308240,
   0xb0d54670,
   0xb1157100,
   0x6266a0d5,
   0x67f7c070,
   0x7840b235,
   0x00018001,
   0x90109001,
   0x90307850,
   0x78809050,
   0x90609040,
   0x9380df20,
   0xb4e5b072,
   0xb63bb3f0,
   0x99107820,
   0x67f7c080,
   0xb10c7393,
   0xb13db14c,
   0xb10fb0fd,
   0xb008b14f,
   0xa0087100,
   0xa914b914,
   0xa910b14c,
   0x7100791e,
   0x894fb910,
   0x22c080c0,
   0x22f047f1,
   0xa0fd468c,
   0xa0447210,
   0xb074b064,
   0xb230b231,
   0x720f7232,
   0xa049a048,
   0xa009a04a,
   0x9930c200,
   0xb0d1b111,
   0xa0d17100,
   0x22208780,
   0xb0e74716,
   0xb127c1f0,
   0x6ab57100,
   0xa4e5b04f,
   0xb073a31d,
   0x9320c0c0,
   0xb041b04b,
   0x67f7c090,
   0x1e038183,
   0x895b42c2,
   0x18b08940,
   0x063c100c,
   0x31333920,
   0xc3201803,
   0x99331803,
   0x7830a910,
   0xb1119910,
   0xb0d1b910,
   0x46ff22f3,
   0x398a830a,
   0x866b395a,
   0x8650313b,
   0x39503980,
   0x1204000b,
   0x80907100,
   0x46ff2210,
   0x86528301,
   0xba3a8663,
   0x31858b25,
   0x1c543125,
   0x4af542fc,
   0x14b214a1,
   0x16135ef9,
   0x18a162f9,
   0x5af918b2,
   0x93011a13,
   0x96639652,
   0xb1271054,
   0xb23362e2,
   0x78d4b750,
   0x78c49794,
   0xc0e097a4,
   0x6b06b760,
   0x7223a0d1,
   0x8af473a3,
   0x9a14d0a0,
   0xa0e767f7,
   0x72047203,
   0x73067305,
   0x60c27291,
   0xc0d0a4e5,
   0x1cfe9930,
   0xd6a0471d,
   0xd690631f,
   0x93800000,
   0xb072b073,
   0x7ba0b04b,
   0xa0e79750,
   0xb0d1b111,
   0x7100b1b3,
   0xb04fb06f,
   0xb041b04d,
   0x9320c0c0,
   0x8af0ba39,
   0x97003110,
   0x7393b960,
   0x6b37cf00,
   0xa00ab01a,
   0x67f7c0b0,
   0x1e038183,
   0x895b433c,
   0x18b08940,
   0x18033133,
   0x180378e0,
   0xa9109933,
   0xb910b111,
   0x476722f3,
   0x89a189a0,
   0x434d1c10,
   0xb127b0e7,
   0x1201b750,
   0x80a07100,
   0x43632270,
   0x1e11b127,
   0x1611435d,
   0x89a06354,
   0x89b09790,
   0xb76097a0,
   0x80901201,
   0x43542210,
   0xb233a0e7,
   0xb750a04d,
   0x97a478f4,
   0x97947904,
   0xb760c0e0,
   0xa0d16b6f,
   0xc0c07223,
   0x720367f7,
   0x73057204,
   0x72917306,
   0xc15c60c2,
   0xc00ac00d,
   0xc070c008,
   0xc2db84ae,
   0x67996fb7,
   0x161b6b83,
   0xc0706fb7,
   0x6799c00a,
   0x84be6b89,
   0x6fb7161b,
   0xc00ac070,
   0x6b906799,
   0x6fb7161b,
   0xc00ac070,
   0x6b966799,
   0x10ef7000,
   0x313f061f,
   0x14cf148f,
   0x10286ff2,
   0x06323948,
   0x3f1a002a,
   0x6e7a3f1a,
   0x7000391e,
   0xc00dc15c,
   0xc0e0c008,
   0xc25b84ae,
   0x061f10ef,
   0x148f313f,
   0x6ff214cf,
   0x39481028,
   0x47ba0632,
   0x63c3ccca,
   0x47be1e12,
   0x63c3cc3a,
   0x47c21e22,
   0x63c3c3ca,
   0x2200c33a,
   0x10a643c7,
   0x6fb763cc,
   0x006a318a,
   0x161b6e7a,
   0x6bae391e,
   0x7000b064,
   0x1e038183,
   0x700043d0,
   0x91179933,
   0xa35d7100,
   0x73917223,
   0x72037291,
   0x72637204,
   0x9000c030,
   0x9010ffc0,
   0x73067305,
   0x895b7000,
   0x18b08940,
   0x18033123,
   0x99331813,
   0xb111a910,
   0xb0d1b910,
   0xb9147000,
   0xb14ca914,
   0x792ea910,
   0x9a006295,
   0x220089f0,
   0xb9e047f8,
   0x00007000
};

PATCH_FUN_SPEC void rf_patch_mce_bt5(void)
{
#ifdef __PATCH_NO_UNROLLING
   uint32_t i;
   for (i = 0; i < 511; i++) {
      HWREG(RFC_MCERAM_BASE + 4 * i) = patchBt5Mce[i];
   }
#else
   const uint32_t *pS = patchBt5Mce;
   volatile unsigned long *pD = &HWREG(RFC_MCERAM_BASE);
   uint32_t t1, t2, t3, t4, t5, t6, t7, t8;
   uint32_t nIterations = 63;

   do {
      t1 = *pS++;
      t2 = *pS++;
      t3 = *pS++;
      t4 = *pS++;
      t5 = *pS++;
      t6 = *pS++;
      t7 = *pS++;
      t8 = *pS++;
      *pD++ = t1;
      *pD++ = t2;
      *pD++ = t3;
      *pD++ = t4;
      *pD++ = t5;
      *pD++ = t6;
      *pD++ = t7;
      *pD++ = t8;
   } while (--nIterations);

   t1 = *pS++;
   t2 = *pS++;
   t3 = *pS++;
   t4 = *pS++;
   t5 = *pS++;
   t6 = *pS++;
   t7 = *pS++;
   *pD++ = t1;
   *pD++ = t2;
   *pD++ = t3;
   *pD++ = t4;
   *pD++ = t5;
   *pD++ = t6;
   *pD++ = t7;
#endif
}

#endif
