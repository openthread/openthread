/*
* Copyright (c) 2014 - 2015, Freescale Semiconductor, Inc.
* Copyright 2016-2019 NXP
* All rights reserved.
*
* SPDX-License-Identifier: BSD-3-Clause
*/

#ifndef JN518X_RFP_MODEM_H
#define JN518X_RFP_MODEM_H


/* extapb module */
/*-------------------------*/


/* regfile module */
/*-------------------------*/


/* test module */
/*-------------------------*/


/* dummy register */
/*----------------------*/
/* dummy register: this register can be written/read back to test the SPI interface. WARNING: after power-up, the very first SPI access will be rejected to synchronize the SPI interface! WARNING: through APB and SPI (so not accessible through the PIF, 4 more register are available; set_snap (address 0x1), reset_snap (address 0x2), and status (address 0x3) For snapshotting registers with the snapshot functionality, write the set_snap register followed by a write to the reset_snap register. */
/* data : dummy */
#define EXTAPB_REGFILE_TEST_DUMMY_DATA_MASK 0xffff
#define EXTAPB_REGFILE_TEST_DUMMY_DATA_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int data : 16;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_test_dummy;
#define EXTAPB_REGFILE_TEST_DUMMY_RST 0x0
#define EXTAPB_REGFILE_TEST_DUMMY_ADDR  0x4001d000


/* version_set_snap register */
/*----------------------*/
/* Read access : read version register. Write access : assert snap towards regfile (only applicable for SPI and APB interfaces). */
/* version : Version of IP2001. */
#define EXTAPB_REGFILE_TEST_VERSION_SET_SNAP_VERSION_MASK 0xffff
#define EXTAPB_REGFILE_TEST_VERSION_SET_SNAP_VERSION_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int version : 16;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_test_version_set_snap;
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#define EXTAPB_REGFILE_TEST_VERSION_SET_SNAP_RST 0x1
#else
#define EXTAPB_REGFILE_TEST_VERSION_SET_SNAP_RST 0x2
#endif
#define EXTAPB_REGFILE_TEST_VERSION_SET_SNAP_ADDR  0x4001d004


/* reset_snap register */
/*----------------------*/
/* When this register is written, the snap towards the regfile is de-asserted. Only applicable for SPI and APB interfaces. */
/* reset_snap : See register description. */
#define EXTAPB_REGFILE_TEST_RESET_SNAP_RESET_SNAP_MASK 0x0001
#define EXTAPB_REGFILE_TEST_RESET_SNAP_RESET_SNAP_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int reset_snap : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_test_reset_snap;
#define EXTAPB_REGFILE_TEST_RESET_SNAP_RST 0x0
#define EXTAPB_REGFILE_TEST_RESET_SNAP_ADDR  0x4001d008


/* status register */
/*----------------------*/
/* Access status register. Only applicable for SPI and APB interfaces. */
/* snack : Value of snack line */
/* wr_busy : Returns 1 whether a previous write access is still in process by the regfile */
#define EXTAPB_REGFILE_TEST_STATUS_SNACK_MASK 0x0001
#define EXTAPB_REGFILE_TEST_STATUS_SNACK_POS  0
#define EXTAPB_REGFILE_TEST_STATUS_WR_BUSY_MASK 0x0002
#define EXTAPB_REGFILE_TEST_STATUS_WR_BUSY_POS  1
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int snack : 1;
    unsigned int wr_busy : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_test_status;
#define EXTAPB_REGFILE_TEST_STATUS_RST 0x0
#define EXTAPB_REGFILE_TEST_STATUS_ADDR  0x4001d00c


typedef struct{
    t_extapb_regfile_test_dummy  dummy;
    t_extapb_regfile_test_version_set_snap  version_set_snap;
    t_extapb_regfile_test_reset_snap  reset_snap;
    t_extapb_regfile_test_status  status;
} t_extapb_regfile_test;
#define EXTAPB_REGFILE_TEST_ADDR 0x4001d000
#define EXTAPB_REGFILE_TEST ((t_extapb_regfile_test *)EXTAPB_REGFILE_TEST_ADDR)


/* clockshop module */
/*-------------------------*/


/* ref_clk_cfg register */
/*----------------------*/
/* Reference clock input (16 MHz) configuration */
/* sel : Selects the source for the 16 MHz reference clock */
#define EXTAPB_REGFILE_CLOCKSHOP_REF_CLK_CFG_SEL_MASK 0x0003
#define EXTAPB_REGFILE_CLOCKSHOP_REF_CLK_CFG_SEL_POS  0
#define EXTAPB_REGFILE_CLOCKSHOP_REF_CLK_CFG_SEL_INTERNAL 0
#define EXTAPB_REGFILE_CLOCKSHOP_REF_CLK_CFG_SEL_INTERNAL_MASK 0x0
#define EXTAPB_REGFILE_CLOCKSHOP_REF_CLK_CFG_SEL_EXTERNAL 1
#define EXTAPB_REGFILE_CLOCKSHOP_REF_CLK_CFG_SEL_EXTERNAL_MASK 0x1
#define EXTAPB_REGFILE_CLOCKSHOP_REF_CLK_CFG_SEL_RC_0 2
#define EXTAPB_REGFILE_CLOCKSHOP_REF_CLK_CFG_SEL_RC_0_MASK 0x2
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int sel : 2;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_clockshop_ref_clk_cfg;
#define EXTAPB_REGFILE_CLOCKSHOP_REF_CLK_CFG_RST 0x0
#define EXTAPB_REGFILE_CLOCKSHOP_REF_CLK_CFG_ADDR  0x4001d014


/* tx_clk_cfg register */
/*----------------------*/
/* Clockgate control of the tx datapath, overriding the clockgate control of the tmu. */
/* bb_clk_divisor :  */
/* bb_clk_en : Enables the Tx Datapath BB clock. */
#define EXTAPB_REGFILE_CLOCKSHOP_TX_CLK_CFG_BB_CLK_DIVISOR_MASK 0x003f
#define EXTAPB_REGFILE_CLOCKSHOP_TX_CLK_CFG_BB_CLK_DIVISOR_POS  0
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#else
#define EXTAPB_REGFILE_CLOCKSHOP_TX_CLK_CFG_BB_CLK_DIVISOR_ZB_2 8
#define EXTAPB_REGFILE_CLOCKSHOP_TX_CLK_CFG_BB_CLK_DIVISOR_ZB_2_MASK 0x8
#define EXTAPB_REGFILE_CLOCKSHOP_TX_CLK_CFG_BB_CLK_DIVISOR_BLE_1 8
#define EXTAPB_REGFILE_CLOCKSHOP_TX_CLK_CFG_BB_CLK_DIVISOR_BLE_1_MASK 0x8
#define EXTAPB_REGFILE_CLOCKSHOP_TX_CLK_CFG_BB_CLK_DIVISOR_BLE_2 8
#define EXTAPB_REGFILE_CLOCKSHOP_TX_CLK_CFG_BB_CLK_DIVISOR_BLE_2_MASK 0x8
#endif
#define EXTAPB_REGFILE_CLOCKSHOP_TX_CLK_CFG_BB_CLK_EN_MASK 0x0100
#define EXTAPB_REGFILE_CLOCKSHOP_TX_CLK_CFG_BB_CLK_EN_POS  8
#define EXTAPB_REGFILE_CLOCKSHOP_TX_CLK_CFG_BB_CLK_EN_EN 1
#define EXTAPB_REGFILE_CLOCKSHOP_TX_CLK_CFG_BB_CLK_EN_EN_MASK 0x100
#define EXTAPB_REGFILE_CLOCKSHOP_TX_CLK_CFG_BB_CLK_EN_DIS 0
#define EXTAPB_REGFILE_CLOCKSHOP_TX_CLK_CFG_BB_CLK_EN_DIS_MASK 0x0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int bb_clk_divisor : 6;
    unsigned int : 2;
    unsigned int bb_clk_en : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_clockshop_tx_clk_cfg;
#define EXTAPB_REGFILE_CLOCKSHOP_TX_CLK_CFG_RST 0x8
#define EXTAPB_REGFILE_CLOCKSHOP_TX_CLK_CFG_ADDR  0x4001d018


/* rx_clk_cfg register */
/*----------------------*/
/* Clockgate control of the rx datapath, overriding the clockgate control of the tmu. */
/* bb_clk_divisor :  */
/* bb_clk_en : Enables the Rx Datapath BB clock. */
#define EXTAPB_REGFILE_CLOCKSHOP_RX_CLK_CFG_BB_CLK_DIVISOR_MASK 0x003f
#define EXTAPB_REGFILE_CLOCKSHOP_RX_CLK_CFG_BB_CLK_DIVISOR_POS  0
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#else
#define EXTAPB_REGFILE_CLOCKSHOP_RX_CLK_CFG_BB_CLK_DIVISOR_ZB_2 8
#define EXTAPB_REGFILE_CLOCKSHOP_RX_CLK_CFG_BB_CLK_DIVISOR_ZB_2_MASK 0x8
#define EXTAPB_REGFILE_CLOCKSHOP_RX_CLK_CFG_BB_CLK_DIVISOR_BLE_1 8
#define EXTAPB_REGFILE_CLOCKSHOP_RX_CLK_CFG_BB_CLK_DIVISOR_BLE_1_MASK 0x8
#define EXTAPB_REGFILE_CLOCKSHOP_RX_CLK_CFG_BB_CLK_DIVISOR_BLE_2 8
#define EXTAPB_REGFILE_CLOCKSHOP_RX_CLK_CFG_BB_CLK_DIVISOR_BLE_2_MASK 0x8
#endif
#define EXTAPB_REGFILE_CLOCKSHOP_RX_CLK_CFG_BB_CLK_EN_MASK 0x0100
#define EXTAPB_REGFILE_CLOCKSHOP_RX_CLK_CFG_BB_CLK_EN_POS  8
#define EXTAPB_REGFILE_CLOCKSHOP_RX_CLK_CFG_BB_CLK_EN_EN 1
#define EXTAPB_REGFILE_CLOCKSHOP_RX_CLK_CFG_BB_CLK_EN_EN_MASK 0x100
#define EXTAPB_REGFILE_CLOCKSHOP_RX_CLK_CFG_BB_CLK_EN_DIS 0
#define EXTAPB_REGFILE_CLOCKSHOP_RX_CLK_CFG_BB_CLK_EN_DIS_MASK 0x0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int bb_clk_divisor : 6;
    unsigned int : 2;
    unsigned int bb_clk_en : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_clockshop_rx_clk_cfg;
#define EXTAPB_REGFILE_CLOCKSHOP_RX_CLK_CFG_RST 0x8
#define EXTAPB_REGFILE_CLOCKSHOP_RX_CLK_CFG_ADDR  0x4001d01c


/* synth_clk_cfg register */
/*----------------------*/
/* Digital synthesizer clock configuration */
/* sel : Selects the source for the digital synthesizer clock */
#define EXTAPB_REGFILE_CLOCKSHOP_SYNTH_CLK_CFG_SEL_MASK 0x0003
#define EXTAPB_REGFILE_CLOCKSHOP_SYNTH_CLK_CFG_SEL_POS  0
#define EXTAPB_REGFILE_CLOCKSHOP_SYNTH_CLK_CFG_SEL_PLL_DIVN_FO_SDM 0
#define EXTAPB_REGFILE_CLOCKSHOP_SYNTH_CLK_CFG_SEL_PLL_DIVN_FO_SDM_MASK 0x0
#define EXTAPB_REGFILE_CLOCKSHOP_SYNTH_CLK_CFG_SEL_REF_CLK 1
#define EXTAPB_REGFILE_CLOCKSHOP_SYNTH_CLK_CFG_SEL_REF_CLK_MASK 0x1
#define EXTAPB_REGFILE_CLOCKSHOP_SYNTH_CLK_CFG_SEL_EXTERNAL 2
#define EXTAPB_REGFILE_CLOCKSHOP_SYNTH_CLK_CFG_SEL_EXTERNAL_MASK 0x2
#define EXTAPB_REGFILE_CLOCKSHOP_SYNTH_CLK_CFG_SEL_RC_0 3
#define EXTAPB_REGFILE_CLOCKSHOP_SYNTH_CLK_CFG_SEL_RC_0_MASK 0x3
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int sel : 2;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_clockshop_synth_clk_cfg;
#define EXTAPB_REGFILE_CLOCKSHOP_SYNTH_CLK_CFG_RST 0x0
#define EXTAPB_REGFILE_CLOCKSHOP_SYNTH_CLK_CFG_ADDR  0x4001d020


typedef struct{
    t_extapb_regfile_clockshop_ref_clk_cfg  ref_clk_cfg;
    t_extapb_regfile_clockshop_tx_clk_cfg  tx_clk_cfg;
    t_extapb_regfile_clockshop_rx_clk_cfg  rx_clk_cfg;
    t_extapb_regfile_clockshop_synth_clk_cfg  synth_clk_cfg;
} t_extapb_regfile_clockshop;
#define EXTAPB_REGFILE_CLOCKSHOP_ADDR 0x4001d014
#define EXTAPB_REGFILE_CLOCKSHOP ((t_extapb_regfile_clockshop *)EXTAPB_REGFILE_CLOCKSHOP_ADDR)


/* ip2001_global module */
/*-------------------------*/


/* cfg register */
/*----------------------*/
/* IP2001 global configuration */
/* spi_sel : SPI interface selection */
/* ant_switch : External antenna switch */
#define EXTAPB_REGFILE_IP2001_GLOBAL_CFG_SPI_SEL_MASK 0x0001
#define EXTAPB_REGFILE_IP2001_GLOBAL_CFG_SPI_SEL_POS  0
#define EXTAPB_REGFILE_IP2001_GLOBAL_CFG_SPI_SEL_DEDICATED_IF 0
#define EXTAPB_REGFILE_IP2001_GLOBAL_CFG_SPI_SEL_DEDICATED_IF_MASK 0x0
#define EXTAPB_REGFILE_IP2001_GLOBAL_CFG_SPI_SEL_SWM_IF 1
#define EXTAPB_REGFILE_IP2001_GLOBAL_CFG_SPI_SEL_SWM_IF_MASK 0x1
#define EXTAPB_REGFILE_IP2001_GLOBAL_CFG_ANT_SWITCH_MASK 0x0004
#define EXTAPB_REGFILE_IP2001_GLOBAL_CFG_ANT_SWITCH_POS  2
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int spi_sel : 1;
    unsigned int : 1;
    unsigned int ant_switch : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_ip2001_global_cfg;
#define EXTAPB_REGFILE_IP2001_GLOBAL_CFG_RST 0x0
#define EXTAPB_REGFILE_IP2001_GLOBAL_CFG_ADDR  0x4001d030


typedef struct{
    unsigned int  reserved0[2];
    t_extapb_regfile_ip2001_global_cfg  cfg;
} t_extapb_regfile_ip2001_global;
#define EXTAPB_REGFILE_IP2001_GLOBAL_ADDR 0x4001d028
#define EXTAPB_REGFILE_IP2001_GLOBAL ((t_extapb_regfile_ip2001_global *)EXTAPB_REGFILE_IP2001_GLOBAL_ADDR)


/* rx_datapath module */
/*-------------------------*/


/* global register */
/*----------------------*/
/* Global configuration of the Rx Datapath */
/* rx_bank : Bank selection of Rx Datapath */
/* adc_sample_edge : Sampling edge for the data coming from the ADC. */
/* adc_en : Enable bit for the ADC-Rx Datapath interface. */
/* iq_swap_en : enable for IQ swapping at input of DC offset */
/* rx_data_range_sel : Data range selection towards ZB modem. 0 for the 10 middle bits, 1 for the 10 LSBs */
/* adc_2s_complement_en : When 1, data from ADC is considered as 2s complement format. */
#define EXTAPB_REGFILE_RX_DP_GLOBAL_RX_BANK_MASK 0x0003
#define EXTAPB_REGFILE_RX_DP_GLOBAL_RX_BANK_POS  0
#define EXTAPB_REGFILE_RX_DP_GLOBAL_ADC_SAMPLE_EDGE_MASK 0x0004
#define EXTAPB_REGFILE_RX_DP_GLOBAL_ADC_SAMPLE_EDGE_POS  2
#define EXTAPB_REGFILE_RX_DP_GLOBAL_ADC_SAMPLE_EDGE_RISING_EDGE 0
#define EXTAPB_REGFILE_RX_DP_GLOBAL_ADC_SAMPLE_EDGE_RISING_EDGE_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_GLOBAL_ADC_SAMPLE_EDGE_FALLING_EDGE 1
#define EXTAPB_REGFILE_RX_DP_GLOBAL_ADC_SAMPLE_EDGE_FALLING_EDGE_MASK 0x4
#define EXTAPB_REGFILE_RX_DP_GLOBAL_ADC_EN_MASK 0x0008
#define EXTAPB_REGFILE_RX_DP_GLOBAL_ADC_EN_POS  3
#define EXTAPB_REGFILE_RX_DP_GLOBAL_ADC_EN_DIS 0
#define EXTAPB_REGFILE_RX_DP_GLOBAL_ADC_EN_DIS_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_GLOBAL_ADC_EN_EN 1
#define EXTAPB_REGFILE_RX_DP_GLOBAL_ADC_EN_EN_MASK 0x8
#define EXTAPB_REGFILE_RX_DP_GLOBAL_IQ_SWAP_EN_MASK 0x0010
#define EXTAPB_REGFILE_RX_DP_GLOBAL_IQ_SWAP_EN_POS  4
#define EXTAPB_REGFILE_RX_DP_GLOBAL_IQ_SWAP_EN_DIS 0
#define EXTAPB_REGFILE_RX_DP_GLOBAL_IQ_SWAP_EN_DIS_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_GLOBAL_IQ_SWAP_EN_EN 1
#define EXTAPB_REGFILE_RX_DP_GLOBAL_IQ_SWAP_EN_EN_MASK 0x10
#define EXTAPB_REGFILE_RX_DP_GLOBAL_RX_DATA_RANGE_SEL_MASK 0x0060
#define EXTAPB_REGFILE_RX_DP_GLOBAL_RX_DATA_RANGE_SEL_POS  5
#define EXTAPB_REGFILE_RX_DP_GLOBAL_ADC_2S_COMPLEMENT_EN_MASK 0x0080
#define EXTAPB_REGFILE_RX_DP_GLOBAL_ADC_2S_COMPLEMENT_EN_POS  7
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rx_bank : 2;
    unsigned int adc_sample_edge : 1;
    unsigned int adc_en : 1;
    unsigned int iq_swap_en : 1;
    unsigned int rx_data_range_sel : 2;
    unsigned int adc_2s_complement_en : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_global;
#define EXTAPB_REGFILE_RX_DP_GLOBAL_RST 0xa0
#define EXTAPB_REGFILE_RX_DP_GLOBAL_ADDR  0x4001d040


/* cfg register */
/*----------------------*/
/* Group of context configuration settings (part 1) (Stored in configuration bank) */
/* dec_en : Enable bit for the decimation filter. */
/* link_active : Link or scan mode configuration bit. */
#define EXTAPB_REGFILE_RX_DP_CFG_DEC_EN_MASK 0x0001
#define EXTAPB_REGFILE_RX_DP_CFG_DEC_EN_POS  0
#define EXTAPB_REGFILE_RX_DP_CFG_DEC_EN_EN 1
#define EXTAPB_REGFILE_RX_DP_CFG_DEC_EN_EN_MASK 0x1
#define EXTAPB_REGFILE_RX_DP_CFG_DEC_EN_DIS 0
#define EXTAPB_REGFILE_RX_DP_CFG_DEC_EN_DIS_MASK 0x0
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#define EXTAPB_REGFILE_RX_DP_CFG_DEC_EN_BT_LE_1 1
#define EXTAPB_REGFILE_RX_DP_CFG_DEC_EN_BT_LE_1_MASK 0x1
#define EXTAPB_REGFILE_RX_DP_CFG_DEC_EN_BT_LE_2 0
#define EXTAPB_REGFILE_RX_DP_CFG_DEC_EN_BT_LE_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_CFG_DEC_EN_NORDIC_250 1
#define EXTAPB_REGFILE_RX_DP_CFG_DEC_EN_NORDIC_250_MASK 0x1
#define EXTAPB_REGFILE_RX_DP_CFG_DEC_EN_NORDIC_2 0
#define EXTAPB_REGFILE_RX_DP_CFG_DEC_EN_NORDIC_2_MASK 0x0
#else
#define EXTAPB_REGFILE_RX_DP_CFG_DEC_EN_ZB_2 1
#define EXTAPB_REGFILE_RX_DP_CFG_DEC_EN_ZB_2_MASK 0x1
#define EXTAPB_REGFILE_RX_DP_CFG_DEC_EN_BLE_1 1
#define EXTAPB_REGFILE_RX_DP_CFG_DEC_EN_BLE_1_MASK 0x1
#define EXTAPB_REGFILE_RX_DP_CFG_DEC_EN_BLE_2 1
#define EXTAPB_REGFILE_RX_DP_CFG_DEC_EN_BLE_2_MASK 0x1
#endif

#define EXTAPB_REGFILE_RX_DP_CFG_LINK_ACTIVE_MASK 0x0002
#define EXTAPB_REGFILE_RX_DP_CFG_LINK_ACTIVE_POS  1
#define EXTAPB_REGFILE_RX_DP_CFG_LINK_ACTIVE_INACTIVE 0
#define EXTAPB_REGFILE_RX_DP_CFG_LINK_ACTIVE_INACTIVE_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_CFG_LINK_ACTIVE_ACTIVE 1
#define EXTAPB_REGFILE_RX_DP_CFG_LINK_ACTIVE_ACTIVE_MASK 0x2
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#else
#define EXTAPB_REGFILE_RX_DP_CFG_LINK_ACTIVE_ZB_2 0
#define EXTAPB_REGFILE_RX_DP_CFG_LINK_ACTIVE_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_CFG_LINK_ACTIVE_BLE_1 0
#define EXTAPB_REGFILE_RX_DP_CFG_LINK_ACTIVE_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_CFG_LINK_ACTIVE_BLE_2 0
#define EXTAPB_REGFILE_RX_DP_CFG_LINK_ACTIVE_BLE_2_MASK 0x0
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int dec_en : 1;
    unsigned int link_active : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_cfg;
#define EXTAPB_REGFILE_RX_DP_CFG_RST 0x1
#define EXTAPB_REGFILE_RX_DP_CFG_ADDR  0x4001d044


/* bank_cfg1 register */
/*----------------------*/
/* Group of context configuration settings (part 2) (Stored in configuration bank) */
/* enable_min_ifamp_gain_settings : TBD */
/* enable_min_aaf_gain_settings : TBD */
/* symbols_per_bit : Define whether nb of symbols per bit is 1 or 4 */
#define EXTAPB_REGFILE_RX_DP_BANK_CFG1_ENABLE_MIN_IFAMP_GAIN_SETTINGS_MASK 0x0001
#define EXTAPB_REGFILE_RX_DP_BANK_CFG1_ENABLE_MIN_IFAMP_GAIN_SETTINGS_POS  0
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#else
#define EXTAPB_REGFILE_RX_DP_BANK_CFG1_ENABLE_MIN_IFAMP_GAIN_SETTINGS_ZB_2 0
#define EXTAPB_REGFILE_RX_DP_BANK_CFG1_ENABLE_MIN_IFAMP_GAIN_SETTINGS_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_BANK_CFG1_ENABLE_MIN_IFAMP_GAIN_SETTINGS_BLE_1 0
#define EXTAPB_REGFILE_RX_DP_BANK_CFG1_ENABLE_MIN_IFAMP_GAIN_SETTINGS_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_BANK_CFG1_ENABLE_MIN_IFAMP_GAIN_SETTINGS_BLE_2 0
#define EXTAPB_REGFILE_RX_DP_BANK_CFG1_ENABLE_MIN_IFAMP_GAIN_SETTINGS_BLE_2_MASK 0x0
#endif
#define EXTAPB_REGFILE_RX_DP_BANK_CFG1_ENABLE_MIN_AAF_GAIN_SETTINGS_MASK 0x0002
#define EXTAPB_REGFILE_RX_DP_BANK_CFG1_ENABLE_MIN_AAF_GAIN_SETTINGS_POS  1
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#else
#define EXTAPB_REGFILE_RX_DP_BANK_CFG1_ENABLE_MIN_AAF_GAIN_SETTINGS_ZB_2 0
#define EXTAPB_REGFILE_RX_DP_BANK_CFG1_ENABLE_MIN_AAF_GAIN_SETTINGS_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_BANK_CFG1_ENABLE_MIN_AAF_GAIN_SETTINGS_BLE_1 0
#define EXTAPB_REGFILE_RX_DP_BANK_CFG1_ENABLE_MIN_AAF_GAIN_SETTINGS_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_BANK_CFG1_ENABLE_MIN_AAF_GAIN_SETTINGS_BLE_2 0
#define EXTAPB_REGFILE_RX_DP_BANK_CFG1_ENABLE_MIN_AAF_GAIN_SETTINGS_BLE_2_MASK 0x0
#endif
#define EXTAPB_REGFILE_RX_DP_BANK_CFG1_SYMBOLS_PER_BIT_MASK 0x0004
#define EXTAPB_REGFILE_RX_DP_BANK_CFG1_SYMBOLS_PER_BIT_POS  2
#define EXTAPB_REGFILE_RX_DP_BANK_CFG1_SYMBOLS_PER_BIT_ONE 1
#define EXTAPB_REGFILE_RX_DP_BANK_CFG1_SYMBOLS_PER_BIT_ONE_MASK 0x4
#define EXTAPB_REGFILE_RX_DP_BANK_CFG1_SYMBOLS_PER_BIT_FOUR 0
#define EXTAPB_REGFILE_RX_DP_BANK_CFG1_SYMBOLS_PER_BIT_FOUR_MASK 0x0
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#define EXTAPB_REGFILE_RX_DP_BANK_CFG1_SYMBOLS_PER_BIT_BT_LE_1 1
#define EXTAPB_REGFILE_RX_DP_BANK_CFG1_SYMBOLS_PER_BIT_BT_LE_1_MASK 0x4
#define EXTAPB_REGFILE_RX_DP_BANK_CFG1_SYMBOLS_PER_BIT_BT_LE_2 1
#define EXTAPB_REGFILE_RX_DP_BANK_CFG1_SYMBOLS_PER_BIT_BT_LE_2_MASK 0x4
#define EXTAPB_REGFILE_RX_DP_BANK_CFG1_SYMBOLS_PER_BIT_NORDIC_250 0
#define EXTAPB_REGFILE_RX_DP_BANK_CFG1_SYMBOLS_PER_BIT_NORDIC_250_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_BANK_CFG1_SYMBOLS_PER_BIT_NORDIC_2 1
#define EXTAPB_REGFILE_RX_DP_BANK_CFG1_SYMBOLS_PER_BIT_NORDIC_2_MASK 0x4
#else
#define EXTAPB_REGFILE_RX_DP_BANK_CFG1_SYMBOLS_PER_BIT_ZB_2 1
#define EXTAPB_REGFILE_RX_DP_BANK_CFG1_SYMBOLS_PER_BIT_ZB_2_MASK 0x4
#define EXTAPB_REGFILE_RX_DP_BANK_CFG1_SYMBOLS_PER_BIT_BLE_1 1
#define EXTAPB_REGFILE_RX_DP_BANK_CFG1_SYMBOLS_PER_BIT_BLE_1_MASK 0x4
#define EXTAPB_REGFILE_RX_DP_BANK_CFG1_SYMBOLS_PER_BIT_BLE_2 1
#define EXTAPB_REGFILE_RX_DP_BANK_CFG1_SYMBOLS_PER_BIT_BLE_2_MASK 0x4
#endif

#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int enable_min_ifamp_gain_settings : 1;
    unsigned int enable_min_aaf_gain_settings : 1;
    unsigned int symbols_per_bit : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_bank_cfg1;
#define EXTAPB_REGFILE_RX_DP_BANK_CFG1_RST 0x4
#define EXTAPB_REGFILE_RX_DP_BANK_CFG1_ADDR  0x4001d048


/* dc_offset_cfg register */
/*----------------------*/
/* DC offset compensation configuration (Stored in configuration bank) */
/* dc_comp_en : DC offset compensation enable */
/* dc_comp_filter_en : DC offset compensation filter enable */
/* alpha : alpha towards the DC offset compensation module. */
/* dc_comp_filter_flush_en : When 1, the DC compensation HP/LP filter is flushed upon a change of the gain setting. */
/* dc_offset_upd_on_eop_en : When 1, the DC offset compensation value is updated based on the output of the DC offset compensation LP filter output at the end of the packet. */
/* dc_offset_init_decfilter_en : Configures if the Decimation filter must be initialized (at start of packet) with the DC offset value */
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_EN_MASK 0x0001
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_EN_POS  0
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_EN_DIS 0
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_EN_DIS_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_EN_EN 1
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_EN_EN_MASK 0x1
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_FILTER_EN_MASK 0x0002
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_FILTER_EN_POS  1
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_FILTER_EN_DIS 0
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_FILTER_EN_DIS_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_FILTER_EN_EN 1
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_FILTER_EN_EN_MASK 0x2
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_ALPHA_MASK 0x007c
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_ALPHA_POS  2
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_FILTER_FLUSH_EN_MASK 0x0080
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_FILTER_FLUSH_EN_POS  7
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_FILTER_FLUSH_EN_DIS 0
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_FILTER_FLUSH_EN_DIS_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_FILTER_FLUSH_EN_EN 1
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_FILTER_FLUSH_EN_EN_MASK 0x80
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_OFFSET_UPD_ON_EOP_EN_MASK 0x0100
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_OFFSET_UPD_ON_EOP_EN_POS  8
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_OFFSET_UPD_ON_EOP_EN_DIS 0
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_OFFSET_UPD_ON_EOP_EN_DIS_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_OFFSET_UPD_ON_EOP_EN_EN 1
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_OFFSET_UPD_ON_EOP_EN_EN_MASK 0x100
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_OFFSET_INIT_DECFILTER_EN_MASK 0x0200
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_OFFSET_INIT_DECFILTER_EN_POS  9
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_OFFSET_INIT_DECFILTER_EN_DIS 0
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_OFFSET_INIT_DECFILTER_EN_DIS_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_OFFSET_INIT_DECFILTER_EN_EN 1
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_OFFSET_INIT_DECFILTER_EN_EN_MASK 0x200
#else
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_EN_MASK 0x0001
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_EN_POS  0
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_EN_DIS 0
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_EN_DIS_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_EN_EN 1
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_EN_EN_MASK 0x1
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_EN_ZB_2 1
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_EN_ZB_2_MASK 0x1
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_EN_BLE_1 1
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_EN_BLE_1_MASK 0x1
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_EN_BLE_2 1
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_EN_BLE_2_MASK 0x1
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_FILTER_EN_MASK 0x0002
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_FILTER_EN_POS  1
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_FILTER_EN_DIS 0
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_FILTER_EN_DIS_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_FILTER_EN_EN 1
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_FILTER_EN_EN_MASK 0x2
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_FILTER_EN_ZB_2 1
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_FILTER_EN_ZB_2_MASK 0x2
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_FILTER_EN_BLE_1 1
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_FILTER_EN_BLE_1_MASK 0x2
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_FILTER_EN_BLE_2 1
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_FILTER_EN_BLE_2_MASK 0x2
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_ALPHA_MASK 0x007c
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_ALPHA_POS  2
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_ALPHA_ZB_2 4
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_ALPHA_ZB_2_MASK 0x10
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_ALPHA_BLE_1 4
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_ALPHA_BLE_1_MASK 0x10
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_ALPHA_BLE_2 4
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_ALPHA_BLE_2_MASK 0x10
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_FILTER_FLUSH_EN_MASK 0x0080
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_FILTER_FLUSH_EN_POS  7
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_FILTER_FLUSH_EN_DIS 0
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_FILTER_FLUSH_EN_DIS_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_FILTER_FLUSH_EN_EN 1
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_FILTER_FLUSH_EN_EN_MASK 0x80
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_FILTER_FLUSH_EN_ZB_2 1
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_FILTER_FLUSH_EN_ZB_2_MASK 0x80
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_FILTER_FLUSH_EN_BLE_1 1
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_FILTER_FLUSH_EN_BLE_1_MASK 0x80
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_FILTER_FLUSH_EN_BLE_2 1
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_COMP_FILTER_FLUSH_EN_BLE_2_MASK 0x80
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_OFFSET_UPD_ON_EOP_EN_MASK 0x0100
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_OFFSET_UPD_ON_EOP_EN_POS  8
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_OFFSET_UPD_ON_EOP_EN_DIS 0
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_OFFSET_UPD_ON_EOP_EN_DIS_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_OFFSET_UPD_ON_EOP_EN_EN 1
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_OFFSET_UPD_ON_EOP_EN_EN_MASK 0x100
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_OFFSET_UPD_ON_EOP_EN_ZB_2 0
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_OFFSET_UPD_ON_EOP_EN_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_OFFSET_UPD_ON_EOP_EN_BLE_1 0
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_OFFSET_UPD_ON_EOP_EN_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_OFFSET_UPD_ON_EOP_EN_BLE_2 0
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_OFFSET_UPD_ON_EOP_EN_BLE_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_OFFSET_INIT_DECFILTER_EN_MASK 0x0200
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_OFFSET_INIT_DECFILTER_EN_POS  9
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_OFFSET_INIT_DECFILTER_EN_DIS 0
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_OFFSET_INIT_DECFILTER_EN_DIS_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_OFFSET_INIT_DECFILTER_EN_EN 1
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_OFFSET_INIT_DECFILTER_EN_EN_MASK 0x200
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_OFFSET_INIT_DECFILTER_EN_ZB_2 1
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_OFFSET_INIT_DECFILTER_EN_ZB_2_MASK 0x200
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_OFFSET_INIT_DECFILTER_EN_BLE_1 1
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_OFFSET_INIT_DECFILTER_EN_BLE_1_MASK 0x200
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_OFFSET_INIT_DECFILTER_EN_BLE_2 1
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_DC_OFFSET_INIT_DECFILTER_EN_BLE_2_MASK 0x200
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int dc_comp_en : 1;
    unsigned int dc_comp_filter_en : 1;
    unsigned int alpha : 5;
    unsigned int dc_comp_filter_flush_en : 1;
    unsigned int dc_offset_upd_on_eop_en : 1;
    unsigned int dc_offset_init_decfilter_en : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_dc_offset_cfg;
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_RST 0x293
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_CFG_ADDR  0x4001d04c


/* clip_det_1_lev_sel register */
/*----------------------*/
/* Clip detector 1 (RF): detection level select */
/* clip_det_1_lev_sel : Clip detector 1 (RF): detection level select */
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_1_LEV_SEL_CLIP_DET_1_LEV_SEL_MASK 0x0007
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_1_LEV_SEL_CLIP_DET_1_LEV_SEL_POS  0
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_1_LEV_SEL_CLIP_DET_1_LEV_SEL_HUNDRED 0
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_1_LEV_SEL_CLIP_DET_1_LEV_SEL_HUNDRED_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_1_LEV_SEL_CLIP_DET_1_LEV_SEL_HUNDRED_FIFTY 1
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_1_LEV_SEL_CLIP_DET_1_LEV_SEL_HUNDRED_FIFTY_MASK 0x1
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_1_LEV_SEL_CLIP_DET_1_LEV_SEL_TWO_HUNDRED 2
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_1_LEV_SEL_CLIP_DET_1_LEV_SEL_TWO_HUNDRED_MASK 0x2
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_1_LEV_SEL_CLIP_DET_1_LEV_SEL_TWO_HUNDRED_FIFTY 3
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_1_LEV_SEL_CLIP_DET_1_LEV_SEL_TWO_HUNDRED_FIFTY_MASK 0x3
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int clip_det_1_lev_sel : 3;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_clip_det_1_lev_sel;
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_1_LEV_SEL_RST 0x0
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_1_LEV_SEL_ADDR  0x4001d050


/* clip_det_1_ana_agc_bypass register */
/*----------------------*/
/* clip detector 1 controls in case of analogue agc bypass */
/* clip_det_1_reset_ana_agc_bypass : clip detector 1 reset control in case of analogue agc bypass */
/* clip_det_1_en_ana_agc_bypass : clip detector 1 enable control in case of analogue agc bypass */
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_1_ANA_AGC_BYPASS_CLIP_DET_1_RESET_ANA_AGC_BYPASS_MASK 0x0001
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_1_ANA_AGC_BYPASS_CLIP_DET_1_RESET_ANA_AGC_BYPASS_POS  0
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_1_ANA_AGC_BYPASS_CLIP_DET_1_EN_ANA_AGC_BYPASS_MASK 0x0002
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_1_ANA_AGC_BYPASS_CLIP_DET_1_EN_ANA_AGC_BYPASS_POS  1
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int clip_det_1_reset_ana_agc_bypass : 1;
    unsigned int clip_det_1_en_ana_agc_bypass : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_clip_det_1_ana_agc_bypass;
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_1_ANA_AGC_BYPASS_RST 0x1
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_1_ANA_AGC_BYPASS_ADDR  0x4001d054


/* clip_det_1_timeout_up register */
/*----------------------*/
/* Timeout following a clipping detection or gain increase during which no attempt can be made to increase the gain again */
/* clip_det_1_timeout_up : Timeout following a clipping detection or gain increase during which no attempt can be made to increase the gain again */
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_1_TIMEOUT_UP_CLIP_DET_1_TIMEOUT_UP_MASK 0xffff
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_1_TIMEOUT_UP_CLIP_DET_1_TIMEOUT_UP_POS  0
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#else
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_1_TIMEOUT_UP_CLIP_DET_1_TIMEOUT_UP_ZB_2 768
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_1_TIMEOUT_UP_CLIP_DET_1_TIMEOUT_UP_ZB_2_MASK 0x300
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_1_TIMEOUT_UP_CLIP_DET_1_TIMEOUT_UP_BLE_1 768
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_1_TIMEOUT_UP_CLIP_DET_1_TIMEOUT_UP_BLE_1_MASK 0x300
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_1_TIMEOUT_UP_CLIP_DET_1_TIMEOUT_UP_BLE_2 768
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_1_TIMEOUT_UP_CLIP_DET_1_TIMEOUT_UP_BLE_2_MASK 0x300
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int clip_det_1_timeout_up : 16;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_clip_det_1_timeout_up;
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_1_TIMEOUT_UP_RST 0x300
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_1_TIMEOUT_UP_ADDR  0x4001d058


/* lna_setting register */
/*----------------------*/
/* Additional gain in case of low gain setting <4,2> */
/* lna_offset_gain_db : Additional gain in case of low gain setting <4,2> */
/* lna_iadj_set : Additional gain in case of low gain setting <4,2> */
#define EXTAPB_REGFILE_RX_DP_LNA_SETTING_LNA_OFFSET_GAIN_DB_MASK 0x007f
#define EXTAPB_REGFILE_RX_DP_LNA_SETTING_LNA_OFFSET_GAIN_DB_POS  0
#define EXTAPB_REGFILE_RX_DP_LNA_SETTING_LNA_IADJ_SET_MASK 0x0380
#define EXTAPB_REGFILE_RX_DP_LNA_SETTING_LNA_IADJ_SET_POS  7
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int lna_offset_gain_db : 7;
    unsigned int lna_iadj_set : 3;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_lna_setting;
#define EXTAPB_REGFILE_RX_DP_LNA_SETTING_RST 0x0
#define EXTAPB_REGFILE_RX_DP_LNA_SETTING_ADDR  0x4001d060


/* lna_gain_setting_ana_agc_bypass register */
/*----------------------*/
/* lna gain in case agc is bypassed */
/* lna_gain_setting_ana_agc_bypass : lna gain in case agc is bypassed */
#define EXTAPB_REGFILE_RX_DP_LNA_GAIN_SETTING_ANA_AGC_BYPASS_LNA_GAIN_SETTING_ANA_AGC_BYPASS_MASK 0x0007
#define EXTAPB_REGFILE_RX_DP_LNA_GAIN_SETTING_ANA_AGC_BYPASS_LNA_GAIN_SETTING_ANA_AGC_BYPASS_POS  0
#define EXTAPB_REGFILE_RX_DP_LNA_GAIN_SETTING_ANA_AGC_BYPASS_LNA_GAIN_SETTING_ANA_AGC_BYPASS_M21_DB 0
#define EXTAPB_REGFILE_RX_DP_LNA_GAIN_SETTING_ANA_AGC_BYPASS_LNA_GAIN_SETTING_ANA_AGC_BYPASS_M21_DB_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_LNA_GAIN_SETTING_ANA_AGC_BYPASS_LNA_GAIN_SETTING_ANA_AGC_BYPASS_M9_DB 1
#define EXTAPB_REGFILE_RX_DP_LNA_GAIN_SETTING_ANA_AGC_BYPASS_LNA_GAIN_SETTING_ANA_AGC_BYPASS_M9_DB_MASK 0x1
#define EXTAPB_REGFILE_RX_DP_LNA_GAIN_SETTING_ANA_AGC_BYPASS_LNA_GAIN_SETTING_ANA_AGC_BYPASS_M3_DB 2
#define EXTAPB_REGFILE_RX_DP_LNA_GAIN_SETTING_ANA_AGC_BYPASS_LNA_GAIN_SETTING_ANA_AGC_BYPASS_M3_DB_MASK 0x2
#define EXTAPB_REGFILE_RX_DP_LNA_GAIN_SETTING_ANA_AGC_BYPASS_LNA_GAIN_SETTING_ANA_AGC_BYPASS_3_DB 3
#define EXTAPB_REGFILE_RX_DP_LNA_GAIN_SETTING_ANA_AGC_BYPASS_LNA_GAIN_SETTING_ANA_AGC_BYPASS_3_DB_MASK 0x3
#define EXTAPB_REGFILE_RX_DP_LNA_GAIN_SETTING_ANA_AGC_BYPASS_LNA_GAIN_SETTING_ANA_AGC_BYPASS_15_DB 4
#define EXTAPB_REGFILE_RX_DP_LNA_GAIN_SETTING_ANA_AGC_BYPASS_LNA_GAIN_SETTING_ANA_AGC_BYPASS_15_DB_MASK 0x4
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int lna_gain_setting_ana_agc_bypass : 3;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_lna_gain_setting_ana_agc_bypass;
#define EXTAPB_REGFILE_RX_DP_LNA_GAIN_SETTING_ANA_AGC_BYPASS_RST 0x0
#define EXTAPB_REGFILE_RX_DP_LNA_GAIN_SETTING_ANA_AGC_BYPASS_ADDR  0x4001d064


/* clip_det_2_lev_sel register */
/*----------------------*/
/* Clip detector 2 (IF): detection level select */
/* clip_det_2_lev_sel : Clip detector 2 (IF): detection level select */
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_2_LEV_SEL_CLIP_DET_2_LEV_SEL_MASK 0x0007
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_2_LEV_SEL_CLIP_DET_2_LEV_SEL_POS  0
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_2_LEV_SEL_CLIP_DET_2_LEV_SEL_HUNDRED_FIFTY 0
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_2_LEV_SEL_CLIP_DET_2_LEV_SEL_HUNDRED_FIFTY_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_2_LEV_SEL_CLIP_DET_2_LEV_SEL_HUNDRED_SEVENTY_FIVE 1
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_2_LEV_SEL_CLIP_DET_2_LEV_SEL_HUNDRED_SEVENTY_FIVE_MASK 0x1
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_2_LEV_SEL_CLIP_DET_2_LEV_SEL_TWO_HUNDRED 2
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_2_LEV_SEL_CLIP_DET_2_LEV_SEL_TWO_HUNDRED_MASK 0x2
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_2_LEV_SEL_CLIP_DET_2_LEV_SEL_TWO_HUNDRED_TWENTY_FIVE 3
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_2_LEV_SEL_CLIP_DET_2_LEV_SEL_TWO_HUNDRED_TWENTY_FIVE_MASK 0x3
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_2_LEV_SEL_CLIP_DET_2_LEV_SEL_TWO_HUNDRED_FIFTY 4
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_2_LEV_SEL_CLIP_DET_2_LEV_SEL_TWO_HUNDRED_FIFTY_MASK 0x4
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_2_LEV_SEL_CLIP_DET_2_LEV_SEL_TWO_HUNDRED_SEVENTY_FIVE 5
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_2_LEV_SEL_CLIP_DET_2_LEV_SEL_TWO_HUNDRED_SEVENTY_FIVE_MASK 0x5
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_2_LEV_SEL_CLIP_DET_2_LEV_SEL_THREE_HUNDRED 6
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_2_LEV_SEL_CLIP_DET_2_LEV_SEL_THREE_HUNDRED_MASK 0x6
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_2_LEV_SEL_CLIP_DET_2_LEV_SEL_THREE_HUNDRED_TWENTY_FIVE 7
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_2_LEV_SEL_CLIP_DET_2_LEV_SEL_THREE_HUNDRED_TWENTY_FIVE_MASK 0x7
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int clip_det_2_lev_sel : 3;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_clip_det_2_lev_sel;
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_2_LEV_SEL_RST 0x3
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_2_LEV_SEL_ADDR  0x4001d068


/* clip_det_2_ana_agc_bypass register */
/*----------------------*/
/* clip detector 1 controls in case of analogue agc bypass */
/* clip_det_2_reset_ana_agc_bypass : clip detector 2 reset control in case of analogue agc bypass */
/* clip_det_2_en_ana_agc_bypass : clip detector 2 enable control in case of analogue agc bypass */
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_2_ANA_AGC_BYPASS_CLIP_DET_2_RESET_ANA_AGC_BYPASS_MASK 0x0001
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_2_ANA_AGC_BYPASS_CLIP_DET_2_RESET_ANA_AGC_BYPASS_POS  0
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_2_ANA_AGC_BYPASS_CLIP_DET_2_EN_ANA_AGC_BYPASS_MASK 0x0002
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_2_ANA_AGC_BYPASS_CLIP_DET_2_EN_ANA_AGC_BYPASS_POS  1
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int clip_det_2_reset_ana_agc_bypass : 1;
    unsigned int clip_det_2_en_ana_agc_bypass : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_clip_det_2_ana_agc_bypass;
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_2_ANA_AGC_BYPASS_RST 0x1
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_2_ANA_AGC_BYPASS_ADDR  0x4001d06c


/* clip_det_2_bucket_decr register */
/*----------------------*/
/* Leaky bucket decrement (clip detector 2) */
/* clip_det_2_bucket_decr : Leaky bucket decrement (clip detector 2) */
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_2_BUCKET_DECR_CLIP_DET_2_BUCKET_DECR_MASK 0x000f
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_2_BUCKET_DECR_CLIP_DET_2_BUCKET_DECR_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int clip_det_2_bucket_decr : 4;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_clip_det_2_bucket_decr;
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_2_BUCKET_DECR_RST 0x1
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_2_BUCKET_DECR_ADDR  0x4001d070


/* clip_det_2_bucket_incr register */
/*----------------------*/
/* Leaky bucket increment (clip detector 2) */
/* clip_det_2_bucket_incr : Leaky bucket increment in case of overload detection (clip detector 2) */
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_2_BUCKET_INCR_CLIP_DET_2_BUCKET_INCR_MASK 0x003f
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_2_BUCKET_INCR_CLIP_DET_2_BUCKET_INCR_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int clip_det_2_bucket_incr : 6;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_clip_det_2_bucket_incr;
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_2_BUCKET_INCR_RST 0xc
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_2_BUCKET_INCR_ADDR  0x4001d074


/* clip_det_2_bucket_threshold register */
/*----------------------*/
/* Leaky bucket threshold (clip detector 2) */
/* clip_det_2_bucket_threshold : Leaky bucket threshold (clip detector 2) */
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_2_BUCKET_THRESHOLD_CLIP_DET_2_BUCKET_THRESHOLD_MASK 0x007f
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_2_BUCKET_THRESHOLD_CLIP_DET_2_BUCKET_THRESHOLD_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int clip_det_2_bucket_threshold : 7;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_clip_det_2_bucket_threshold;
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_2_BUCKET_THRESHOLD_RST 0x10
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_2_BUCKET_THRESHOLD_ADDR  0x4001d078


/* clip_det_2_timeout register */
/*----------------------*/
/* Timeout following a clipping detection during which clipping events are ignored and further gain reduction of the IFAMP is blocked */
/* clip_det_2_timeout : Timeout following a clipping detection during which clipping events are ignored and further gain reduction of the IFAMP is blocked */
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_2_TIMEOUT_CLIP_DET_2_TIMEOUT_MASK 0x003f
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_2_TIMEOUT_CLIP_DET_2_TIMEOUT_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int clip_det_2_timeout : 6;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_clip_det_2_timeout;
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_2_TIMEOUT_RST 0x0
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_2_TIMEOUT_ADDR  0x4001d07c


/* clip_det_3_window_size register */
/*----------------------*/
/* Window (16 MHz samples) during which saturated samples are counted */
/* clip_det_3_window_size : Window (16 MHz samples) during which saturated samples are counted */
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_3_WINDOW_SIZE_CLIP_DET_3_WINDOW_SIZE_MASK 0x001f
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_3_WINDOW_SIZE_CLIP_DET_3_WINDOW_SIZE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int clip_det_3_window_size : 5;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_clip_det_3_window_size;
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_3_WINDOW_SIZE_RST 0x10
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_3_WINDOW_SIZE_ADDR  0x4001d080


/* clip_det_3_thr_1 register */
/*----------------------*/
/* If number of saturated samples > 0 and < clip_det_3_thr_1, AAF gain is reduced with 3 dB */
/* clip_det_3_thr_1 : If number of saturated samples > 0 and < clip_det_3_thr_1, AAF gain is reduced with 3 dB */
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_3_THR_1_CLIP_DET_3_THR_1_MASK 0x001f
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_3_THR_1_CLIP_DET_3_THR_1_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int clip_det_3_thr_1 : 5;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_clip_det_3_thr_1;
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_3_THR_1_RST 0x3
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_3_THR_1_ADDR  0x4001d084


/* clip_det_3_thr_2 register */
/*----------------------*/
/* If number of saturated samples >= clip_det_3_thr_1 and < clip_det_3_thr_2, AAF gain is reduced with 6 dB. If number of saturated samples >= clip_det_3_thr_2, AAF gain is reduced with 9 dB. */
/* clip_det_3_thr_2 : If number of saturated samples >= clip_det_3_thr_1 and < clip_det_3_thr_2, AAF gain is reduced with 6 dB. If number of saturated samples >= clip_det_3_thr_2, AAF gain is reduced with 9 dB. */
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_3_THR_2_CLIP_DET_3_THR_2_MASK 0x001f
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_3_THR_2_CLIP_DET_3_THR_2_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int clip_det_3_thr_2 : 5;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_clip_det_3_thr_2;
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_3_THR_2_RST 0x5
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_3_THR_2_ADDR  0x4001d088


/* clip_det_3_timeout register */
/*----------------------*/
/* Timeout following a clipping detection during which clipping events are ignored and further gain reduction of the AAF is blocked */
/* clip_det_3_timeout : Timeout following a clipping detection during which clipping events are ignored and further gain reduction of the AAF is blocked */
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_3_TIMEOUT_CLIP_DET_3_TIMEOUT_MASK 0x003f
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_3_TIMEOUT_CLIP_DET_3_TIMEOUT_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int clip_det_3_timeout : 6;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_clip_det_3_timeout;
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_3_TIMEOUT_RST 0x0
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_3_TIMEOUT_ADDR  0x4001d08c


/* ifamp_gain_setting_ana_agc_bypass register */
/*----------------------*/
/* IFAMP gain in case agc is bypassed */
/* ifamp_gain_setting_ana_agc_bypass : IFAMP gain in case agc is bypassed */
#define EXTAPB_REGFILE_RX_DP_IFAMP_GAIN_SETTING_ANA_AGC_BYPASS_IFAMP_GAIN_SETTING_ANA_AGC_BYPASS_MASK 0x0003
#define EXTAPB_REGFILE_RX_DP_IFAMP_GAIN_SETTING_ANA_AGC_BYPASS_IFAMP_GAIN_SETTING_ANA_AGC_BYPASS_POS  0
#define EXTAPB_REGFILE_RX_DP_IFAMP_GAIN_SETTING_ANA_AGC_BYPASS_IFAMP_GAIN_SETTING_ANA_AGC_BYPASS_0_DB 0
#define EXTAPB_REGFILE_RX_DP_IFAMP_GAIN_SETTING_ANA_AGC_BYPASS_IFAMP_GAIN_SETTING_ANA_AGC_BYPASS_0_DB_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_IFAMP_GAIN_SETTING_ANA_AGC_BYPASS_IFAMP_GAIN_SETTING_ANA_AGC_BYPASS_15_DB 1
#define EXTAPB_REGFILE_RX_DP_IFAMP_GAIN_SETTING_ANA_AGC_BYPASS_IFAMP_GAIN_SETTING_ANA_AGC_BYPASS_15_DB_MASK 0x1
#define EXTAPB_REGFILE_RX_DP_IFAMP_GAIN_SETTING_ANA_AGC_BYPASS_IFAMP_GAIN_SETTING_ANA_AGC_BYPASS_26_DB 2
#define EXTAPB_REGFILE_RX_DP_IFAMP_GAIN_SETTING_ANA_AGC_BYPASS_IFAMP_GAIN_SETTING_ANA_AGC_BYPASS_26_DB_MASK 0x2
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int ifamp_gain_setting_ana_agc_bypass : 2;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_ifamp_gain_setting_ana_agc_bypass;
#define EXTAPB_REGFILE_RX_DP_IFAMP_GAIN_SETTING_ANA_AGC_BYPASS_RST 0x2
#define EXTAPB_REGFILE_RX_DP_IFAMP_GAIN_SETTING_ANA_AGC_BYPASS_ADDR  0x4001d090


/* ifamp_fc_set register */
/*----------------------*/
/* IFAMP cut-off frequency */
/* ifamp_fc_set : Column 2 */
#define EXTAPB_REGFILE_RX_DP_IFAMP_FC_SET_IFAMP_FC_SET_MASK 0x0003
#define EXTAPB_REGFILE_RX_DP_IFAMP_FC_SET_IFAMP_FC_SET_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int ifamp_fc_set : 2;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_ifamp_fc_set;
#define EXTAPB_REGFILE_RX_DP_IFAMP_FC_SET_RST 0x0
#define EXTAPB_REGFILE_RX_DP_IFAMP_FC_SET_ADDR  0x4001d094


/* ifamp_ibias_set register */
/*----------------------*/
/* IFAMP ibias control signal; dependent on gain setting, desired bandwidth and current budget. Column selector is ifamp_gain_setting or ifamp_gain_setting_ana_agc_bypass. */
/* ifamp_ibias_set0 : Column 0 */
/* ifamp_ibias_set1 : Column 1 */
/* ifamp_ibias_set2 : Column 2 */
#define EXTAPB_REGFILE_RX_DP_IFAMP_IBIAS_SET_IFAMP_IBIAS_SET0_MASK 0x001f
#define EXTAPB_REGFILE_RX_DP_IFAMP_IBIAS_SET_IFAMP_IBIAS_SET0_POS  0
#define EXTAPB_REGFILE_RX_DP_IFAMP_IBIAS_SET_IFAMP_IBIAS_SET1_MASK 0x03e0
#define EXTAPB_REGFILE_RX_DP_IFAMP_IBIAS_SET_IFAMP_IBIAS_SET1_POS  5
#define EXTAPB_REGFILE_RX_DP_IFAMP_IBIAS_SET_IFAMP_IBIAS_SET2_MASK 0x7c00
#define EXTAPB_REGFILE_RX_DP_IFAMP_IBIAS_SET_IFAMP_IBIAS_SET2_POS  10
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int ifamp_ibias_set0 : 5;
    unsigned int ifamp_ibias_set1 : 5;
    unsigned int ifamp_ibias_set2 : 5;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_ifamp_ibias_set;
#define EXTAPB_REGFILE_RX_DP_IFAMP_IBIAS_SET_RST 0x28a1
#define EXTAPB_REGFILE_RX_DP_IFAMP_IBIAS_SET_ADDR  0x4001d098


/* ifamp_bypass_set_ana_agc_bypass register */
/*----------------------*/
/* ifamp_bypass_set control signal in case agc state machine is bypassed */
/* ifamp_bypass_set_ana_agc_bypass : ifamp_bypass_set control signal in case agc state machine is bypassed */
#define EXTAPB_REGFILE_RX_DP_IFAMP_BYPASS_SET_ANA_AGC_BYPASS_IFAMP_BYPASS_SET_ANA_AGC_BYPASS_MASK 0x0001
#define EXTAPB_REGFILE_RX_DP_IFAMP_BYPASS_SET_ANA_AGC_BYPASS_IFAMP_BYPASS_SET_ANA_AGC_BYPASS_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int ifamp_bypass_set_ana_agc_bypass : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_ifamp_bypass_set_ana_agc_bypass;
#define EXTAPB_REGFILE_RX_DP_IFAMP_BYPASS_SET_ANA_AGC_BYPASS_RST 0x0
#define EXTAPB_REGFILE_RX_DP_IFAMP_BYPASS_SET_ANA_AGC_BYPASS_ADDR  0x4001d09c


/* aaf_gain_setting_ana_agc_bypass register */
/*----------------------*/
/* AAF gain in case agc is bypassed */
/* aaf_gain_setting_ana_agc_bypass : AAF gain in case agc is bypassed */
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_SETTING_ANA_AGC_BYPASS_AAF_GAIN_SETTING_ANA_AGC_BYPASS_MASK 0x0007
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_SETTING_ANA_AGC_BYPASS_AAF_GAIN_SETTING_ANA_AGC_BYPASS_POS  0
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_SETTING_ANA_AGC_BYPASS_AAF_GAIN_SETTING_ANA_AGC_BYPASS_0_DB 0
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_SETTING_ANA_AGC_BYPASS_AAF_GAIN_SETTING_ANA_AGC_BYPASS_0_DB_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_SETTING_ANA_AGC_BYPASS_AAF_GAIN_SETTING_ANA_AGC_BYPASS_3_DB 1
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_SETTING_ANA_AGC_BYPASS_AAF_GAIN_SETTING_ANA_AGC_BYPASS_3_DB_MASK 0x1
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_SETTING_ANA_AGC_BYPASS_AAF_GAIN_SETTING_ANA_AGC_BYPASS_6_DB 2
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_SETTING_ANA_AGC_BYPASS_AAF_GAIN_SETTING_ANA_AGC_BYPASS_6_DB_MASK 0x2
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_SETTING_ANA_AGC_BYPASS_AAF_GAIN_SETTING_ANA_AGC_BYPASS_9_DB 3
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_SETTING_ANA_AGC_BYPASS_AAF_GAIN_SETTING_ANA_AGC_BYPASS_9_DB_MASK 0x3
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_SETTING_ANA_AGC_BYPASS_AAF_GAIN_SETTING_ANA_AGC_BYPASS_12_DB 4
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_SETTING_ANA_AGC_BYPASS_AAF_GAIN_SETTING_ANA_AGC_BYPASS_12_DB_MASK 0x4
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_SETTING_ANA_AGC_BYPASS_AAF_GAIN_SETTING_ANA_AGC_BYPASS_15_DB 5
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_SETTING_ANA_AGC_BYPASS_AAF_GAIN_SETTING_ANA_AGC_BYPASS_15_DB_MASK 0x5
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_SETTING_ANA_AGC_BYPASS_AAF_GAIN_SETTING_ANA_AGC_BYPASS_18_DB 6
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_SETTING_ANA_AGC_BYPASS_AAF_GAIN_SETTING_ANA_AGC_BYPASS_18_DB_MASK 0x6
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int aaf_gain_setting_ana_agc_bypass : 3;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_aaf_gain_setting_ana_agc_bypass;
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_SETTING_ANA_AGC_BYPASS_RST 0x6
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_SETTING_ANA_AGC_BYPASS_ADDR  0x4001d0a0


/* aaf_fc_set register */
/*----------------------*/
/* AAF cut-off frequency (Stored in configuration bank) */
/* aaf_fc_set : AAF cut-off frequency */
#define EXTAPB_REGFILE_RX_DP_AAF_FC_SET_AAF_FC_SET_MASK 0x0003
#define EXTAPB_REGFILE_RX_DP_AAF_FC_SET_AAF_FC_SET_POS  0
#define EXTAPB_REGFILE_RX_DP_AAF_FC_SET_AAF_FC_SET_2_5_MHZ 0
#define EXTAPB_REGFILE_RX_DP_AAF_FC_SET_AAF_FC_SET_2_5_MHZ_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_AAF_FC_SET_AAF_FC_SET_1_4_MHZ 1
#define EXTAPB_REGFILE_RX_DP_AAF_FC_SET_AAF_FC_SET_1_4_MHZ_MASK 0x1
#define EXTAPB_REGFILE_RX_DP_AAF_FC_SET_AAF_FC_SET_1_1_MHZ 3
#define EXTAPB_REGFILE_RX_DP_AAF_FC_SET_AAF_FC_SET_1_1_MHZ_MASK 0x3
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#else
#define EXTAPB_REGFILE_RX_DP_AAF_FC_SET_AAF_FC_SET_ZB_2 0
#define EXTAPB_REGFILE_RX_DP_AAF_FC_SET_AAF_FC_SET_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_AAF_FC_SET_AAF_FC_SET_BLE_1 0
#define EXTAPB_REGFILE_RX_DP_AAF_FC_SET_AAF_FC_SET_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_AAF_FC_SET_AAF_FC_SET_BLE_2 0
#define EXTAPB_REGFILE_RX_DP_AAF_FC_SET_AAF_FC_SET_BLE_2_MASK 0x0
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int aaf_fc_set : 2;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_aaf_fc_set;
#define EXTAPB_REGFILE_RX_DP_AAF_FC_SET_RST 0x0
#define EXTAPB_REGFILE_RX_DP_AAF_FC_SET_ADDR  0x4001d0a4


/* aaf_q_set register */
/*----------------------*/
/* AAF Q factor. Column selector is based on aaf_fc_set. Values: 0..2 */
/* aaf_q_set0 : Column 0 */
/* aaf_q_set1 : Column 1 */
/* aaf_q_set2 : Column 2 */
#define EXTAPB_REGFILE_RX_DP_AAF_Q_SET_AAF_Q_SET0_MASK 0x0003
#define EXTAPB_REGFILE_RX_DP_AAF_Q_SET_AAF_Q_SET0_POS  0
#define EXTAPB_REGFILE_RX_DP_AAF_Q_SET_AAF_Q_SET1_MASK 0x000c
#define EXTAPB_REGFILE_RX_DP_AAF_Q_SET_AAF_Q_SET1_POS  2
#define EXTAPB_REGFILE_RX_DP_AAF_Q_SET_AAF_Q_SET2_MASK 0x0030
#define EXTAPB_REGFILE_RX_DP_AAF_Q_SET_AAF_Q_SET2_POS  4
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int aaf_q_set0 : 2;
    unsigned int aaf_q_set1 : 2;
    unsigned int aaf_q_set2 : 2;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_aaf_q_set;
#define EXTAPB_REGFILE_RX_DP_AAF_Q_SET_RST 0x3a
#define EXTAPB_REGFILE_RX_DP_AAF_Q_SET_ADDR  0x4001d0a8


/* aaf_opam1i_set0 register */
/*----------------------*/
/* AAF tail current of OTA stage 1. Row selector is based on aaf_fc_set. Column selector is aaf_gain_setting or aaf_gain_setting_ana_agc_bypass. */
/* aaf_opam1i_set0 : Row 0 */
/* aaf_opam1i_set1 : Row 1 */
/* aaf_opam1i_set2 : Row 2 */
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET0_AAF_OPAM1I_SET0_MASK 0x000f
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET0_AAF_OPAM1I_SET0_POS  0
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET0_AAF_OPAM1I_SET1_MASK 0x00f0
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET0_AAF_OPAM1I_SET1_POS  4
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET0_AAF_OPAM1I_SET2_MASK 0x0f00
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET0_AAF_OPAM1I_SET2_POS  8
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int aaf_opam1i_set0 : 4;
    unsigned int aaf_opam1i_set1 : 4;
    unsigned int aaf_opam1i_set2 : 4;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_aaf_opam1i_set0;
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET0_RST 0x666
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET0_ADDR  0x4001d0ac


/* aaf_opam1i_set1 register */
/*----------------------*/
/* AAF tail current of OTA stage 1. Row selector is based on aaf_fc_set. Column selector is aaf_gain_setting or aaf_gain_setting_ana_agc_bypass. */
/* aaf_opam1i_set0 : Row 0 */
/* aaf_opam1i_set1 : Row 1 */
/* aaf_opam1i_set2 : Row 2 */
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET1_AAF_OPAM1I_SET0_MASK 0x000f
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET1_AAF_OPAM1I_SET0_POS  0
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET1_AAF_OPAM1I_SET1_MASK 0x00f0
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET1_AAF_OPAM1I_SET1_POS  4
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET1_AAF_OPAM1I_SET2_MASK 0x0f00
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET1_AAF_OPAM1I_SET2_POS  8
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int aaf_opam1i_set0 : 4;
    unsigned int aaf_opam1i_set1 : 4;
    unsigned int aaf_opam1i_set2 : 4;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_aaf_opam1i_set1;
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET1_RST 0x666
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET1_ADDR  0x4001d0b0


/* aaf_opam1i_set2 register */
/*----------------------*/
/* AAF tail current of OTA stage 1. Row selector is based on aaf_fc_set. Column selector is aaf_gain_setting or aaf_gain_setting_ana_agc_bypass. */
/* aaf_opam1i_set0 : Row 0 */
/* aaf_opam1i_set1 : Row 1 */
/* aaf_opam1i_set2 : Row 2 */
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET2_AAF_OPAM1I_SET0_MASK 0x000f
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET2_AAF_OPAM1I_SET0_POS  0
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET2_AAF_OPAM1I_SET1_MASK 0x00f0
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET2_AAF_OPAM1I_SET1_POS  4
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET2_AAF_OPAM1I_SET2_MASK 0x0f00
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET2_AAF_OPAM1I_SET2_POS  8
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int aaf_opam1i_set0 : 4;
    unsigned int aaf_opam1i_set1 : 4;
    unsigned int aaf_opam1i_set2 : 4;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_aaf_opam1i_set2;
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET2_RST 0x666
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET2_ADDR  0x4001d0b4


/* aaf_opam1i_set3 register */
/*----------------------*/
/* AAF tail current of OTA stage 1. Row selector is based on aaf_fc_set. Column selector is aaf_gain_setting or aaf_gain_setting_ana_agc_bypass. */
/* aaf_opam1i_set0 : Row 0 */
/* aaf_opam1i_set1 : Row 1 */
/* aaf_opam1i_set2 : Row 2 */
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET3_AAF_OPAM1I_SET0_MASK 0x000f
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET3_AAF_OPAM1I_SET0_POS  0
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET3_AAF_OPAM1I_SET1_MASK 0x00f0
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET3_AAF_OPAM1I_SET1_POS  4
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET3_AAF_OPAM1I_SET2_MASK 0x0f00
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET3_AAF_OPAM1I_SET2_POS  8
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int aaf_opam1i_set0 : 4;
    unsigned int aaf_opam1i_set1 : 4;
    unsigned int aaf_opam1i_set2 : 4;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_aaf_opam1i_set3;
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET3_RST 0x666
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET3_ADDR  0x4001d0b8


/* aaf_opam1i_set4 register */
/*----------------------*/
/* AAF tail current of OTA stage 1. Row selector is based on aaf_fc_set. Column selector is aaf_gain_setting or aaf_gain_setting_ana_agc_bypass. */
/* aaf_opam1i_set0 : Row 0 */
/* aaf_opam1i_set1 : Row 1 */
/* aaf_opam1i_set2 : Row 2 */
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET4_AAF_OPAM1I_SET0_MASK 0x000f
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET4_AAF_OPAM1I_SET0_POS  0
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET4_AAF_OPAM1I_SET1_MASK 0x00f0
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET4_AAF_OPAM1I_SET1_POS  4
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET4_AAF_OPAM1I_SET2_MASK 0x0f00
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET4_AAF_OPAM1I_SET2_POS  8
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int aaf_opam1i_set0 : 4;
    unsigned int aaf_opam1i_set1 : 4;
    unsigned int aaf_opam1i_set2 : 4;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_aaf_opam1i_set4;
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET4_RST 0x866
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET4_ADDR  0x4001d0bc


/* aaf_opam1i_set5 register */
/*----------------------*/
/* AAF tail current of OTA stage 1. Row selector is based on aaf_fc_set. Column selector is aaf_gain_setting or aaf_gain_setting_ana_agc_bypass. */
/* aaf_opam1i_set0 : Row 0 */
/* aaf_opam1i_set1 : Row 1 */
/* aaf_opam1i_set2 : Row 2 */
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET5_AAF_OPAM1I_SET0_MASK 0x000f
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET5_AAF_OPAM1I_SET0_POS  0
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET5_AAF_OPAM1I_SET1_MASK 0x00f0
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET5_AAF_OPAM1I_SET1_POS  4
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET5_AAF_OPAM1I_SET2_MASK 0x0f00
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET5_AAF_OPAM1I_SET2_POS  8
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int aaf_opam1i_set0 : 4;
    unsigned int aaf_opam1i_set1 : 4;
    unsigned int aaf_opam1i_set2 : 4;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_aaf_opam1i_set5;
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET5_RST 0x866
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET5_ADDR  0x4001d0c0


/* aaf_opam1i_set6 register */
/*----------------------*/
/* AAF tail current of OTA stage 1. Row selector is based on aaf_fc_set. Column selector is aaf_gain_setting or aaf_gain_setting_ana_agc_bypass. */
/* aaf_opam1i_set0 : Row 0 */
/* aaf_opam1i_set1 : Row 1 */
/* aaf_opam1i_set2 : Row 2 */
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET6_AAF_OPAM1I_SET0_MASK 0x000f
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET6_AAF_OPAM1I_SET0_POS  0
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET6_AAF_OPAM1I_SET1_MASK 0x00f0
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET6_AAF_OPAM1I_SET1_POS  4
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET6_AAF_OPAM1I_SET2_MASK 0x0f00
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET6_AAF_OPAM1I_SET2_POS  8
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int aaf_opam1i_set0 : 4;
    unsigned int aaf_opam1i_set1 : 4;
    unsigned int aaf_opam1i_set2 : 4;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_aaf_opam1i_set6;
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET6_RST 0xa88
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM1I_SET6_ADDR  0x4001d0c4


/* aaf_opam2i_set0 register */
/*----------------------*/
/* AAF tail current of OTA stage 2. Row selector is based on aaf_fc_set. Column selector is aaf_gain_setting or aaf_gain_setting_ana_agc_bypass. */
/* aaf_opam2i_set0 : Row 0 */
/* aaf_opam2i_set1 : Row 1 */
/* aaf_opam2i_set2 : Row 2 */
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET0_AAF_OPAM2I_SET0_MASK 0x000f
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET0_AAF_OPAM2I_SET0_POS  0
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET0_AAF_OPAM2I_SET1_MASK 0x00f0
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET0_AAF_OPAM2I_SET1_POS  4
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET0_AAF_OPAM2I_SET2_MASK 0x0f00
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET0_AAF_OPAM2I_SET2_POS  8
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int aaf_opam2i_set0 : 4;
    unsigned int aaf_opam2i_set1 : 4;
    unsigned int aaf_opam2i_set2 : 4;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_aaf_opam2i_set0;
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET0_RST 0x888
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET0_ADDR  0x4001d0c8


/* aaf_opam2i_set1 register */
/*----------------------*/
/* AAF tail current of OTA stage 2. Row selector is based on aaf_fc_set. Column selector is aaf_gain_setting or aaf_gain_setting_ana_agc_bypass. */
/* aaf_opam2i_set0 : Row 0 */
/* aaf_opam2i_set1 : Row 1 */
/* aaf_opam2i_set2 : Row 2 */
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET1_AAF_OPAM2I_SET0_MASK 0x000f
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET1_AAF_OPAM2I_SET0_POS  0
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET1_AAF_OPAM2I_SET1_MASK 0x00f0
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET1_AAF_OPAM2I_SET1_POS  4
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET1_AAF_OPAM2I_SET2_MASK 0x0f00
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET1_AAF_OPAM2I_SET2_POS  8
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int aaf_opam2i_set0 : 4;
    unsigned int aaf_opam2i_set1 : 4;
    unsigned int aaf_opam2i_set2 : 4;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_aaf_opam2i_set1;
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET1_RST 0x888
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET1_ADDR  0x4001d0cc


/* aaf_opam2i_set2 register */
/*----------------------*/
/* AAF tail current of OTA stage 2. Row selector is based on aaf_fc_set. Column selector is aaf_gain_setting or aaf_gain_setting_ana_agc_bypass. */
/* aaf_opam2i_set0 : Row 0 */
/* aaf_opam2i_set1 : Row 1 */
/* aaf_opam2i_set2 : Row 2 */
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET2_AAF_OPAM2I_SET0_MASK 0x000f
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET2_AAF_OPAM2I_SET0_POS  0
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET2_AAF_OPAM2I_SET1_MASK 0x00f0
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET2_AAF_OPAM2I_SET1_POS  4
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET2_AAF_OPAM2I_SET2_MASK 0x0f00
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET2_AAF_OPAM2I_SET2_POS  8
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int aaf_opam2i_set0 : 4;
    unsigned int aaf_opam2i_set1 : 4;
    unsigned int aaf_opam2i_set2 : 4;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_aaf_opam2i_set2;
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET2_RST 0x888
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET2_ADDR  0x4001d0d0


/* aaf_opam2i_set3 register */
/*----------------------*/
/* AAF tail current of OTA stage 2. Row selector is based on aaf_fc_set. Column selector is aaf_gain_setting or aaf_gain_setting_ana_agc_bypass. */
/* aaf_opam2i_set0 : Row 0 */
/* aaf_opam2i_set1 : Row 1 */
/* aaf_opam2i_set2 : Row 2 */
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET3_AAF_OPAM2I_SET0_MASK 0x000f
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET3_AAF_OPAM2I_SET0_POS  0
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET3_AAF_OPAM2I_SET1_MASK 0x00f0
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET3_AAF_OPAM2I_SET1_POS  4
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET3_AAF_OPAM2I_SET2_MASK 0x0f00
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET3_AAF_OPAM2I_SET2_POS  8
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int aaf_opam2i_set0 : 4;
    unsigned int aaf_opam2i_set1 : 4;
    unsigned int aaf_opam2i_set2 : 4;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_aaf_opam2i_set3;
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET3_RST 0x888
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET3_ADDR  0x4001d0d4


/* aaf_opam2i_set4 register */
/*----------------------*/
/* AAF tail current of OTA stage 2. Row selector is based on aaf_fc_set. Column selector is aaf_gain_setting or aaf_gain_setting_ana_agc_bypass. */
/* aaf_opam2i_set0 : Row 0 */
/* aaf_opam2i_set1 : Row 1 */
/* aaf_opam2i_set2 : Row 2 */
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET4_AAF_OPAM2I_SET0_MASK 0x000f
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET4_AAF_OPAM2I_SET0_POS  0
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET4_AAF_OPAM2I_SET1_MASK 0x00f0
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET4_AAF_OPAM2I_SET1_POS  4
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET4_AAF_OPAM2I_SET2_MASK 0x0f00
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET4_AAF_OPAM2I_SET2_POS  8
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int aaf_opam2i_set0 : 4;
    unsigned int aaf_opam2i_set1 : 4;
    unsigned int aaf_opam2i_set2 : 4;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_aaf_opam2i_set4;
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET4_RST 0xa88
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET4_ADDR  0x4001d0d8


/* aaf_opam2i_set5 register */
/*----------------------*/
/* AAF tail current of OTA stage 2. Row selector is based on aaf_fc_set. Column selector is aaf_gain_setting or aaf_gain_setting_ana_agc_bypass. */
/* aaf_opam2i_set0 : Row 0 */
/* aaf_opam2i_set1 : Row 1 */
/* aaf_opam2i_set2 : Row 2 */
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET5_AAF_OPAM2I_SET0_MASK 0x000f
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET5_AAF_OPAM2I_SET0_POS  0
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET5_AAF_OPAM2I_SET1_MASK 0x00f0
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET5_AAF_OPAM2I_SET1_POS  4
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET5_AAF_OPAM2I_SET2_MASK 0x0f00
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET5_AAF_OPAM2I_SET2_POS  8
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int aaf_opam2i_set0 : 4;
    unsigned int aaf_opam2i_set1 : 4;
    unsigned int aaf_opam2i_set2 : 4;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_aaf_opam2i_set5;
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET5_RST 0xa88
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET5_ADDR  0x4001d0dc


/* aaf_opam2i_set6 register */
/*----------------------*/
/* AAF tail current of OTA stage 2. Row selector is based on aaf_fc_set. Column selector is aaf_gain_setting or aaf_gain_setting_ana_agc_bypass. */
/* aaf_opam2i_set0 : Row 0 */
/* aaf_opam2i_set1 : Row 1 */
/* aaf_opam2i_set2 : Row 2 */
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET6_AAF_OPAM2I_SET0_MASK 0x000f
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET6_AAF_OPAM2I_SET0_POS  0
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET6_AAF_OPAM2I_SET1_MASK 0x00f0
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET6_AAF_OPAM2I_SET1_POS  4
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET6_AAF_OPAM2I_SET2_MASK 0x0f00
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET6_AAF_OPAM2I_SET2_POS  8
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int aaf_opam2i_set0 : 4;
    unsigned int aaf_opam2i_set1 : 4;
    unsigned int aaf_opam2i_set2 : 4;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_aaf_opam2i_set6;
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET6_RST 0xaaa
#define EXTAPB_REGFILE_RX_DP_AAF_OPAM2I_SET6_ADDR  0x4001d0e0


/* aaf_gain_delay register */
/*----------------------*/
/* Delay in applying a gain setting change to the anti-aliasing filter. Used to introduce delay between simultaneous IFAMP and AAF gain adjustments. (Stored in configuration bank) */
/* aaf_gain_delay : Delay in applying a gain setting change to the anti-aliasing filter. Used to introduce delay between simultaneous IFAMP and AAF gain adjustments. */
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_DELAY_AAF_GAIN_DELAY_MASK 0x003f
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_DELAY_AAF_GAIN_DELAY_POS  0
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#else
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_DELAY_AAF_GAIN_DELAY_ZB_2 3
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_DELAY_AAF_GAIN_DELAY_ZB_2_MASK 0x3
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_DELAY_AAF_GAIN_DELAY_BLE_1 3
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_DELAY_AAF_GAIN_DELAY_BLE_1_MASK 0x3
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_DELAY_AAF_GAIN_DELAY_BLE_2 3
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_DELAY_AAF_GAIN_DELAY_BLE_2_MASK 0x3
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int aaf_gain_delay : 6;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_aaf_gain_delay;
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_DELAY_RST 0x3
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_DELAY_ADDR  0x4001d0e4


/* nb_rssi_correction_db register */
/*----------------------*/
/* Programmable offset which can be given to the measured narrowband RSSI as entry to the gain setting lookup table. Values: -32..31 (Stored in configuration bank) */
/* nb_rssi_correction_db : Programmable offset which can be given to the measured narrowband RSSI as entry to the gain setting lookup table. Values: -32..31 */
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CORRECTION_DB_NB_RSSI_CORRECTION_DB_MASK 0x003f
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CORRECTION_DB_NB_RSSI_CORRECTION_DB_POS  0
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CORRECTION_DB_NB_RSSI_CORRECTION_DB_BT_LE_1 0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CORRECTION_DB_NB_RSSI_CORRECTION_DB_BT_LE_1_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CORRECTION_DB_NB_RSSI_CORRECTION_DB_BT_LE_2 8
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CORRECTION_DB_NB_RSSI_CORRECTION_DB_BT_LE_2_MASK 0x8
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CORRECTION_DB_NB_RSSI_CORRECTION_DB_NORDIC_250 2
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CORRECTION_DB_NB_RSSI_CORRECTION_DB_NORDIC_250_MASK 0x2
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CORRECTION_DB_NB_RSSI_CORRECTION_DB_NORDIC_2 8
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CORRECTION_DB_NB_RSSI_CORRECTION_DB_NORDIC_2_MASK 0x8
#else
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CORRECTION_DB_NB_RSSI_CORRECTION_DB_ZB_2 0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CORRECTION_DB_NB_RSSI_CORRECTION_DB_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CORRECTION_DB_NB_RSSI_CORRECTION_DB_BLE_1 0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CORRECTION_DB_NB_RSSI_CORRECTION_DB_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CORRECTION_DB_NB_RSSI_CORRECTION_DB_BLE_2 0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CORRECTION_DB_NB_RSSI_CORRECTION_DB_BLE_2_MASK 0x0
#endif

#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nb_rssi_correction_db : 6;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_nb_rssi_correction_db;
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CORRECTION_DB_RST 0x0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CORRECTION_DB_ADDR  0x4001d0e8


/* nb_rssi_hysteresis register */
/*----------------------*/
/* Hysteresis on subsequent narrowband RSSI measurements input to the gain setting lookup table. (Stored in configuration bank) */
/* nb_rssi_hysteresis : Hysteresis on subsequent narrowband RSSI measurements input to the gain setting lookup table */
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_HYSTERESIS_NB_RSSI_HYSTERESIS_MASK 0x000f
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_HYSTERESIS_NB_RSSI_HYSTERESIS_POS  0
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#else
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_HYSTERESIS_NB_RSSI_HYSTERESIS_ZB_2 4
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_HYSTERESIS_NB_RSSI_HYSTERESIS_ZB_2_MASK 0x4
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_HYSTERESIS_NB_RSSI_HYSTERESIS_BLE_1 4
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_HYSTERESIS_NB_RSSI_HYSTERESIS_BLE_1_MASK 0x4
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_HYSTERESIS_NB_RSSI_HYSTERESIS_BLE_2 4
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_HYSTERESIS_NB_RSSI_HYSTERESIS_BLE_2_MASK 0x4
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nb_rssi_hysteresis : 4;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_nb_rssi_hysteresis;
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_HYSTERESIS_RST 0x4
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_HYSTERESIS_ADDR  0x4001d0ec


/* rssi_lna_gain_lut1 register */
/*----------------------*/
/* lna gain lookup table part 1; entry is narrowband RSSI (Stored in configuration bank) */
/* rssi_lna_gain_lut4 : m86 dBm */
/* rssi_lna_gain_lut5 : m83 dBm */
/* rssi_lna_gain_lut6 : m80 dBm */
/* rssi_lna_gain_lut7 : m77 dBm */
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT1_RSSI_LNA_GAIN_LUT4_MASK 0x0007
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT1_RSSI_LNA_GAIN_LUT4_POS  0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT1_RSSI_LNA_GAIN_LUT5_MASK 0x0038
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT1_RSSI_LNA_GAIN_LUT5_POS  3
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT1_RSSI_LNA_GAIN_LUT6_MASK 0x01c0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT1_RSSI_LNA_GAIN_LUT6_POS  6
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT1_RSSI_LNA_GAIN_LUT7_MASK 0x0e00
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT1_RSSI_LNA_GAIN_LUT7_POS  9
#else
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT1_RSSI_LNA_GAIN_LUT4_MASK 0x0007
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT1_RSSI_LNA_GAIN_LUT4_POS  0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT1_RSSI_LNA_GAIN_LUT4_ZB_2 3
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT1_RSSI_LNA_GAIN_LUT4_ZB_2_MASK 0x3
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT1_RSSI_LNA_GAIN_LUT4_BLE_1 3
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT1_RSSI_LNA_GAIN_LUT4_BLE_1_MASK 0x3
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT1_RSSI_LNA_GAIN_LUT4_BLE_2 3
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT1_RSSI_LNA_GAIN_LUT4_BLE_2_MASK 0x3
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT1_RSSI_LNA_GAIN_LUT5_MASK 0x0038
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT1_RSSI_LNA_GAIN_LUT5_POS  3
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT1_RSSI_LNA_GAIN_LUT5_ZB_2 3
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT1_RSSI_LNA_GAIN_LUT5_ZB_2_MASK 0x18
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT1_RSSI_LNA_GAIN_LUT5_BLE_1 3
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT1_RSSI_LNA_GAIN_LUT5_BLE_1_MASK 0x18
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT1_RSSI_LNA_GAIN_LUT5_BLE_2 3
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT1_RSSI_LNA_GAIN_LUT5_BLE_2_MASK 0x18
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT1_RSSI_LNA_GAIN_LUT6_MASK 0x01c0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT1_RSSI_LNA_GAIN_LUT6_POS  6
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT1_RSSI_LNA_GAIN_LUT6_ZB_2 3
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT1_RSSI_LNA_GAIN_LUT6_ZB_2_MASK 0xc0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT1_RSSI_LNA_GAIN_LUT6_BLE_1 3
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT1_RSSI_LNA_GAIN_LUT6_BLE_1_MASK 0xc0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT1_RSSI_LNA_GAIN_LUT6_BLE_2 3
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT1_RSSI_LNA_GAIN_LUT6_BLE_2_MASK 0xc0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT1_RSSI_LNA_GAIN_LUT7_MASK 0x0e00
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT1_RSSI_LNA_GAIN_LUT7_POS  9
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT1_RSSI_LNA_GAIN_LUT7_ZB_2 2
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT1_RSSI_LNA_GAIN_LUT7_ZB_2_MASK 0x400
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT1_RSSI_LNA_GAIN_LUT7_BLE_1 2
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT1_RSSI_LNA_GAIN_LUT7_BLE_1_MASK 0x400
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT1_RSSI_LNA_GAIN_LUT7_BLE_2 2
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT1_RSSI_LNA_GAIN_LUT7_BLE_2_MASK 0x400
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rssi_lna_gain_lut4 : 3;
    unsigned int rssi_lna_gain_lut5 : 3;
    unsigned int rssi_lna_gain_lut6 : 3;
    unsigned int rssi_lna_gain_lut7 : 3;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_rssi_lna_gain_lut1;
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT1_RST 0x4db
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT1_ADDR  0x4001d0f0


/* rssi_lna_gain_lut2 register */
/*----------------------*/
/* lna gain lookup table part 2; entry is narrowband RSSI (Stored in configuration bank) */
/* rssi_lna_gain_lut8 : m74 dBm */
/* rssi_lna_gain_lut9 : m71 dBm */
/* rssi_lna_gain_lut10 : m68 dBm */
/* rssi_lna_gain_lut11 : m65 dBm */
/* rssi_lna_gain_lut12 : m62 dBm */
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT8_MASK 0x0007
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT8_POS  0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT9_MASK 0x0038
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT9_POS  3
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT10_MASK 0x01c0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT10_POS  6
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT11_MASK 0x0e00
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT11_POS  9
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT12_MASK 0x7000
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT12_POS  12
#else
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT8_MASK 0x0007
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT8_POS  0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT8_ZB_2 2
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT8_ZB_2_MASK 0x2
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT8_BLE_1 2
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT8_BLE_1_MASK 0x2
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT8_BLE_2 2
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT8_BLE_2_MASK 0x2
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT9_MASK 0x0038
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT9_POS  3
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT9_ZB_2 2
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT9_ZB_2_MASK 0x10
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT9_BLE_1 2
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT9_BLE_1_MASK 0x10
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT9_BLE_2 2
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT9_BLE_2_MASK 0x10
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT10_MASK 0x01c0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT10_POS  6
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT10_ZB_2 2
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT10_ZB_2_MASK 0x80
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT10_BLE_1 2
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT10_BLE_1_MASK 0x80
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT10_BLE_2 2
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT10_BLE_2_MASK 0x80
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT11_MASK 0x0e00
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT11_POS  9
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT11_ZB_2 2
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT11_ZB_2_MASK 0x400
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT11_BLE_1 2
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT11_BLE_1_MASK 0x400
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT11_BLE_2 2
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT11_BLE_2_MASK 0x400
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT12_MASK 0x7000
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT12_POS  12
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT12_ZB_2 2
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT12_ZB_2_MASK 0x2000
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT12_BLE_1 2
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT12_BLE_1_MASK 0x2000
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT12_BLE_2 2
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RSSI_LNA_GAIN_LUT12_BLE_2_MASK 0x2000
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rssi_lna_gain_lut8 : 3;
    unsigned int rssi_lna_gain_lut9 : 3;
    unsigned int rssi_lna_gain_lut10 : 3;
    unsigned int rssi_lna_gain_lut11 : 3;
    unsigned int rssi_lna_gain_lut12 : 3;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_rssi_lna_gain_lut2;
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_RST 0x2492
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT2_ADDR  0x4001d0f4


/* rssi_lna_gain_lut3 register */
/*----------------------*/
/* lna gain lookup table part 3; entry is narrowband RSSI (Stored in configuration bank) */
/* rssi_lna_gain_lut13 : m59 dBm */
/* rssi_lna_gain_lut14 : m56 dBm */
/* rssi_lna_gain_lut15 : m53 dBm */
/* rssi_lna_gain_lut16 : m50 dBm */
/* rssi_lna_gain_lut17 : m47 dBm */
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT13_MASK 0x0007
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT13_POS  0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT14_MASK 0x0038
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT14_POS  3
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT15_MASK 0x01c0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT15_POS  6
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT16_MASK 0x0e00
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT16_POS  9
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT17_MASK 0x7000
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT17_POS  12
#else
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT13_MASK 0x0007
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT13_POS  0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT13_ZB_2 2
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT13_ZB_2_MASK 0x2
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT13_BLE_1 2
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT13_BLE_1_MASK 0x2
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT13_BLE_2 2
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT13_BLE_2_MASK 0x2
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT14_MASK 0x0038
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT14_POS  3
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT14_ZB_2 2
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT14_ZB_2_MASK 0x10
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT14_BLE_1 2
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT14_BLE_1_MASK 0x10
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT14_BLE_2 2
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT14_BLE_2_MASK 0x10
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT15_MASK 0x01c0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT15_POS  6
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT15_ZB_2 2
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT15_ZB_2_MASK 0x80
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT15_BLE_1 2
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT15_BLE_1_MASK 0x80
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT15_BLE_2 2
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT15_BLE_2_MASK 0x80
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT16_MASK 0x0e00
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT16_POS  9
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT16_ZB_2 1
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT16_ZB_2_MASK 0x200
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT16_BLE_1 1
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT16_BLE_1_MASK 0x200
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT16_BLE_2 1
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT16_BLE_2_MASK 0x200
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT17_MASK 0x7000
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT17_POS  12
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT17_ZB_2 1
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT17_ZB_2_MASK 0x1000
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT17_BLE_1 1
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT17_BLE_1_MASK 0x1000
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT17_BLE_2 1
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RSSI_LNA_GAIN_LUT17_BLE_2_MASK 0x1000
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rssi_lna_gain_lut13 : 3;
    unsigned int rssi_lna_gain_lut14 : 3;
    unsigned int rssi_lna_gain_lut15 : 3;
    unsigned int rssi_lna_gain_lut16 : 3;
    unsigned int rssi_lna_gain_lut17 : 3;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_rssi_lna_gain_lut3;
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_RST 0x1292
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT3_ADDR  0x4001d0f8


/* rssi_lna_gain_lut4 register */
/*----------------------*/
/* lna gain lookup table part 4; entry is narrowband RSSI (Stored in configuration bank) */
/* rssi_lna_gain_lut18 : m44 dBm */
/* rssi_lna_gain_lut19 : m41 dBm */
/* rssi_lna_gain_lut20 : m38 dBm */
/* rssi_lna_gain_lut21 : m35 dBm */
/* rssi_lna_gain_lut22 : m33 dBm */
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT18_MASK 0x0007
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT18_POS  0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT19_MASK 0x0038
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT19_POS  3
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT20_MASK 0x01c0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT20_POS  6
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT21_MASK 0x0e00
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT21_POS  9
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT22_MASK 0x7000
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT22_POS  12
#else
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT18_MASK 0x0007
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT18_POS  0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT18_ZB_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT18_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT18_BLE_1 0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT18_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT18_BLE_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT18_BLE_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT19_MASK 0x0038
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT19_POS  3
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT19_ZB_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT19_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT19_BLE_1 0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT19_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT19_BLE_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT19_BLE_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT20_MASK 0x01c0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT20_POS  6
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT20_ZB_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT20_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT20_BLE_1 0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT20_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT20_BLE_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT20_BLE_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT21_MASK 0x0e00
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT21_POS  9
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT21_ZB_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT21_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT21_BLE_1 0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT21_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT21_BLE_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT21_BLE_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT22_MASK 0x7000
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT22_POS  12
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT22_ZB_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT22_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT22_BLE_1 0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT22_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT22_BLE_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RSSI_LNA_GAIN_LUT22_BLE_2_MASK 0x0
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rssi_lna_gain_lut18 : 3;
    unsigned int rssi_lna_gain_lut19 : 3;
    unsigned int rssi_lna_gain_lut20 : 3;
    unsigned int rssi_lna_gain_lut21 : 3;
    unsigned int rssi_lna_gain_lut22 : 3;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_rssi_lna_gain_lut4;
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_RST 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT4_ADDR  0x4001d0fc


/* rssi_ifamp_gain_lut0 register */
/*----------------------*/
/* IFAMP gain lookup table part 0; entry is narrowband RSSI (Stored in configuration bank) */
/* rssi_ifamp_gain_lut0 : m98 dBm */
/* rssi_ifamp_gain_lut1 : m95 dBm */
/* rssi_ifamp_gain_lut2 : m92 dBm */
/* rssi_ifamp_gain_lut3 : m89 dBm */
/* rssi_ifamp_gain_lut4 : m86 dBm */
/* rssi_ifamp_gain_lut5 : m83 dBm */
/* rssi_ifamp_gain_lut6 : m80 dBm */
/* rssi_ifamp_gain_lut7 : m77 dBm */
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT0_MASK 0x0003
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT0_POS  0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT1_MASK 0x000c
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT1_POS  2
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT2_MASK 0x0030
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT2_POS  4
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT3_MASK 0x00c0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT3_POS  6
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT4_MASK 0x0300
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT4_POS  8
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT5_MASK 0x0c00
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT5_POS  10
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT6_MASK 0x3000
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT6_POS  12
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT7_MASK 0xc000
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT7_POS  14
#else
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT0_MASK 0x0003
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT0_POS  0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT0_ZB_2 2
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT0_ZB_2_MASK 0x2
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT0_BLE_1 2
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT0_BLE_1_MASK 0x2
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT0_BLE_2 2
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT0_BLE_2_MASK 0x2
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT1_MASK 0x000c
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT1_POS  2
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT1_ZB_2 2
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT1_ZB_2_MASK 0x8
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT1_BLE_1 2
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT1_BLE_1_MASK 0x8
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT1_BLE_2 2
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT1_BLE_2_MASK 0x8
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT2_MASK 0x0030
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT2_POS  4
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT2_ZB_2 2
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT2_ZB_2_MASK 0x20
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT2_BLE_1 2
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT2_BLE_1_MASK 0x20
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT2_BLE_2 2
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT2_BLE_2_MASK 0x20
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT3_MASK 0x00c0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT3_POS  6
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT3_ZB_2 2
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT3_ZB_2_MASK 0x80
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT3_BLE_1 2
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT3_BLE_1_MASK 0x80
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT3_BLE_2 2
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT3_BLE_2_MASK 0x80
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT4_MASK 0x0300
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT4_POS  8
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT4_ZB_2 2
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT4_ZB_2_MASK 0x200
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT4_BLE_1 2
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT4_BLE_1_MASK 0x200
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT4_BLE_2 2
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT4_BLE_2_MASK 0x200
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT5_MASK 0x0c00
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT5_POS  10
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT5_ZB_2 2
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT5_ZB_2_MASK 0x800
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT5_BLE_1 2
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT5_BLE_1_MASK 0x800
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT5_BLE_2 2
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT5_BLE_2_MASK 0x800
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT6_MASK 0x3000
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT6_POS  12
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT6_ZB_2 2
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT6_ZB_2_MASK 0x2000
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT6_BLE_1 2
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT6_BLE_1_MASK 0x2000
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT6_BLE_2 2
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT6_BLE_2_MASK 0x2000
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT7_MASK 0xc000
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT7_POS  14
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT7_ZB_2 1
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT7_ZB_2_MASK 0x4000
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT7_BLE_1 1
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT7_BLE_1_MASK 0x4000
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT7_BLE_2 1
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RSSI_IFAMP_GAIN_LUT7_BLE_2_MASK 0x4000
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rssi_ifamp_gain_lut0 : 2;
    unsigned int rssi_ifamp_gain_lut1 : 2;
    unsigned int rssi_ifamp_gain_lut2 : 2;
    unsigned int rssi_ifamp_gain_lut3 : 2;
    unsigned int rssi_ifamp_gain_lut4 : 2;
    unsigned int rssi_ifamp_gain_lut5 : 2;
    unsigned int rssi_ifamp_gain_lut6 : 2;
    unsigned int rssi_ifamp_gain_lut7 : 2;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_rssi_ifamp_gain_lut0;
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_RST 0x6aaa
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT0_ADDR  0x4001d100


/* rssi_ifamp_gain_lut1 register */
/*----------------------*/
/* IFAMP gain lookup table part 1; entry is narrowband RSSI (Stored in configuration bank) */
/* rssi_ifamp_gain_lut8 : m74 dBm */
/* rssi_ifamp_gain_lut9 : m71 dBm */
/* rssi_ifamp_gain_lut10 : m68 dBm */
/* rssi_ifamp_gain_lut11 : m65 dBm */
/* rssi_ifamp_gain_lut12 : m62 dBm */
/* rssi_ifamp_gain_lut13 : m59 dBm */
/* rssi_ifamp_gain_lut14 : m56 dBm */
/* rssi_ifamp_gain_lut15 : m53 dBm */
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT8_MASK 0x0003
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT8_POS  0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT9_MASK 0x000c
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT9_POS  2
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT10_MASK 0x0030
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT10_POS  4
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT11_MASK 0x00c0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT11_POS  6
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT12_MASK 0x0300
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT12_POS  8
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT13_MASK 0x0c00
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT13_POS  10
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT14_MASK 0x3000
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT14_POS  12
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT15_MASK 0xc000
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT15_POS  14
#else
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT8_MASK 0x0003
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT8_POS  0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT8_ZB_2 1
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT8_ZB_2_MASK 0x1
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT8_BLE_1 1
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT8_BLE_1_MASK 0x1
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT8_BLE_2 1
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT8_BLE_2_MASK 0x1
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT9_MASK 0x000c
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT9_POS  2
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT9_ZB_2 1
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT9_ZB_2_MASK 0x4
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT9_BLE_1 1
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT9_BLE_1_MASK 0x4
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT9_BLE_2 1
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT9_BLE_2_MASK 0x4
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT10_MASK 0x0030
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT10_POS  4
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT10_ZB_2 1
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT10_ZB_2_MASK 0x10
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT10_BLE_1 1
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT10_BLE_1_MASK 0x10
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT10_BLE_2 1
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT10_BLE_2_MASK 0x10
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT11_MASK 0x00c0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT11_POS  6
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT11_ZB_2 1
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT11_ZB_2_MASK 0x40
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT11_BLE_1 1
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT11_BLE_1_MASK 0x40
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT11_BLE_2 1
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT11_BLE_2_MASK 0x40
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT12_MASK 0x0300
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT12_POS  8
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT12_ZB_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT12_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT12_BLE_1 0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT12_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT12_BLE_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT12_BLE_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT13_MASK 0x0c00
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT13_POS  10
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT13_ZB_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT13_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT13_BLE_1 0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT13_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT13_BLE_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT13_BLE_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT14_MASK 0x3000
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT14_POS  12
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT14_ZB_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT14_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT14_BLE_1 0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT14_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT14_BLE_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT14_BLE_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT15_MASK 0xc000
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT15_POS  14
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT15_ZB_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT15_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT15_BLE_1 0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT15_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT15_BLE_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RSSI_IFAMP_GAIN_LUT15_BLE_2_MASK 0x0
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rssi_ifamp_gain_lut8 : 2;
    unsigned int rssi_ifamp_gain_lut9 : 2;
    unsigned int rssi_ifamp_gain_lut10 : 2;
    unsigned int rssi_ifamp_gain_lut11 : 2;
    unsigned int rssi_ifamp_gain_lut12 : 2;
    unsigned int rssi_ifamp_gain_lut13 : 2;
    unsigned int rssi_ifamp_gain_lut14 : 2;
    unsigned int rssi_ifamp_gain_lut15 : 2;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_rssi_ifamp_gain_lut1;
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_RST 0x55
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT1_ADDR  0x4001d104


/* rssi_ifamp_gain_lut2 register */
/*----------------------*/
/* IFAMP gain lookup table part 2; entry is narrowband RSSI (Stored in configuration bank) */
/* rssi_ifamp_gain_lut16 : m50 dBm */
/* rssi_ifamp_gain_lut17 : m47 dBm */
/* rssi_ifamp_gain_lut18 : m44 dBm */
/* rssi_ifamp_gain_lut19 : m41 dBm */
/* rssi_ifamp_gain_lut20 : m38 dBm */
/* rssi_ifamp_gain_lut21 : m35 dBm */
/* rssi_ifamp_gain_lut22 : m33 dBm */
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT16_MASK 0x0003
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT16_POS  0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT17_MASK 0x000c
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT17_POS  2
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT18_MASK 0x0030
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT18_POS  4
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT19_MASK 0x00c0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT19_POS  6
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT20_MASK 0x0300
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT20_POS  8
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT21_MASK 0x0c00
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT21_POS  10
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT22_MASK 0x3000
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT22_POS  12
#else
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT16_MASK 0x0003
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT16_POS  0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT16_ZB_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT16_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT16_BLE_1 0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT16_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT16_BLE_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT16_BLE_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT17_MASK 0x000c
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT17_POS  2
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT17_ZB_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT17_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT17_BLE_1 0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT17_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT17_BLE_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT17_BLE_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT18_MASK 0x0030
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT18_POS  4
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT18_ZB_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT18_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT18_BLE_1 0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT18_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT18_BLE_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT18_BLE_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT19_MASK 0x00c0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT19_POS  6
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT19_ZB_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT19_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT19_BLE_1 0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT19_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT19_BLE_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT19_BLE_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT20_MASK 0x0300
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT20_POS  8
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT20_ZB_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT20_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT20_BLE_1 0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT20_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT20_BLE_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT20_BLE_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT21_MASK 0x0c00
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT21_POS  10
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT21_ZB_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT21_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT21_BLE_1 0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT21_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT21_BLE_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT21_BLE_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT22_MASK 0x3000
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT22_POS  12
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT22_ZB_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT22_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT22_BLE_1 0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT22_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT22_BLE_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RSSI_IFAMP_GAIN_LUT22_BLE_2_MASK 0x0
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rssi_ifamp_gain_lut16 : 2;
    unsigned int rssi_ifamp_gain_lut17 : 2;
    unsigned int rssi_ifamp_gain_lut18 : 2;
    unsigned int rssi_ifamp_gain_lut19 : 2;
    unsigned int rssi_ifamp_gain_lut20 : 2;
    unsigned int rssi_ifamp_gain_lut21 : 2;
    unsigned int rssi_ifamp_gain_lut22 : 2;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_rssi_ifamp_gain_lut2;
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_RST 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT2_ADDR  0x4001d108


/* rssi_aaf_gain_lut0 register */
/*----------------------*/
/* AAF gain lookup table part 0; entry is narrowband RSSI (Stored in configuration bank) */
/* rssi_aaf_gain_lut0 : m98 dBm */
/* rssi_aaf_gain_lut1 : m95 dBm */
/* rssi_aaf_gain_lut2 : m92 dBm */
/* rssi_aaf_gain_lut3 : m89 dBm */
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT0_RSSI_AAF_GAIN_LUT0_MASK 0x0007
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT0_RSSI_AAF_GAIN_LUT0_POS  0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT0_RSSI_AAF_GAIN_LUT1_MASK 0x0038
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT0_RSSI_AAF_GAIN_LUT1_POS  3
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT0_RSSI_AAF_GAIN_LUT2_MASK 0x01c0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT0_RSSI_AAF_GAIN_LUT2_POS  6
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT0_RSSI_AAF_GAIN_LUT3_MASK 0x0e00
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT0_RSSI_AAF_GAIN_LUT3_POS  9
#else
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT0_RSSI_AAF_GAIN_LUT0_MASK 0x0007
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT0_RSSI_AAF_GAIN_LUT0_POS  0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT0_RSSI_AAF_GAIN_LUT0_ZB_2 6
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT0_RSSI_AAF_GAIN_LUT0_ZB_2_MASK 0x6
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT0_RSSI_AAF_GAIN_LUT0_BLE_1 6
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT0_RSSI_AAF_GAIN_LUT0_BLE_1_MASK 0x6
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT0_RSSI_AAF_GAIN_LUT0_BLE_2 6
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT0_RSSI_AAF_GAIN_LUT0_BLE_2_MASK 0x6
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT0_RSSI_AAF_GAIN_LUT1_MASK 0x0038
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT0_RSSI_AAF_GAIN_LUT1_POS  3
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT0_RSSI_AAF_GAIN_LUT1_ZB_2 5
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT0_RSSI_AAF_GAIN_LUT1_ZB_2_MASK 0x28
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT0_RSSI_AAF_GAIN_LUT1_BLE_1 5
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT0_RSSI_AAF_GAIN_LUT1_BLE_1_MASK 0x28
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT0_RSSI_AAF_GAIN_LUT1_BLE_2 5
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT0_RSSI_AAF_GAIN_LUT1_BLE_2_MASK 0x28
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT0_RSSI_AAF_GAIN_LUT2_MASK 0x01c0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT0_RSSI_AAF_GAIN_LUT2_POS  6
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT0_RSSI_AAF_GAIN_LUT2_ZB_2 3
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT0_RSSI_AAF_GAIN_LUT2_ZB_2_MASK 0xc0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT0_RSSI_AAF_GAIN_LUT2_BLE_1 3
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT0_RSSI_AAF_GAIN_LUT2_BLE_1_MASK 0xc0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT0_RSSI_AAF_GAIN_LUT2_BLE_2 3
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT0_RSSI_AAF_GAIN_LUT2_BLE_2_MASK 0xc0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT0_RSSI_AAF_GAIN_LUT3_MASK 0x0e00
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT0_RSSI_AAF_GAIN_LUT3_POS  9
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT0_RSSI_AAF_GAIN_LUT3_ZB_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT0_RSSI_AAF_GAIN_LUT3_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT0_RSSI_AAF_GAIN_LUT3_BLE_1 0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT0_RSSI_AAF_GAIN_LUT3_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT0_RSSI_AAF_GAIN_LUT3_BLE_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT0_RSSI_AAF_GAIN_LUT3_BLE_2_MASK 0x0
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rssi_aaf_gain_lut0 : 3;
    unsigned int rssi_aaf_gain_lut1 : 3;
    unsigned int rssi_aaf_gain_lut2 : 3;
    unsigned int rssi_aaf_gain_lut3 : 3;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_rssi_aaf_gain_lut0;
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT0_RST 0xee
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT0_ADDR  0x4001d10c


/* rssi_aaf_gain_lut1 register */
/*----------------------*/
/* AAF gain lookup table part 1; entry is narrowband RSSI (Stored in configuration bank) */
/* rssi_aaf_gain_lut4 : m86 dBm */
/* rssi_aaf_gain_lut5 : m83 dBm */
/* rssi_aaf_gain_lut6 : m80 dBm */
/* rssi_aaf_gain_lut7 : m77 dBm */
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT1_RSSI_AAF_GAIN_LUT4_MASK 0x0007
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT1_RSSI_AAF_GAIN_LUT4_POS  0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT1_RSSI_AAF_GAIN_LUT5_MASK 0x0038
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT1_RSSI_AAF_GAIN_LUT5_POS  3
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT1_RSSI_AAF_GAIN_LUT6_MASK 0x01c0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT1_RSSI_AAF_GAIN_LUT6_POS  6
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT1_RSSI_AAF_GAIN_LUT7_MASK 0x0e00
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT1_RSSI_AAF_GAIN_LUT7_POS  9
#else
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT1_RSSI_AAF_GAIN_LUT4_MASK 0x0007
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT1_RSSI_AAF_GAIN_LUT4_POS  0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT1_RSSI_AAF_GAIN_LUT4_ZB_2 2
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT1_RSSI_AAF_GAIN_LUT4_ZB_2_MASK 0x2
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT1_RSSI_AAF_GAIN_LUT4_BLE_1 2
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT1_RSSI_AAF_GAIN_LUT4_BLE_1_MASK 0x2
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT1_RSSI_AAF_GAIN_LUT4_BLE_2 2
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT1_RSSI_AAF_GAIN_LUT4_BLE_2_MASK 0x2
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT1_RSSI_AAF_GAIN_LUT5_MASK 0x0038
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT1_RSSI_AAF_GAIN_LUT5_POS  3
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT1_RSSI_AAF_GAIN_LUT5_ZB_2 2
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT1_RSSI_AAF_GAIN_LUT5_ZB_2_MASK 0x10
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT1_RSSI_AAF_GAIN_LUT5_BLE_1 2
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT1_RSSI_AAF_GAIN_LUT5_BLE_1_MASK 0x10
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT1_RSSI_AAF_GAIN_LUT5_BLE_2 2
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT1_RSSI_AAF_GAIN_LUT5_BLE_2_MASK 0x10
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT1_RSSI_AAF_GAIN_LUT6_MASK 0x01c0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT1_RSSI_AAF_GAIN_LUT6_POS  6
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT1_RSSI_AAF_GAIN_LUT6_ZB_2 2
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT1_RSSI_AAF_GAIN_LUT6_ZB_2_MASK 0x80
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT1_RSSI_AAF_GAIN_LUT6_BLE_1 2
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT1_RSSI_AAF_GAIN_LUT6_BLE_1_MASK 0x80
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT1_RSSI_AAF_GAIN_LUT6_BLE_2 2
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT1_RSSI_AAF_GAIN_LUT6_BLE_2_MASK 0x80
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT1_RSSI_AAF_GAIN_LUT7_MASK 0x0e00
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT1_RSSI_AAF_GAIN_LUT7_POS  9
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT1_RSSI_AAF_GAIN_LUT7_ZB_2 6
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT1_RSSI_AAF_GAIN_LUT7_ZB_2_MASK 0xc00
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT1_RSSI_AAF_GAIN_LUT7_BLE_1 6
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT1_RSSI_AAF_GAIN_LUT7_BLE_1_MASK 0xc00
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT1_RSSI_AAF_GAIN_LUT7_BLE_2 6
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT1_RSSI_AAF_GAIN_LUT7_BLE_2_MASK 0xc00
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rssi_aaf_gain_lut4 : 3;
    unsigned int rssi_aaf_gain_lut5 : 3;
    unsigned int rssi_aaf_gain_lut6 : 3;
    unsigned int rssi_aaf_gain_lut7 : 3;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_rssi_aaf_gain_lut1;
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT1_RST 0xc92
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT1_ADDR  0x4001d130


/* rssi_aaf_gain_lut2 register */
/*----------------------*/
/* AAF gain lookup table part 2; entry is narrowband RSSI (Stored in configuration bank) */
/* rssi_aaf_gain_lut8 : m74 dBm */
/* rssi_aaf_gain_lut9 : m71 dBm */
/* rssi_aaf_gain_lut10 : m68 dBm */
/* rssi_aaf_gain_lut11 : m65 dBm */
/* rssi_aaf_gain_lut12 : m62 dBm */
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT8_MASK 0x0007
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT8_POS  0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT9_MASK 0x0038
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT9_POS  3
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT10_MASK 0x01c0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT10_POS  6
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT11_MASK 0x0e00
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT11_POS  9
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT12_MASK 0x7000
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT12_POS  12
#else
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT8_MASK 0x0007
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT8_POS  0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT8_ZB_2 6
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT8_ZB_2_MASK 0x6
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT8_BLE_1 6
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT8_BLE_1_MASK 0x6
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT8_BLE_2 6
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT8_BLE_2_MASK 0x6
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT9_MASK 0x0038
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT9_POS  3
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT9_ZB_2 6
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT9_ZB_2_MASK 0x30
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT9_BLE_1 6
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT9_BLE_1_MASK 0x30
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT9_BLE_2 6
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT9_BLE_2_MASK 0x30
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT10_MASK 0x01c0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT10_POS  6
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT10_ZB_2 4
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT10_ZB_2_MASK 0x100
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT10_BLE_1 4
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT10_BLE_1_MASK 0x100
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT10_BLE_2 4
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT10_BLE_2_MASK 0x100
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT11_MASK 0x0e00
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT11_POS  9
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT11_ZB_2 2
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT11_ZB_2_MASK 0x400
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT11_BLE_1 2
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT11_BLE_1_MASK 0x400
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT11_BLE_2 2
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT11_BLE_2_MASK 0x400
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT12_MASK 0x7000
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT12_POS  12
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT12_ZB_2 6
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT12_ZB_2_MASK 0x6000
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT12_BLE_1 6
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT12_BLE_1_MASK 0x6000
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT12_BLE_2 6
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RSSI_AAF_GAIN_LUT12_BLE_2_MASK 0x6000
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rssi_aaf_gain_lut8 : 3;
    unsigned int rssi_aaf_gain_lut9 : 3;
    unsigned int rssi_aaf_gain_lut10 : 3;
    unsigned int rssi_aaf_gain_lut11 : 3;
    unsigned int rssi_aaf_gain_lut12 : 3;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_rssi_aaf_gain_lut2;
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_RST 0x6536
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT2_ADDR  0x4001d134


/* rssi_aaf_gain_lut3 register */
/*----------------------*/
/* AAF gain lookup table part 3; entry is narrowband RSSI (Stored in configuration bank) */
/* rssi_aaf_gain_lut13 : m59 dBm */
/* rssi_aaf_gain_lut14 : m56 dBm */
/* rssi_aaf_gain_lut15 : m53 dBm */
/* rssi_aaf_gain_lut16 : m50 dBm */
/* rssi_aaf_gain_lut17 : m47 dBm */
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT13_MASK 0x0007
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT13_POS  0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT14_MASK 0x0038
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT14_POS  3
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT15_MASK 0x01c0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT15_POS  6
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT16_MASK 0x0e00
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT16_POS  9
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT17_MASK 0x7000
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT17_POS  12
#else
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT13_MASK 0x0007
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT13_POS  0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT13_ZB_2 4
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT13_ZB_2_MASK 0x4
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT13_BLE_1 4
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT13_BLE_1_MASK 0x4
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT13_BLE_2 4
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT13_BLE_2_MASK 0x4
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT14_MASK 0x0038
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT14_POS  3
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT14_ZB_2 2
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT14_ZB_2_MASK 0x10
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT14_BLE_1 2
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT14_BLE_1_MASK 0x10
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT14_BLE_2 2
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT14_BLE_2_MASK 0x10
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT15_MASK 0x01c0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT15_POS  6
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT15_ZB_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT15_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT15_BLE_1 0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT15_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT15_BLE_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT15_BLE_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT16_MASK 0x0e00
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT16_POS  9
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT16_ZB_2 1
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT16_ZB_2_MASK 0x200
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT16_BLE_1 1
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT16_BLE_1_MASK 0x200
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT16_BLE_2 1
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT16_BLE_2_MASK 0x200
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT17_MASK 0x7000
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT17_POS  12
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT17_ZB_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT17_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT17_BLE_1 0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT17_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT17_BLE_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RSSI_AAF_GAIN_LUT17_BLE_2_MASK 0x0
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rssi_aaf_gain_lut13 : 3;
    unsigned int rssi_aaf_gain_lut14 : 3;
    unsigned int rssi_aaf_gain_lut15 : 3;
    unsigned int rssi_aaf_gain_lut16 : 3;
    unsigned int rssi_aaf_gain_lut17 : 3;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_rssi_aaf_gain_lut3;
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_RST 0x214
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT3_ADDR  0x4001d138


/* rssi_aaf_gain_lut4 register */
/*----------------------*/
/* AAF gain lookup table part 4; entry is narrowband RSSI (Stored in configuration bank) */
/* rssi_aaf_gain_lut18 : m44 dBm */
/* rssi_aaf_gain_lut19 : m41 dBm */
/* rssi_aaf_gain_lut20 : m38 dBm */
/* rssi_aaf_gain_lut21 : m35 dBm */
/* rssi_aaf_gain_lut22 : m33 dBm */
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT18_MASK 0x0007
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT18_POS  0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT19_MASK 0x0038
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT19_POS  3
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT20_MASK 0x01c0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT20_POS  6
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT21_MASK 0x0e00
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT21_POS  9
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT22_MASK 0x7000
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT22_POS  12
#else
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT18_MASK 0x0007
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT18_POS  0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT18_ZB_2 5
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT18_ZB_2_MASK 0x5
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT18_BLE_1 5
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT18_BLE_1_MASK 0x5
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT18_BLE_2 5
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT18_BLE_2_MASK 0x5
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT19_MASK 0x0038
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT19_POS  3
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT19_ZB_2 3
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT19_ZB_2_MASK 0x18
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT19_BLE_1 3
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT19_BLE_1_MASK 0x18
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT19_BLE_2 3
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT19_BLE_2_MASK 0x18
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT20_MASK 0x01c0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT20_POS  6
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT20_ZB_2 1
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT20_ZB_2_MASK 0x40
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT20_BLE_1 1
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT20_BLE_1_MASK 0x40
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT20_BLE_2 1
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT20_BLE_2_MASK 0x40
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT21_MASK 0x0e00
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT21_POS  9
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT21_ZB_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT21_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT21_BLE_1 0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT21_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT21_BLE_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT21_BLE_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT22_MASK 0x7000
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT22_POS  12
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT22_ZB_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT22_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT22_BLE_1 0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT22_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT22_BLE_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RSSI_AAF_GAIN_LUT22_BLE_2_MASK 0x0
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rssi_aaf_gain_lut18 : 3;
    unsigned int rssi_aaf_gain_lut19 : 3;
    unsigned int rssi_aaf_gain_lut20 : 3;
    unsigned int rssi_aaf_gain_lut21 : 3;
    unsigned int rssi_aaf_gain_lut22 : 3;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_rssi_aaf_gain_lut4;
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_RST 0x5d
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT4_ADDR  0x4001d13c


/* lna_gain_lut0 register */
/*----------------------*/
/* LNA Gain0 */
/* lna_gain_lut : LNA gain0 */
#define EXTAPB_REGFILE_RX_DP_LNA_GAIN_LUT0_LNA_GAIN_LUT_MASK 0x00ff
#define EXTAPB_REGFILE_RX_DP_LNA_GAIN_LUT0_LNA_GAIN_LUT_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int lna_gain_lut : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_lna_gain_lut0;
#define EXTAPB_REGFILE_RX_DP_LNA_GAIN_LUT0_RST 0xac
#define EXTAPB_REGFILE_RX_DP_LNA_GAIN_LUT0_ADDR  0x4001d140


/* lna_gain_lut1 register */
/*----------------------*/
/* LNA Gain1 */
/* lna_gain_lut : LNA gain1 */
#define EXTAPB_REGFILE_RX_DP_LNA_GAIN_LUT1_LNA_GAIN_LUT_MASK 0x00ff
#define EXTAPB_REGFILE_RX_DP_LNA_GAIN_LUT1_LNA_GAIN_LUT_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int lna_gain_lut : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_lna_gain_lut1;
#define EXTAPB_REGFILE_RX_DP_LNA_GAIN_LUT1_RST 0xdc
#define EXTAPB_REGFILE_RX_DP_LNA_GAIN_LUT1_ADDR  0x4001d144


/* lna_gain_lut2 register */
/*----------------------*/
/* LNA Gain2 */
/* lna_gain_lut : LNA gain2 */
#define EXTAPB_REGFILE_RX_DP_LNA_GAIN_LUT2_LNA_GAIN_LUT_MASK 0x00ff
#define EXTAPB_REGFILE_RX_DP_LNA_GAIN_LUT2_LNA_GAIN_LUT_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int lna_gain_lut : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_lna_gain_lut2;
#define EXTAPB_REGFILE_RX_DP_LNA_GAIN_LUT2_RST 0xf4
#define EXTAPB_REGFILE_RX_DP_LNA_GAIN_LUT2_ADDR  0x4001d148


/* lna_gain_lut3 register */
/*----------------------*/
/* LNA Gain3 */
/* lna_gain_lut : LNA gain3 */
#define EXTAPB_REGFILE_RX_DP_LNA_GAIN_LUT3_LNA_GAIN_LUT_MASK 0x00ff
#define EXTAPB_REGFILE_RX_DP_LNA_GAIN_LUT3_LNA_GAIN_LUT_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int lna_gain_lut : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_lna_gain_lut3;
#define EXTAPB_REGFILE_RX_DP_LNA_GAIN_LUT3_RST 0xc
#define EXTAPB_REGFILE_RX_DP_LNA_GAIN_LUT3_ADDR  0x4001d14c


/* lna_gain_lut4 register */
/*----------------------*/
/* LNA Gain4 */
/* lna_gain_lut : LNA gain4 */
#define EXTAPB_REGFILE_RX_DP_LNA_GAIN_LUT4_LNA_GAIN_LUT_MASK 0x00ff
#define EXTAPB_REGFILE_RX_DP_LNA_GAIN_LUT4_LNA_GAIN_LUT_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int lna_gain_lut : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_lna_gain_lut4;
#define EXTAPB_REGFILE_RX_DP_LNA_GAIN_LUT4_RST 0x3c
#define EXTAPB_REGFILE_RX_DP_LNA_GAIN_LUT4_ADDR  0x4001d150


/* ifamp_gain_lut0 register */
/*----------------------*/
/* IFAMP gain values, required for RSSI calculation; column selector is ifamp_gain_setting. Values: 0..31.75 in steps of 0.25 dB */
/* ifamp_gain_lut : IFAMP gain values, required for RSSI calculation; column selector is ifamp_gain_setting. Values: 0..31.75 in steps of 0.25 dB */
#define EXTAPB_REGFILE_RX_DP_IFAMP_GAIN_LUT0_IFAMP_GAIN_LUT_MASK 0x007f
#define EXTAPB_REGFILE_RX_DP_IFAMP_GAIN_LUT0_IFAMP_GAIN_LUT_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int ifamp_gain_lut : 7;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_ifamp_gain_lut0;
#define EXTAPB_REGFILE_RX_DP_IFAMP_GAIN_LUT0_RST 0x2
#define EXTAPB_REGFILE_RX_DP_IFAMP_GAIN_LUT0_ADDR  0x4001d154


/* ifamp_gain_lut1 register */
/*----------------------*/
/* IFAMP gain values, required for RSSI calculation; column selector is ifamp_gain_setting. Values: 0..31.75 in steps of 0.25 dB */
/* ifamp_gain_lut : IFAMP gain values, required for RSSI calculation; column selector is ifamp_gain_setting. Values: 0..31.75 in steps of 0.25 dB */
#define EXTAPB_REGFILE_RX_DP_IFAMP_GAIN_LUT1_IFAMP_GAIN_LUT_MASK 0x007f
#define EXTAPB_REGFILE_RX_DP_IFAMP_GAIN_LUT1_IFAMP_GAIN_LUT_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int ifamp_gain_lut : 7;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_ifamp_gain_lut1;
#define EXTAPB_REGFILE_RX_DP_IFAMP_GAIN_LUT1_RST 0x32
#define EXTAPB_REGFILE_RX_DP_IFAMP_GAIN_LUT1_ADDR  0x4001d158


/* ifamp_gain_lut2 register */
/*----------------------*/
/* IFAMP gain values, required for RSSI calculation; column selector is ifamp_gain_setting. Values: 0..31.75 in steps of 0.25 dB */
/* ifamp_gain_lut : IFAMP gain values, required for RSSI calculation; column selector is ifamp_gain_setting. Values: 0..31.75 in steps of 0.25 dB */
#define EXTAPB_REGFILE_RX_DP_IFAMP_GAIN_LUT2_IFAMP_GAIN_LUT_MASK 0x007f
#define EXTAPB_REGFILE_RX_DP_IFAMP_GAIN_LUT2_IFAMP_GAIN_LUT_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int ifamp_gain_lut : 7;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_ifamp_gain_lut2;
#define EXTAPB_REGFILE_RX_DP_IFAMP_GAIN_LUT2_RST 0x58
#define EXTAPB_REGFILE_RX_DP_IFAMP_GAIN_LUT2_ADDR  0x4001d15c


/* aaf_gain_lut0 register */
/*----------------------*/
/* AAF gain values, required for RSSI calculation; column selector is aaf_gain_setting (can be delayed with aaf_gain_delay). Values: 0..31.75 in steps of 0.25 dB */
/* aaf_gain_lut : AAF gain values, required for RSSI calculation; column selector is aaf_gain_setting (can be delayed with aaf_gain_delay) Values: 0..31.75 in steps of 0.25 dB */
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_LUT0_AAF_GAIN_LUT_MASK 0x007f
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_LUT0_AAF_GAIN_LUT_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int aaf_gain_lut : 7;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_aaf_gain_lut0;
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_LUT0_RST 0x0
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_LUT0_ADDR  0x4001d160


/* aaf_gain_lut1 register */
/*----------------------*/
/* AAF gain values, required for RSSI calculation; column selector is aaf_gain_setting (can be delayed with aaf_gain_delay). Values: 0..31.75 in steps of 0.25 dB */
/* aaf_gain_lut : AAF gain values, required for RSSI calculation; column selector is aaf_gain_setting (can be delayed with aaf_gain_delay) Values: 0..31.75 in steps of 0.25 dB */
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_LUT1_AAF_GAIN_LUT_MASK 0x007f
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_LUT1_AAF_GAIN_LUT_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int aaf_gain_lut : 7;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_aaf_gain_lut1;
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_LUT1_RST 0xc
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_LUT1_ADDR  0x4001d164


/* aaf_gain_lut2 register */
/*----------------------*/
/* AAF gain values, required for RSSI calculation; column selector is aaf_gain_setting (can be delayed with aaf_gain_delay). Values: 0..31.75 in steps of 0.25 dB */
/* aaf_gain_lut : AAF gain values, required for RSSI calculation; column selector is aaf_gain_setting (can be delayed with aaf_gain_delay) Values: 0..31.75 in steps of 0.25 dB */
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_LUT2_AAF_GAIN_LUT_MASK 0x007f
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_LUT2_AAF_GAIN_LUT_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int aaf_gain_lut : 7;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_aaf_gain_lut2;
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_LUT2_RST 0x18
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_LUT2_ADDR  0x4001d168


/* aaf_gain_lut3 register */
/*----------------------*/
/* AAF gain values, required for RSSI calculation; column selector is aaf_gain_setting (can be delayed with aaf_gain_delay). Values: 0..31.75 in steps of 0.25 dB */
/* aaf_gain_lut : AAF gain values, required for RSSI calculation; column selector is aaf_gain_setting (can be delayed with aaf_gain_delay) Values: 0..31.75 in steps of 0.25 dB */
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_LUT3_AAF_GAIN_LUT_MASK 0x007f
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_LUT3_AAF_GAIN_LUT_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int aaf_gain_lut : 7;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_aaf_gain_lut3;
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_LUT3_RST 0x24
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_LUT3_ADDR  0x4001d16c


/* aaf_gain_lut4 register */
/*----------------------*/
/* AAF gain values, required for RSSI calculation; column selector is aaf_gain_setting (can be delayed with aaf_gain_delay). Values: 0..31.75 in steps of 0.25 dB */
/* aaf_gain_lut : AAF gain values, required for RSSI calculation; column selector is aaf_gain_setting (can be delayed with aaf_gain_delay) Values: 0..31.75 in steps of 0.25 dB */
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_LUT4_AAF_GAIN_LUT_MASK 0x007f
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_LUT4_AAF_GAIN_LUT_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int aaf_gain_lut : 7;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_aaf_gain_lut4;
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_LUT4_RST 0x30
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_LUT4_ADDR  0x4001d170


/* aaf_gain_lut5 register */
/*----------------------*/
/* AAF gain values, required for RSSI calculation; column selector is aaf_gain_setting (can be delayed with aaf_gain_delay). Values: 0..31.75 in steps of 0.25 dB */
/* aaf_gain_lut : AAF gain values, required for RSSI calculation; column selector is aaf_gain_setting (can be delayed with aaf_gain_delay) Values: 0..31.75 in steps of 0.25 dB */
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_LUT5_AAF_GAIN_LUT_MASK 0x007f
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_LUT5_AAF_GAIN_LUT_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int aaf_gain_lut : 7;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_aaf_gain_lut5;
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_LUT5_RST 0x3c
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_LUT5_ADDR  0x4001d174


/* aaf_gain_lut6 register */
/*----------------------*/
/* AAF gain values, required for RSSI calculation; column selector is aaf_gain_setting (can be delayed with aaf_gain_delay). Values: 0..31.75 in steps of 0.25 dB */
/* aaf_gain_lut : AAF gain values, required for RSSI calculation; column selector is aaf_gain_setting (can be delayed with aaf_gain_delay) Values: 0..31.75 in steps of 0.25 dB */
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_LUT6_AAF_GAIN_LUT_MASK 0x007f
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_LUT6_AAF_GAIN_LUT_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int aaf_gain_lut : 7;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_aaf_gain_lut6;
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_LUT6_RST 0x48
#define EXTAPB_REGFILE_RX_DP_AAF_GAIN_LUT6_ADDR  0x4001d178


/* nb_rssi_conv_to_dbm register */
/*----------------------*/
/* Conversion factor for narrowband RSSI (including ADC gain, digital gain, conversion from dBV to dBm, systematic error introduced by truncations) Values: -128..0 in steps of 0.25 dB (Stored in configuration bank) */
/* nb_rssi_conv_to_dbm : Conversion factor for narrowband RSSI (including ADC gain, digital gain, conversion from dBV to dBm, systematic error introduced by truncations) Values: -128..0 in steps of 0.25 dB */
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CONV_TO_DBM_NB_RSSI_CONV_TO_DBM_MASK 0x03ff
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CONV_TO_DBM_NB_RSSI_CONV_TO_DBM_POS  0
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#else
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CONV_TO_DBM_NB_RSSI_CONV_TO_DBM_ZB_2 712
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CONV_TO_DBM_NB_RSSI_CONV_TO_DBM_ZB_2_MASK 0x2c8
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CONV_TO_DBM_NB_RSSI_CONV_TO_DBM_BLE_1 712
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CONV_TO_DBM_NB_RSSI_CONV_TO_DBM_BLE_1_MASK 0x2c8
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CONV_TO_DBM_NB_RSSI_CONV_TO_DBM_BLE_2 712
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CONV_TO_DBM_NB_RSSI_CONV_TO_DBM_BLE_2_MASK 0x2c8
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nb_rssi_conv_to_dbm : 10;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_nb_rssi_conv_to_dbm;
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CONV_TO_DBM_RST 0x2c8
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CONV_TO_DBM_ADDR  0x4001d17c


/* wb_rssi_conv_to_dbm register */
/*----------------------*/
/* Conversion factor for wideband RSSI (including ADC gain, digital gain, conversion from dBV to dBm, systematic error introduced by truncations) Values: -128..0 in steps of 0.5 dB (Stored in configuration bank) */
/* wb_rssi_conv_to_dbm : Conversion factor for wideband RSSI (including ADC gain, digital gain, conversion from dBV to dBm, systematic error introduced by truncations) Values: -128..0 in steps of 0.5 dB */
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CONV_TO_DBM_WB_RSSI_CONV_TO_DBM_MASK 0x01ff
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CONV_TO_DBM_WB_RSSI_CONV_TO_DBM_POS  0
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#else
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CONV_TO_DBM_WB_RSSI_CONV_TO_DBM_ZB_2 387
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CONV_TO_DBM_WB_RSSI_CONV_TO_DBM_ZB_2_MASK 0x183
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CONV_TO_DBM_WB_RSSI_CONV_TO_DBM_BLE_1 387
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CONV_TO_DBM_WB_RSSI_CONV_TO_DBM_BLE_1_MASK 0x183
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CONV_TO_DBM_WB_RSSI_CONV_TO_DBM_BLE_2 387
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CONV_TO_DBM_WB_RSSI_CONV_TO_DBM_BLE_2_MASK 0x183
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int wb_rssi_conv_to_dbm : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_wb_rssi_conv_to_dbm;
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CONV_TO_DBM_RST 0x183
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CONV_TO_DBM_ADDR  0x4001d180


/* wb_rssi_ctrl register */
/*----------------------*/
/* Wideband rssi settings (Stored in configuration bank) */
/* alpha_wb_rssi : Wideband rssi lowpass filter constant. Value map: 4..10 -> 2**4..2**10 */
/* wb_rssi_window : Window for wideband rssi averaging. Values: 0..1023 */
/* wb_rssi_always_on : Enable wideband rssi measurement */
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CTRL_ALPHA_WB_RSSI_MASK 0x000f
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CTRL_ALPHA_WB_RSSI_POS  0
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CTRL_WB_RSSI_WINDOW_MASK 0x3ff0
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CTRL_WB_RSSI_WINDOW_POS  4
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CTRL_WB_RSSI_ALWAYS_ON_MASK 0x4000
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CTRL_WB_RSSI_ALWAYS_ON_POS  14
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CTRL_WB_RSSI_ALWAYS_ON_OFF 0
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CTRL_WB_RSSI_ALWAYS_ON_OFF_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CTRL_WB_RSSI_ALWAYS_ON_ON 1
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CTRL_WB_RSSI_ALWAYS_ON_ON_MASK 0x4000
#else
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CTRL_ALPHA_WB_RSSI_MASK 0x000f
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CTRL_ALPHA_WB_RSSI_POS  0
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CTRL_ALPHA_WB_RSSI_ZB_2 7
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CTRL_ALPHA_WB_RSSI_ZB_2_MASK 0x7
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CTRL_ALPHA_WB_RSSI_BLE_1 7
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CTRL_ALPHA_WB_RSSI_BLE_1_MASK 0x7
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CTRL_ALPHA_WB_RSSI_BLE_2 7
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CTRL_ALPHA_WB_RSSI_BLE_2_MASK 0x7
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CTRL_WB_RSSI_WINDOW_MASK 0x3ff0
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CTRL_WB_RSSI_WINDOW_POS  4
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CTRL_WB_RSSI_WINDOW_ZB_2 512
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CTRL_WB_RSSI_WINDOW_ZB_2_MASK 0x2000
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CTRL_WB_RSSI_WINDOW_BLE_1 512
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CTRL_WB_RSSI_WINDOW_BLE_1_MASK 0x2000
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CTRL_WB_RSSI_WINDOW_BLE_2 512
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CTRL_WB_RSSI_WINDOW_BLE_2_MASK 0x2000
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CTRL_WB_RSSI_ALWAYS_ON_MASK 0x4000
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CTRL_WB_RSSI_ALWAYS_ON_POS  14
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CTRL_WB_RSSI_ALWAYS_ON_OFF 0
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CTRL_WB_RSSI_ALWAYS_ON_OFF_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CTRL_WB_RSSI_ALWAYS_ON_ON 1
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CTRL_WB_RSSI_ALWAYS_ON_ON_MASK 0x4000
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CTRL_WB_RSSI_ALWAYS_ON_ZB_2 1
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CTRL_WB_RSSI_ALWAYS_ON_ZB_2_MASK 0x4000
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CTRL_WB_RSSI_ALWAYS_ON_BLE_1 1
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CTRL_WB_RSSI_ALWAYS_ON_BLE_1_MASK 0x4000
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CTRL_WB_RSSI_ALWAYS_ON_BLE_2 1
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CTRL_WB_RSSI_ALWAYS_ON_BLE_2_MASK 0x4000
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int alpha_wb_rssi : 4;
    unsigned int wb_rssi_window : 10;
    unsigned int wb_rssi_always_on : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_wb_rssi_ctrl;
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CTRL_RST 0x6007
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_CTRL_ADDR  0x4001d184


/* wb_rssi_wakeup register */
/*----------------------*/
/* Wideband rssi wakeup. (Stored in configuration bank) */
/* wb_rssi_wakeup : Threshold for wideband rssi wakeup Signed values: -128..0 [dBm] */
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_WAKEUP_WB_RSSI_WAKEUP_MASK 0x01ff
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_WAKEUP_WB_RSSI_WAKEUP_POS  0
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#else
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_WAKEUP_WB_RSSI_WAKEUP_ZB_2 412
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_WAKEUP_WB_RSSI_WAKEUP_ZB_2_MASK 0x19c
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_WAKEUP_WB_RSSI_WAKEUP_BLE_1 412
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_WAKEUP_WB_RSSI_WAKEUP_BLE_1_MASK 0x19c
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_WAKEUP_WB_RSSI_WAKEUP_BLE_2 412
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_WAKEUP_WB_RSSI_WAKEUP_BLE_2_MASK 0x19c
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int wb_rssi_wakeup : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_wb_rssi_wakeup;
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_WAKEUP_RST 0x19c
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_WAKEUP_ADDR  0x4001d188


/* nb_rssi_wakeup register */
/*----------------------*/
/* Narrowband rssi wakeup. (Stored in configuration bank) */
/* nb_rssi_wakeup : Threshold for narrowband rssi wakeup Signed values: -128..0 [dBm] */
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_WAKEUP_NB_RSSI_WAKEUP_MASK 0x01ff
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_WAKEUP_NB_RSSI_WAKEUP_POS  0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_WAKEUP_NB_RSSI_WAKEUP_BT_LE_1 414
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_WAKEUP_NB_RSSI_WAKEUP_BT_LE_1_MASK 0x19e
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_WAKEUP_NB_RSSI_WAKEUP_BT_LE_2 416
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_WAKEUP_NB_RSSI_WAKEUP_BT_LE_2_MASK 0x1a0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_WAKEUP_NB_RSSI_WAKEUP_NORDIC_250 414
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_WAKEUP_NB_RSSI_WAKEUP_NORDIC_250_MASK 0x19e
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_WAKEUP_NB_RSSI_WAKEUP_NORDIC_2 416
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_WAKEUP_NB_RSSI_WAKEUP_NORDIC_2_MASK 0x1a0
#else
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_WAKEUP_NB_RSSI_WAKEUP_MASK 0x01ff
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_WAKEUP_NB_RSSI_WAKEUP_POS  0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_WAKEUP_NB_RSSI_WAKEUP_ZB_2 412
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_WAKEUP_NB_RSSI_WAKEUP_ZB_2_MASK 0x19c
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_WAKEUP_NB_RSSI_WAKEUP_BLE_1 412
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_WAKEUP_NB_RSSI_WAKEUP_BLE_1_MASK 0x19c
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_WAKEUP_NB_RSSI_WAKEUP_BLE_2 412
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_WAKEUP_NB_RSSI_WAKEUP_BLE_2_MASK 0x19c
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nb_rssi_wakeup : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_nb_rssi_wakeup;
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_WAKEUP_RST 0x19c
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_WAKEUP_ADDR  0x4001d18c


/* nb_rssi_ctrl1 register */
/*----------------------*/
/* Narrowband rssi control (timeout) (Stored in configuration bank) */
/* alpha1_nb_rssi : Narrowband rssi lowpass filter timeout constant. Value map: 0..6 -> 2**0..2**6 */
/* nb_rssi_timeout : Narrowband rssi lowpass filter timeout. Values: 0..8191 */
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL1_ALPHA1_NB_RSSI_MASK 0x0007
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL1_ALPHA1_NB_RSSI_POS  0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL1_NB_RSSI_TIMEOUT_MASK 0xfff8
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL1_NB_RSSI_TIMEOUT_POS  3
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL1_NB_RSSI_TIMEOUT_BT_LE_1 28
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL1_NB_RSSI_TIMEOUT_BT_LE_1_MASK 0xe0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL1_NB_RSSI_TIMEOUT_BT_LE_2 56
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL1_NB_RSSI_TIMEOUT_BT_LE_2_MASK 0x1c0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL1_NB_RSSI_TIMEOUT_NORDIC_250 28
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL1_NB_RSSI_TIMEOUT_NORDIC_250_MASK 0xe0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL1_NB_RSSI_TIMEOUT_NORDIC_2 56
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL1_NB_RSSI_TIMEOUT_NORDIC_2_MASK 0x1c0
#else
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL1_ALPHA1_NB_RSSI_MASK 0x0007
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL1_ALPHA1_NB_RSSI_POS  0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL1_ALPHA1_NB_RSSI_ZB_2 1
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL1_ALPHA1_NB_RSSI_ZB_2_MASK 0x1
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL1_ALPHA1_NB_RSSI_BLE_1 1
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL1_ALPHA1_NB_RSSI_BLE_1_MASK 0x1
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL1_ALPHA1_NB_RSSI_BLE_2 1
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL1_ALPHA1_NB_RSSI_BLE_2_MASK 0x1
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL1_NB_RSSI_TIMEOUT_MASK 0xfff8
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL1_NB_RSSI_TIMEOUT_POS  3
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL1_NB_RSSI_TIMEOUT_ZB_2 64
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL1_NB_RSSI_TIMEOUT_ZB_2_MASK 0x200
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL1_NB_RSSI_TIMEOUT_BLE_1 64
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL1_NB_RSSI_TIMEOUT_BLE_1_MASK 0x200
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL1_NB_RSSI_TIMEOUT_BLE_2 64
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL1_NB_RSSI_TIMEOUT_BLE_2_MASK 0x200
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int alpha1_nb_rssi : 3;
    unsigned int nb_rssi_timeout : 13;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_nb_rssi_ctrl1;
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL1_RST 0x201
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL1_ADDR  0x4001d190


/* nb_rssi_ctrl2 register */
/*----------------------*/
/* Narrowband rssi control (window) (Stored in configuration bank) */
/* nb_rssi_window : Narrowband rssi lowpass filter window. Values: 0..8191 */
/* reset_nb_rssi_counter : Keep nb_RSSI_counter at zero before wakeup is detected. When this bit is low, the AGC and RSSI is backwards compatible with MRA1 */
/* nb_rssi_wakeup_disable_sync_peak_search_en : Enable bit to disable the sync peak detection when the nb_rssi_wakeup drops below its detection threshold during sync peak detection. */
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_NB_RSSI_WINDOW_MASK 0x1fff
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_NB_RSSI_WINDOW_POS  0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_NB_RSSI_WINDOW_BT_LE_1 16
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_NB_RSSI_WINDOW_BT_LE_1_MASK 0x10
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_NB_RSSI_WINDOW_BT_LE_2 24
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_NB_RSSI_WINDOW_BT_LE_2_MASK 0x18
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_NB_RSSI_WINDOW_NORDIC_250 16
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_NB_RSSI_WINDOW_NORDIC_250_MASK 0x10
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_NB_RSSI_WINDOW_NORDIC_2 24
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_NB_RSSI_WINDOW_NORDIC_2_MASK 0x18
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_RESET_NB_RSSI_COUNTER_MASK 0x2000
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_RESET_NB_RSSI_COUNTER_POS  13
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_RESET_NB_RSSI_COUNTER_DIS 0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_RESET_NB_RSSI_COUNTER_DIS_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_RESET_NB_RSSI_COUNTER_EN 1
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_RESET_NB_RSSI_COUNTER_EN_MASK 0x2000
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_NB_RSSI_WAKEUP_DISABLE_SYNC_PEAK_SEARCH_EN_MASK 0x4000
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_NB_RSSI_WAKEUP_DISABLE_SYNC_PEAK_SEARCH_EN_POS  14
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_NB_RSSI_WAKEUP_DISABLE_SYNC_PEAK_SEARCH_EN_DIS 0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_NB_RSSI_WAKEUP_DISABLE_SYNC_PEAK_SEARCH_EN_DIS_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_NB_RSSI_WAKEUP_DISABLE_SYNC_PEAK_SEARCH_EN_EN 1
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_NB_RSSI_WAKEUP_DISABLE_SYNC_PEAK_SEARCH_EN_EN_MASK 0x4000
#else
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_NB_RSSI_WINDOW_MASK 0x1fff
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_NB_RSSI_WINDOW_POS  0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_NB_RSSI_WINDOW_ZB_2 16
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_NB_RSSI_WINDOW_ZB_2_MASK 0x10
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_NB_RSSI_WINDOW_BLE_1 16
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_NB_RSSI_WINDOW_BLE_1_MASK 0x10
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_NB_RSSI_WINDOW_BLE_2 16
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_NB_RSSI_WINDOW_BLE_2_MASK 0x10
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_RESET_NB_RSSI_COUNTER_MASK 0x2000
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_RESET_NB_RSSI_COUNTER_POS  13
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_RESET_NB_RSSI_COUNTER_DIS 0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_RESET_NB_RSSI_COUNTER_DIS_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_RESET_NB_RSSI_COUNTER_EN 1
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_RESET_NB_RSSI_COUNTER_EN_MASK 0x2000
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_RESET_NB_RSSI_COUNTER_ZB_2 1
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_RESET_NB_RSSI_COUNTER_ZB_2_MASK 0x2000
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_RESET_NB_RSSI_COUNTER_BLE_1 1
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_RESET_NB_RSSI_COUNTER_BLE_1_MASK 0x2000
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_RESET_NB_RSSI_COUNTER_BLE_2 1
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_RESET_NB_RSSI_COUNTER_BLE_2_MASK 0x2000
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_NB_RSSI_WAKEUP_DISABLE_SYNC_PEAK_SEARCH_EN_MASK 0x4000
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_NB_RSSI_WAKEUP_DISABLE_SYNC_PEAK_SEARCH_EN_POS  14
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_NB_RSSI_WAKEUP_DISABLE_SYNC_PEAK_SEARCH_EN_DIS 0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_NB_RSSI_WAKEUP_DISABLE_SYNC_PEAK_SEARCH_EN_DIS_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_NB_RSSI_WAKEUP_DISABLE_SYNC_PEAK_SEARCH_EN_EN 1
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_NB_RSSI_WAKEUP_DISABLE_SYNC_PEAK_SEARCH_EN_EN_MASK 0x4000
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_NB_RSSI_WAKEUP_DISABLE_SYNC_PEAK_SEARCH_EN_ZB_2 0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_NB_RSSI_WAKEUP_DISABLE_SYNC_PEAK_SEARCH_EN_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_NB_RSSI_WAKEUP_DISABLE_SYNC_PEAK_SEARCH_EN_BLE_1 0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_NB_RSSI_WAKEUP_DISABLE_SYNC_PEAK_SEARCH_EN_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_NB_RSSI_WAKEUP_DISABLE_SYNC_PEAK_SEARCH_EN_BLE_2 0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_NB_RSSI_WAKEUP_DISABLE_SYNC_PEAK_SEARCH_EN_BLE_2_MASK 0x0
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nb_rssi_window : 13;
    unsigned int reset_nb_rssi_counter : 1;
    unsigned int nb_rssi_wakeup_disable_sync_peak_search_en : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_nb_rssi_ctrl2;
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_RST 0x2010
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL2_ADDR  0x4001d194


/* nb_rssi_ctrl3 register */
/*----------------------*/
/* Narrowband rssi control (scan mode) (Stored in configuration bank) */
/* alpha2_nb_rssi : Narrowband rssi lowpass filter window constant. Value map: 3..9 -> 2**3..2**9 */
/* alpha3_nb_rssi : Narrowband rssi lowpass filter (for scan mode) window constant. Value map: 3..7 => 2**3..2**7 */
/* nb_rssi_wakeup_limit_en : Enable bit for slope limited wakeup RSSI. When this bit is low, the AGC and RSSI is backwards compatible with MRA1 */
/* rssi_syncf_cordic_wakeup_limit : Slope limited wakeup RSSI */
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_ALPHA2_NB_RSSI_MASK 0x000f
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_ALPHA2_NB_RSSI_POS  0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_ALPHA2_NB_RSSI_BT_LE_1 3
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_ALPHA2_NB_RSSI_BT_LE_1_MASK 0x3
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_ALPHA2_NB_RSSI_BT_LE_2 2
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_ALPHA2_NB_RSSI_BT_LE_2_MASK 0x2
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_ALPHA2_NB_RSSI_NORDIC_250 3
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_ALPHA2_NB_RSSI_NORDIC_250_MASK 0x3
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_ALPHA2_NB_RSSI_NORDIC_2 2
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_ALPHA2_NB_RSSI_NORDIC_2_MASK 0x2
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_ALPHA3_NB_RSSI_MASK 0x0070
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_ALPHA3_NB_RSSI_POS  4
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_NB_RSSI_WAKEUP_LIMIT_EN_MASK 0x0080
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_NB_RSSI_WAKEUP_LIMIT_EN_POS  7
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_NB_RSSI_WAKEUP_LIMIT_EN_DIS 0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_NB_RSSI_WAKEUP_LIMIT_EN_DIS_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_NB_RSSI_WAKEUP_LIMIT_EN_EN 1
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_NB_RSSI_WAKEUP_LIMIT_EN_EN_MASK 0x80
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_RSSI_SYNCF_CORDIC_WAKEUP_LIMIT_MASK 0xff00
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_RSSI_SYNCF_CORDIC_WAKEUP_LIMIT_POS  8
#else
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_ALPHA2_NB_RSSI_MASK 0x000f
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_ALPHA2_NB_RSSI_POS  0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_ALPHA2_NB_RSSI_ZB_2 5
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_ALPHA2_NB_RSSI_ZB_2_MASK 0x5
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_ALPHA2_NB_RSSI_BLE_1 5
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_ALPHA2_NB_RSSI_BLE_1_MASK 0x5
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_ALPHA2_NB_RSSI_BLE_2 5
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_ALPHA2_NB_RSSI_BLE_2_MASK 0x5
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_ALPHA3_NB_RSSI_MASK 0x0070
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_ALPHA3_NB_RSSI_POS  4
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_ALPHA3_NB_RSSI_ZB_2 3
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_ALPHA3_NB_RSSI_ZB_2_MASK 0x30
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_ALPHA3_NB_RSSI_BLE_1 3
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_ALPHA3_NB_RSSI_BLE_1_MASK 0x30
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_ALPHA3_NB_RSSI_BLE_2 3
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_ALPHA3_NB_RSSI_BLE_2_MASK 0x30
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_NB_RSSI_WAKEUP_LIMIT_EN_MASK 0x0080
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_NB_RSSI_WAKEUP_LIMIT_EN_POS  7
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_NB_RSSI_WAKEUP_LIMIT_EN_DIS 0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_NB_RSSI_WAKEUP_LIMIT_EN_DIS_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_NB_RSSI_WAKEUP_LIMIT_EN_EN 1
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_NB_RSSI_WAKEUP_LIMIT_EN_EN_MASK 0x80
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_NB_RSSI_WAKEUP_LIMIT_EN_ZB_2 0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_NB_RSSI_WAKEUP_LIMIT_EN_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_NB_RSSI_WAKEUP_LIMIT_EN_BLE_1 0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_NB_RSSI_WAKEUP_LIMIT_EN_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_NB_RSSI_WAKEUP_LIMIT_EN_BLE_2 0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_NB_RSSI_WAKEUP_LIMIT_EN_BLE_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_RSSI_SYNCF_CORDIC_WAKEUP_LIMIT_MASK 0xff00
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_RSSI_SYNCF_CORDIC_WAKEUP_LIMIT_POS  8
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_RSSI_SYNCF_CORDIC_WAKEUP_LIMIT_ZB_2 50
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_RSSI_SYNCF_CORDIC_WAKEUP_LIMIT_ZB_2_MASK 0x3200
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_RSSI_SYNCF_CORDIC_WAKEUP_LIMIT_BLE_1 50
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_RSSI_SYNCF_CORDIC_WAKEUP_LIMIT_BLE_1_MASK 0x3200
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_RSSI_SYNCF_CORDIC_WAKEUP_LIMIT_BLE_2 50
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_RSSI_SYNCF_CORDIC_WAKEUP_LIMIT_BLE_2_MASK 0x3200
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int alpha2_nb_rssi : 4;
    unsigned int alpha3_nb_rssi : 3;
    unsigned int nb_rssi_wakeup_limit_en : 1;
    unsigned int rssi_syncf_cordic_wakeup_limit : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_nb_rssi_ctrl3;
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_RST 0x3235
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_CTRL3_ADDR  0x4001d198


/* nb_rssi_payload_ctrl register */
/*----------------------*/
/* Narrowband rssi payload control (Stored in configuration bank) */
/* alpha_nb_rssi_payload : Narrowband rssi payload lowpass filter constant. Value map: 2..8 -> 2**2..2**8 */
/* alpha_nb_rssi_pa_cal : Narrowband rssi payload lowpass filter constant during PA calibration. Value map: 2..8 -> 2**2..2**8 */
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_PAYLOAD_CTRL_ALPHA_NB_RSSI_PAYLOAD_MASK 0x000f
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_PAYLOAD_CTRL_ALPHA_NB_RSSI_PAYLOAD_POS  0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_PAYLOAD_CTRL_ALPHA_NB_RSSI_PA_CAL_MASK 0x00f0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_PAYLOAD_CTRL_ALPHA_NB_RSSI_PA_CAL_POS  4
#else
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_PAYLOAD_CTRL_ALPHA_NB_RSSI_PAYLOAD_MASK 0x000f
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_PAYLOAD_CTRL_ALPHA_NB_RSSI_PAYLOAD_POS  0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_PAYLOAD_CTRL_ALPHA_NB_RSSI_PAYLOAD_ZB_2 5
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_PAYLOAD_CTRL_ALPHA_NB_RSSI_PAYLOAD_ZB_2_MASK 0x5
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_PAYLOAD_CTRL_ALPHA_NB_RSSI_PAYLOAD_BLE_1 5
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_PAYLOAD_CTRL_ALPHA_NB_RSSI_PAYLOAD_BLE_1_MASK 0x5
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_PAYLOAD_CTRL_ALPHA_NB_RSSI_PAYLOAD_BLE_2 5
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_PAYLOAD_CTRL_ALPHA_NB_RSSI_PAYLOAD_BLE_2_MASK 0x5
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_PAYLOAD_CTRL_ALPHA_NB_RSSI_PA_CAL_MASK 0x00f0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_PAYLOAD_CTRL_ALPHA_NB_RSSI_PA_CAL_POS  4
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_PAYLOAD_CTRL_ALPHA_NB_RSSI_PA_CAL_ZB_2 4
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_PAYLOAD_CTRL_ALPHA_NB_RSSI_PA_CAL_ZB_2_MASK 0x40
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_PAYLOAD_CTRL_ALPHA_NB_RSSI_PA_CAL_BLE_1 4
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_PAYLOAD_CTRL_ALPHA_NB_RSSI_PA_CAL_BLE_1_MASK 0x40
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_PAYLOAD_CTRL_ALPHA_NB_RSSI_PA_CAL_BLE_2 4
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_PAYLOAD_CTRL_ALPHA_NB_RSSI_PA_CAL_BLE_2_MASK 0x40
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int alpha_nb_rssi_payload : 4;
    unsigned int alpha_nb_rssi_pa_cal : 4;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_nb_rssi_payload_ctrl;
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_PAYLOAD_CTRL_RST 0x45
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_PAYLOAD_CTRL_ADDR  0x4001d19c


/* nb_rssi_modem_ctrl register */
/*----------------------*/
/* Narrowband rssi modem control */
/* nb_rssi_timeout : Narrowband rssi settling window. Values : 0?8191 */
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_MODEM_CTRL_NB_RSSI_TIMEOUT_MASK 0x1fff
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_MODEM_CTRL_NB_RSSI_TIMEOUT_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nb_rssi_timeout : 13;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_nb_rssi_modem_ctrl;
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_MODEM_CTRL_RST 0x10
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_MODEM_CTRL_ADDR  0x4001d1a0


/* mute_ctrl1 register */
/*----------------------*/
/* mute control (ADC output) (Stored in configuration bank) */
/* mn_mute_enable : Control signal that enables muting the ADC output and/or correlator input following a change in mn_low_gain_setting */
/* ifamp_mute_enable : Control signal that enables muting the ADC output and/or correlator input following an IFAMP gain change */
/* mn_ifamp_adc_mute_time : Number of muted ADC samples following an IFAMP gain change or change in mn_low_gain_setting */
/* aaf_mute_enable : Control signal that enables muting the ADC output following an AAF gain change */
/* aaf_adc_mute_time : Number of muted ADC samples following an AAF gain change */
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_MN_MUTE_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_MN_MUTE_ENABLE_POS  0
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_IFAMP_MUTE_ENABLE_MASK 0x0002
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_IFAMP_MUTE_ENABLE_POS  1
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_MN_IFAMP_ADC_MUTE_TIME_MASK 0x00fc
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_MN_IFAMP_ADC_MUTE_TIME_POS  2
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_AAF_MUTE_ENABLE_MASK 0x0100
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_AAF_MUTE_ENABLE_POS  8
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_AAF_ADC_MUTE_TIME_MASK 0x7e00
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_AAF_ADC_MUTE_TIME_POS  9
#else
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_MN_MUTE_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_MN_MUTE_ENABLE_POS  0
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_MN_MUTE_ENABLE_ZB_2 0
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_MN_MUTE_ENABLE_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_MN_MUTE_ENABLE_BLE_1 0
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_MN_MUTE_ENABLE_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_MN_MUTE_ENABLE_BLE_2 0
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_MN_MUTE_ENABLE_BLE_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_IFAMP_MUTE_ENABLE_MASK 0x0002
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_IFAMP_MUTE_ENABLE_POS  1
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_IFAMP_MUTE_ENABLE_ZB_2 0
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_IFAMP_MUTE_ENABLE_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_IFAMP_MUTE_ENABLE_BLE_1 0
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_IFAMP_MUTE_ENABLE_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_IFAMP_MUTE_ENABLE_BLE_2 0
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_IFAMP_MUTE_ENABLE_BLE_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_MN_IFAMP_ADC_MUTE_TIME_MASK 0x00fc
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_MN_IFAMP_ADC_MUTE_TIME_POS  2
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_MN_IFAMP_ADC_MUTE_TIME_ZB_2 4
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_MN_IFAMP_ADC_MUTE_TIME_ZB_2_MASK 0x10
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_MN_IFAMP_ADC_MUTE_TIME_BLE_1 4
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_MN_IFAMP_ADC_MUTE_TIME_BLE_1_MASK 0x10
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_MN_IFAMP_ADC_MUTE_TIME_BLE_2 4
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_MN_IFAMP_ADC_MUTE_TIME_BLE_2_MASK 0x10
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_AAF_MUTE_ENABLE_MASK 0x0100
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_AAF_MUTE_ENABLE_POS  8
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_AAF_MUTE_ENABLE_ZB_2 0
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_AAF_MUTE_ENABLE_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_AAF_MUTE_ENABLE_BLE_1 0
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_AAF_MUTE_ENABLE_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_AAF_MUTE_ENABLE_BLE_2 0
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_AAF_MUTE_ENABLE_BLE_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_AAF_ADC_MUTE_TIME_MASK 0x7e00
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_AAF_ADC_MUTE_TIME_POS  9
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_AAF_ADC_MUTE_TIME_ZB_2 0
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_AAF_ADC_MUTE_TIME_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_AAF_ADC_MUTE_TIME_BLE_1 0
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_AAF_ADC_MUTE_TIME_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_AAF_ADC_MUTE_TIME_BLE_2 0
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_AAF_ADC_MUTE_TIME_BLE_2_MASK 0x0
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int mn_mute_enable : 1;
    unsigned int ifamp_mute_enable : 1;
    unsigned int mn_ifamp_adc_mute_time : 6;
    unsigned int aaf_mute_enable : 1;
    unsigned int aaf_adc_mute_time : 6;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_mute_ctrl1;
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_RST 0x10
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL1_ADDR  0x4001d1a4


/* mute_ctrl2 register */
/*----------------------*/
/* mute control (correlator input) (Stored in configuration bank) */
/* corr_mute_enable : Control signal that enables muting the correlator input */
/* corr_mute_delay : Delay for correlator input mute start */
/* corr_mute_window_1 : Duration (number of (decimated) samples) of correlator input muting if IFAMP gain change is 1 step */
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL2_CORR_MUTE_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL2_CORR_MUTE_ENABLE_POS  0
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL2_CORR_MUTE_DELAY_MASK 0x007e
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL2_CORR_MUTE_DELAY_POS  1
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL2_CORR_MUTE_WINDOW_1_MASK 0x7f80
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL2_CORR_MUTE_WINDOW_1_POS  7
#else
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL2_CORR_MUTE_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL2_CORR_MUTE_ENABLE_POS  0
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL2_CORR_MUTE_ENABLE_ZB_2 1
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL2_CORR_MUTE_ENABLE_ZB_2_MASK 0x1
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL2_CORR_MUTE_ENABLE_BLE_1 1
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL2_CORR_MUTE_ENABLE_BLE_1_MASK 0x1
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL2_CORR_MUTE_ENABLE_BLE_2 1
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL2_CORR_MUTE_ENABLE_BLE_2_MASK 0x1
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL2_CORR_MUTE_DELAY_MASK 0x007e
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL2_CORR_MUTE_DELAY_POS  1
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL2_CORR_MUTE_DELAY_ZB_2 10
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL2_CORR_MUTE_DELAY_ZB_2_MASK 0x14
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL2_CORR_MUTE_DELAY_BLE_1 10
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL2_CORR_MUTE_DELAY_BLE_1_MASK 0x14
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL2_CORR_MUTE_DELAY_BLE_2 10
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL2_CORR_MUTE_DELAY_BLE_2_MASK 0x14
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL2_CORR_MUTE_WINDOW_1_MASK 0x7f80
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL2_CORR_MUTE_WINDOW_1_POS  7
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL2_CORR_MUTE_WINDOW_1_ZB_2 24
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL2_CORR_MUTE_WINDOW_1_ZB_2_MASK 0xc00
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL2_CORR_MUTE_WINDOW_1_BLE_1 24
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL2_CORR_MUTE_WINDOW_1_BLE_1_MASK 0xc00
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL2_CORR_MUTE_WINDOW_1_BLE_2 24
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL2_CORR_MUTE_WINDOW_1_BLE_2_MASK 0xc00
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int corr_mute_enable : 1;
    unsigned int corr_mute_delay : 6;
    unsigned int corr_mute_window_1 : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_mute_ctrl2;
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL2_RST 0xc15
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL2_ADDR  0x4001d1a8


/* mute_ctrl3 register */
/*----------------------*/
/* mute control (correlator input) (Stored in configuration bank) */
/* corr_mute_window_2 : Duration (number of (decimated) samples) of correlator input muting if IFAMP gain change is 2 steps */
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL3_CORR_MUTE_WINDOW_2_MASK 0x01ff
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL3_CORR_MUTE_WINDOW_2_POS  0
#else
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL3_CORR_MUTE_WINDOW_2_MASK 0x01ff
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL3_CORR_MUTE_WINDOW_2_POS  0
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL3_CORR_MUTE_WINDOW_2_ZB_2 40
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL3_CORR_MUTE_WINDOW_2_ZB_2_MASK 0x28
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL3_CORR_MUTE_WINDOW_2_BLE_1 40
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL3_CORR_MUTE_WINDOW_2_BLE_1_MASK 0x28
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL3_CORR_MUTE_WINDOW_2_BLE_2 40
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL3_CORR_MUTE_WINDOW_2_BLE_2_MASK 0x28
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int corr_mute_window_2 : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_mute_ctrl3;
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL3_RST 0x28
#define EXTAPB_REGFILE_RX_DP_MUTE_CTRL3_ADDR  0x4001d1ac


/* ana_agc_bypass register */
/*----------------------*/
/* Control signals to bypass different parts of the analogue agc and use register values */
/* clip_det_1 : Control signal to bypass clip detector 1 part of the analogue agc and use register values */
/* clip_det_1_clip_override_enable : Enable bit to override ip_a2d_clipdet_hs_clip */
/* clip_det_1_clip_override_value : Override value for ip_a2d_clipdet_hs_clip */
/* clip_det_2 : Control signal to bypass clip detector 2 part of the analogue agc and use register values */
/* clip_det_2_clip_override_enable : Enable bit to override ip_a2d_clipdet_ls_clip */
/* clip_det_2_clip_override_value : Override value for ip_a2d_clipdet_ls_clip */
/* clip_det_3 : Control signal to bypass clip detector 3 part of the analogue agc and use register values */
/* ifamp : Control signal to bypass ifamp part of the analogue agc and use register values */
/* aaf : Control signal to bypass aaf part of the analogue agc and use register values */
/* rssi_wakeup : Control signal to bypass rssi wakeup part of the analogue agc and use register values */
/* nb_rssi_lut : Control signal to bypass nb rssi lut part of the analogue agc and use register values */
/* lna : Control signal to bypass lna part of the analogue agc and use register values */
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_CLIP_DET_1_MASK 0x0001
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_CLIP_DET_1_POS  0
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_CLIP_DET_1_DIS 0
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_CLIP_DET_1_DIS_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_CLIP_DET_1_EN 1
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_CLIP_DET_1_EN_MASK 0x1
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_CLIP_DET_1_CLIP_OVERRIDE_ENABLE_MASK 0x0002
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_CLIP_DET_1_CLIP_OVERRIDE_ENABLE_POS  1
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_CLIP_DET_1_CLIP_OVERRIDE_VALUE_MASK 0x0004
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_CLIP_DET_1_CLIP_OVERRIDE_VALUE_POS  2
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_CLIP_DET_2_MASK 0x0008
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_CLIP_DET_2_POS  3
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_CLIP_DET_2_DIS 0
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_CLIP_DET_2_DIS_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_CLIP_DET_2_EN 1
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_CLIP_DET_2_EN_MASK 0x8
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_CLIP_DET_2_CLIP_OVERRIDE_ENABLE_MASK 0x0010
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_CLIP_DET_2_CLIP_OVERRIDE_ENABLE_POS  4
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_CLIP_DET_2_CLIP_OVERRIDE_VALUE_MASK 0x0020
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_CLIP_DET_2_CLIP_OVERRIDE_VALUE_POS  5
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_CLIP_DET_3_MASK 0x0040
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_CLIP_DET_3_POS  6
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_CLIP_DET_3_DIS 0
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_CLIP_DET_3_DIS_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_CLIP_DET_3_EN 1
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_CLIP_DET_3_EN_MASK 0x40
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_IFAMP_MASK 0x0080
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_IFAMP_POS  7
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_IFAMP_DIS 0
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_IFAMP_DIS_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_IFAMP_EN 1
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_IFAMP_EN_MASK 0x80
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_AAF_MASK 0x0100
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_AAF_POS  8
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_AAF_DIS 0
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_AAF_DIS_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_AAF_EN 1
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_AAF_EN_MASK 0x100
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_RSSI_WAKEUP_MASK 0x0200
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_RSSI_WAKEUP_POS  9
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_RSSI_WAKEUP_DIS 0
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_RSSI_WAKEUP_DIS_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_RSSI_WAKEUP_EN 1
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_RSSI_WAKEUP_EN_MASK 0x200
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_NB_RSSI_LUT_MASK 0x0400
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_NB_RSSI_LUT_POS  10
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_NB_RSSI_LUT_DIS 0
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_NB_RSSI_LUT_DIS_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_NB_RSSI_LUT_EN 1
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_NB_RSSI_LUT_EN_MASK 0x400
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_LNA_MASK 0x0800
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_LNA_POS  11
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_LNA_DIS 0
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_LNA_DIS_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_LNA_EN 1
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_LNA_EN_MASK 0x800
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int clip_det_1 : 1;
    unsigned int clip_det_1_clip_override_enable : 1;
    unsigned int clip_det_1_clip_override_value : 1;
    unsigned int clip_det_2 : 1;
    unsigned int clip_det_2_clip_override_enable : 1;
    unsigned int clip_det_2_clip_override_value : 1;
    unsigned int clip_det_3 : 1;
    unsigned int ifamp : 1;
    unsigned int aaf : 1;
    unsigned int rssi_wakeup : 1;
    unsigned int nb_rssi_lut : 1;
    unsigned int lna : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_ana_agc_bypass;
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_RST 0x0
#define EXTAPB_REGFILE_RX_DP_ANA_AGC_BYPASS_ADDR  0x4001d1b0


/* agc_freeze_offset register */
/*----------------------*/
/* Number of symbols after the correlation start, to freeze the actual gain settings calculated by the agc state machine, in order to avoid transitions during the payload reception. Values: -16..15 */
/* agc_link_freeze_offset : In link mode, number of symbols after the correlation start, to freeze the actual gain settings calculated by the agc state machine, in order to avoid transitions during the payload reception. Values: -16..15 */
/* agc_scan_freeze_offset : In scan mode, number of symbols after the correlation start, to freeze the actual gain settings calculated by the agc state machine, in order to avoid transitions during the payload reception. Values: -16..15 */
/* agc_scan_freeze_en : Enable bit for the agc_scan_freeze_offset. When this bit is low, the AGC is backwards compatible with MRA1 */
#define EXTAPB_REGFILE_RX_DP_AGC_FREEZE_OFFSET_AGC_LINK_FREEZE_OFFSET_MASK 0x001f
#define EXTAPB_REGFILE_RX_DP_AGC_FREEZE_OFFSET_AGC_LINK_FREEZE_OFFSET_POS  0
#define EXTAPB_REGFILE_RX_DP_AGC_FREEZE_OFFSET_AGC_SCAN_FREEZE_OFFSET_MASK 0x03e0
#define EXTAPB_REGFILE_RX_DP_AGC_FREEZE_OFFSET_AGC_SCAN_FREEZE_OFFSET_POS  5
#define EXTAPB_REGFILE_RX_DP_AGC_FREEZE_OFFSET_AGC_SCAN_FREEZE_EN_MASK 0x0400
#define EXTAPB_REGFILE_RX_DP_AGC_FREEZE_OFFSET_AGC_SCAN_FREEZE_EN_POS  10
#define EXTAPB_REGFILE_RX_DP_AGC_FREEZE_OFFSET_AGC_SCAN_FREEZE_EN_DIS 0
#define EXTAPB_REGFILE_RX_DP_AGC_FREEZE_OFFSET_AGC_SCAN_FREEZE_EN_DIS_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_AGC_FREEZE_OFFSET_AGC_SCAN_FREEZE_EN_EN 1
#define EXTAPB_REGFILE_RX_DP_AGC_FREEZE_OFFSET_AGC_SCAN_FREEZE_EN_EN_MASK 0x400
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int agc_link_freeze_offset : 5;
    unsigned int agc_scan_freeze_offset : 5;
    unsigned int agc_scan_freeze_en : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_agc_freeze_offset;
#define EXTAPB_REGFILE_RX_DP_AGC_FREEZE_OFFSET_RST 0x42
#define EXTAPB_REGFILE_RX_DP_AGC_FREEZE_OFFSET_ADDR  0x4001d1b4


/* wb_rssi_dbm_run register */
/*----------------------*/
/* WB RSSI value readable when packet is received. (Snapshot register) */
/* wb_rssi_dbm : Snapshot value */
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_DBM_RUN_WB_RSSI_DBM_MASK 0x01ff
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_DBM_RUN_WB_RSSI_DBM_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int wb_rssi_dbm : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_wb_rssi_dbm_run;
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_DBM_RUN_RST 0x0
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_DBM_RUN_DYNAMIC true
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_DBM_RUN_SNAPCLOCK 1
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_DBM_RUN_ADDR  0x4001d1b8


/* wb_rssi_dbm_sync register */
/*----------------------*/
/* WB RSSI value latched at end of sync phase */
/* wb_rssi_dbm : See register description */
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_DBM_SYNC_WB_RSSI_DBM_MASK 0x01ff
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_DBM_SYNC_WB_RSSI_DBM_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int wb_rssi_dbm : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_wb_rssi_dbm_sync;
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_DBM_SYNC_RST 0x0
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_DBM_SYNC_DYNAMIC true
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_DBM_SYNC_SNAPCLOCK 1
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_DBM_SYNC_ADDR  0x4001d1c0


/* wb_rssi_dbm_packet register */
/*----------------------*/
/* WB RSSI value readable when packet is received */
/* wb_rssi_dbm : See register description */
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_DBM_PACKET_WB_RSSI_DBM_MASK 0x01ff
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_DBM_PACKET_WB_RSSI_DBM_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int wb_rssi_dbm : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_wb_rssi_dbm_packet;
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_DBM_PACKET_RST 0x0
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_DBM_PACKET_DYNAMIC true
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_DBM_PACKET_SNAPCLOCK 1
#define EXTAPB_REGFILE_RX_DP_WB_RSSI_DBM_PACKET_ADDR  0x4001d1c4


/* nb_rssi_dbm_run register */
/*----------------------*/
/* NB RSSI value readable when sync phase is still ongoing. (Snapshot register) */
/* nb_rssi_dbm : Snapshot value of the NB RSSI */
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_DBM_RUN_NB_RSSI_DBM_MASK 0x03ff
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_DBM_RUN_NB_RSSI_DBM_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nb_rssi_dbm : 10;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_nb_rssi_dbm_run;
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_DBM_RUN_RST 0x0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_DBM_RUN_DYNAMIC true
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_DBM_RUN_SNAPCLOCK 1
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_DBM_RUN_ADDR  0x4001d1c8


/* nb_rssi_agc_dbm_run register */
/*----------------------*/
/* NB RSSI value used by AGC readable when sync phase is still ongoing. (Snapshot register) */
/* nb_rssi_dbm : Snapshot value of the NB RSSI */
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_AGC_DBM_RUN_NB_RSSI_DBM_MASK 0x03ff
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_AGC_DBM_RUN_NB_RSSI_DBM_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nb_rssi_dbm : 10;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_nb_rssi_agc_dbm_run;
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_AGC_DBM_RUN_RST 0x0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_AGC_DBM_RUN_DYNAMIC true
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_AGC_DBM_RUN_SNAPCLOCK 1
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_AGC_DBM_RUN_ADDR  0x4001d1cc


/* nb_rssi_dbm_sync register */
/*----------------------*/
/* NB RSSI value latched at end of sync phase */
/* nb_rssi_dbm : Latched value */
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_DBM_SYNC_NB_RSSI_DBM_MASK 0x03ff
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_DBM_SYNC_NB_RSSI_DBM_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nb_rssi_dbm : 10;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_nb_rssi_dbm_sync;
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_DBM_SYNC_RST 0x0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_DBM_SYNC_DYNAMIC true
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_DBM_SYNC_SNAPCLOCK 1
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_DBM_SYNC_ADDR  0x4001d1d0


/* nb_rssi_agc_dbm_sync register */
/*----------------------*/
/* NB RSSI value used by AGC latched at end of sync phase */
/* nb_rssi_dbm : Latched value */
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_AGC_DBM_SYNC_NB_RSSI_DBM_MASK 0x03ff
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_AGC_DBM_SYNC_NB_RSSI_DBM_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nb_rssi_dbm : 10;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_nb_rssi_agc_dbm_sync;
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_AGC_DBM_SYNC_RST 0x0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_AGC_DBM_SYNC_DYNAMIC true
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_AGC_DBM_SYNC_SNAPCLOCK 1
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_AGC_DBM_SYNC_ADDR  0x4001d1d4


/* mf_rssi_dbm_run register */
/*----------------------*/
/* Matched Filter RSSI readable when data phase still ongoing. (Snapshot register) */
/* mf_rssi_dbm : Snapshot value */
#define EXTAPB_REGFILE_RX_DP_MF_RSSI_DBM_RUN_MF_RSSI_DBM_MASK 0x03ff
#define EXTAPB_REGFILE_RX_DP_MF_RSSI_DBM_RUN_MF_RSSI_DBM_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int mf_rssi_dbm : 10;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_mf_rssi_dbm_run;
#define EXTAPB_REGFILE_RX_DP_MF_RSSI_DBM_RUN_RST 0x0
#define EXTAPB_REGFILE_RX_DP_MF_RSSI_DBM_RUN_DYNAMIC true
#define EXTAPB_REGFILE_RX_DP_MF_RSSI_DBM_RUN_SNAPCLOCK 1
#define EXTAPB_REGFILE_RX_DP_MF_RSSI_DBM_RUN_ADDR  0x4001d1d8


/* mf_rssi_dbm_packet register */
/*----------------------*/
/* Matched Filter RSSI latched at the packet EOP */
/* mf_rssi_dbm : Latched value */
#define EXTAPB_REGFILE_RX_DP_MF_RSSI_DBM_PACKET_MF_RSSI_DBM_MASK 0x03ff
#define EXTAPB_REGFILE_RX_DP_MF_RSSI_DBM_PACKET_MF_RSSI_DBM_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int mf_rssi_dbm : 10;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_mf_rssi_dbm_packet;
#define EXTAPB_REGFILE_RX_DP_MF_RSSI_DBM_PACKET_RST 0x0
#define EXTAPB_REGFILE_RX_DP_MF_RSSI_DBM_PACKET_DYNAMIC true
#define EXTAPB_REGFILE_RX_DP_MF_RSSI_DBM_PACKET_SNAPCLOCK 1
#define EXTAPB_REGFILE_RX_DP_MF_RSSI_DBM_PACKET_ADDR  0x4001d1dc


/* dc_offset_i_packet register */
/*----------------------*/
/* DC offset compensation LP filter output at end of the packet. (I chain) */
/* dc_offset_i : See register description. */
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_I_PACKET_DC_OFFSET_I_MASK 0x0fff
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_I_PACKET_DC_OFFSET_I_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int dc_offset_i : 12;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_dc_offset_i_packet;
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_I_PACKET_RST 0x0
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_I_PACKET_DYNAMIC true
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_I_PACKET_SNAPCLOCK 1
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_I_PACKET_ADDR  0x4001d1e0


/* dc_offset_q_packet register */
/*----------------------*/
/* DC offset compensation LP filter output at end of the packet. (Q chain). */
/* dc_offset_q : See register description. */
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_Q_PACKET_DC_OFFSET_Q_MASK 0x0fff
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_Q_PACKET_DC_OFFSET_Q_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int dc_offset_q : 12;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_dc_offset_q_packet;
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_Q_PACKET_RST 0x0
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_Q_PACKET_DYNAMIC true
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_Q_PACKET_SNAPCLOCK 1
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_Q_PACKET_ADDR  0x4001d1e4


/* agc_bypass_nb_rssi register */
/*----------------------*/
/* The measured nb rssi value (= input of the AGC) can optionally be bypassed by a register value */
/* enable : Enable bit to bypass the measured nb rssi value (= input of the AGC) by a register value */
/* value : Register value used when the measured nb rssi value (= input of the AGC) is bypassed */
#define EXTAPB_REGFILE_RX_DP_AGC_BYPASS_NB_RSSI_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_RX_DP_AGC_BYPASS_NB_RSSI_ENABLE_POS  0
#define EXTAPB_REGFILE_RX_DP_AGC_BYPASS_NB_RSSI_VALUE_MASK 0x07fe
#define EXTAPB_REGFILE_RX_DP_AGC_BYPASS_NB_RSSI_VALUE_POS  1
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int enable : 1;
    unsigned int value : 10;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_agc_bypass_nb_rssi;
#define EXTAPB_REGFILE_RX_DP_AGC_BYPASS_NB_RSSI_RST 0x0
#define EXTAPB_REGFILE_RX_DP_AGC_BYPASS_NB_RSSI_ADDR  0x4001d1e8


/* agc_out_run register */
/*----------------------*/
/* AGC outputs readable when sync phase is still ongoing. (Snapshot register) */
/* ifamp_gain_set : IFAMP gain settings in operation. Snapshot value */
/* aaf_gain_set : AAF gain settings in operation. Snapshot value */
/* gain_lna : LNA gain settings in operation. Snapshot value */
#define EXTAPB_REGFILE_RX_DP_AGC_OUT_RUN_IFAMP_GAIN_SET_MASK 0x0003
#define EXTAPB_REGFILE_RX_DP_AGC_OUT_RUN_IFAMP_GAIN_SET_POS  0
#define EXTAPB_REGFILE_RX_DP_AGC_OUT_RUN_AAF_GAIN_SET_MASK 0x001c
#define EXTAPB_REGFILE_RX_DP_AGC_OUT_RUN_AAF_GAIN_SET_POS  2
#define EXTAPB_REGFILE_RX_DP_AGC_OUT_RUN_GAIN_LNA_MASK 0x00e0
#define EXTAPB_REGFILE_RX_DP_AGC_OUT_RUN_GAIN_LNA_POS  5
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int ifamp_gain_set : 2;
    unsigned int aaf_gain_set : 3;
    unsigned int gain_lna : 3;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_agc_out_run;
#define EXTAPB_REGFILE_RX_DP_AGC_OUT_RUN_RST 0x0
#define EXTAPB_REGFILE_RX_DP_AGC_OUT_RUN_DYNAMIC true
#define EXTAPB_REGFILE_RX_DP_AGC_OUT_RUN_SNAPCLOCK 1
#define EXTAPB_REGFILE_RX_DP_AGC_OUT_RUN_ADDR  0x4001d1ec


/* agc_out_sync register */
/*----------------------*/
/* AGC outputs latched at end of sync phase */
/* ifamp_gain_set : IFAMP gain settings at end of AGC operation. Latched value */
/* aaf_gain_set : AAF gain settings at end of AGC operation. Latched value */
/* gain_lna : LNA gain settins at end of AGC operation. Latched value */
#define EXTAPB_REGFILE_RX_DP_AGC_OUT_SYNC_IFAMP_GAIN_SET_MASK 0x0003
#define EXTAPB_REGFILE_RX_DP_AGC_OUT_SYNC_IFAMP_GAIN_SET_POS  0
#define EXTAPB_REGFILE_RX_DP_AGC_OUT_SYNC_AAF_GAIN_SET_MASK 0x001c
#define EXTAPB_REGFILE_RX_DP_AGC_OUT_SYNC_AAF_GAIN_SET_POS  2
#define EXTAPB_REGFILE_RX_DP_AGC_OUT_SYNC_GAIN_LNA_MASK 0x00e0
#define EXTAPB_REGFILE_RX_DP_AGC_OUT_SYNC_GAIN_LNA_POS  5
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int ifamp_gain_set : 2;
    unsigned int aaf_gain_set : 3;
    unsigned int gain_lna : 3;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_agc_out_sync;
#define EXTAPB_REGFILE_RX_DP_AGC_OUT_SYNC_RST 0x0
#define EXTAPB_REGFILE_RX_DP_AGC_OUT_SYNC_DYNAMIC true
#define EXTAPB_REGFILE_RX_DP_AGC_OUT_SYNC_SNAPCLOCK 1
#define EXTAPB_REGFILE_RX_DP_AGC_OUT_SYNC_ADDR  0x4001d1f0


/* dc_offset_delay register */
/*----------------------*/
/* Delay (16 MHz cycles) between gain update from AGC and reset of DC offset compensation filter (Stored in configuration bank) */
/* dc_offset_delay : Delay between gain update from AGC and reset of DC offset compensation filter */
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_DELAY_DC_OFFSET_DELAY_MASK 0x003f
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_DELAY_DC_OFFSET_DELAY_POS  0
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#else
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_DELAY_DC_OFFSET_DELAY_ZB_2 0
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_DELAY_DC_OFFSET_DELAY_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_DELAY_DC_OFFSET_DELAY_BLE_1 0
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_DELAY_DC_OFFSET_DELAY_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_DELAY_DC_OFFSET_DELAY_BLE_2 0
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_DELAY_DC_OFFSET_DELAY_BLE_2_MASK 0x0
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int dc_offset_delay : 6;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_dc_offset_delay;
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_DELAY_RST 0x0
#define EXTAPB_REGFILE_RX_DP_DC_OFFSET_DELAY_ADDR  0x4001d1f4


/* wakeup_timeout register */
/*----------------------*/
/* Wakeup timeout (Stored in configuration bank) */
/* wakeup_timeout : Wakeup timeout */
#define EXTAPB_REGFILE_RX_DP_WAKEUP_TIMEOUT_WAKEUP_TIMEOUT_MASK 0x03ff
#define EXTAPB_REGFILE_RX_DP_WAKEUP_TIMEOUT_WAKEUP_TIMEOUT_POS  0
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#else
#define EXTAPB_REGFILE_RX_DP_WAKEUP_TIMEOUT_WAKEUP_TIMEOUT_ZB_2 160
#define EXTAPB_REGFILE_RX_DP_WAKEUP_TIMEOUT_WAKEUP_TIMEOUT_ZB_2_MASK 0xa0
#define EXTAPB_REGFILE_RX_DP_WAKEUP_TIMEOUT_WAKEUP_TIMEOUT_BLE_1 160
#define EXTAPB_REGFILE_RX_DP_WAKEUP_TIMEOUT_WAKEUP_TIMEOUT_BLE_1_MASK 0xa0
#define EXTAPB_REGFILE_RX_DP_WAKEUP_TIMEOUT_WAKEUP_TIMEOUT_BLE_2 160
#define EXTAPB_REGFILE_RX_DP_WAKEUP_TIMEOUT_WAKEUP_TIMEOUT_BLE_2_MASK 0xa0
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int wakeup_timeout : 10;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_wakeup_timeout;
#define EXTAPB_REGFILE_RX_DP_WAKEUP_TIMEOUT_RST 0xa0
#define EXTAPB_REGFILE_RX_DP_WAKEUP_TIMEOUT_ADDR  0x4001d1f8


/* nb_rssi_init_timeout register */
/*----------------------*/
/* NB RSSI timeout at start of packet (Stored in configuration bank) */
/* nb_rssi_init_timeout : NB RSSI timeout at start of packet */
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_INIT_TIMEOUT_NB_RSSI_INIT_TIMEOUT_MASK 0x03ff
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_INIT_TIMEOUT_NB_RSSI_INIT_TIMEOUT_POS  0
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#else
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_INIT_TIMEOUT_NB_RSSI_INIT_TIMEOUT_ZB_2 160
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_INIT_TIMEOUT_NB_RSSI_INIT_TIMEOUT_ZB_2_MASK 0xa0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_INIT_TIMEOUT_NB_RSSI_INIT_TIMEOUT_BLE_1 160
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_INIT_TIMEOUT_NB_RSSI_INIT_TIMEOUT_BLE_1_MASK 0xa0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_INIT_TIMEOUT_NB_RSSI_INIT_TIMEOUT_BLE_2 160
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_INIT_TIMEOUT_NB_RSSI_INIT_TIMEOUT_BLE_2_MASK 0xa0
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nb_rssi_init_timeout : 10;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_nb_rssi_init_timeout;
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_INIT_TIMEOUT_RST 0xa0
#define EXTAPB_REGFILE_RX_DP_NB_RSSI_INIT_TIMEOUT_ADDR  0x4001d1fc


/* if_freq_norm register */
/*----------------------*/
/* Normalized IF frequency used in the frequency offset compensator - signed (3.5) (Stored in configuration bank) */
/* if_freq_norm : Normalized IF frequency used in the frequency offset compensator - signed (3.5) */
/* if_freq_norm_extended : Extension IF frequency to create signed (3.13) */
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#define EXTAPB_REGFILE_RX_DP_IF_FREQ_NORM_IF_FREQ_NORM_MASK 0x00ff
#define EXTAPB_REGFILE_RX_DP_IF_FREQ_NORM_IF_FREQ_NORM_POS  0
#define EXTAPB_REGFILE_RX_DP_IF_FREQ_NORM_IF_FREQ_NORM_BT_LE_1 32
#define EXTAPB_REGFILE_RX_DP_IF_FREQ_NORM_IF_FREQ_NORM_BT_LE_1_MASK 0x20
#define EXTAPB_REGFILE_RX_DP_IF_FREQ_NORM_IF_FREQ_NORM_BT_LE_2 24
#define EXTAPB_REGFILE_RX_DP_IF_FREQ_NORM_IF_FREQ_NORM_BT_LE_2_MASK 0x18
#define EXTAPB_REGFILE_RX_DP_IF_FREQ_NORM_IF_FREQ_NORM_NORDIC_250 16
#define EXTAPB_REGFILE_RX_DP_IF_FREQ_NORM_IF_FREQ_NORM_NORDIC_250_MASK 0x10
#define EXTAPB_REGFILE_RX_DP_IF_FREQ_NORM_IF_FREQ_NORM_NORDIC_2 24
#define EXTAPB_REGFILE_RX_DP_IF_FREQ_NORM_IF_FREQ_NORM_NORDIC_2_MASK 0x18
#else
#define EXTAPB_REGFILE_RX_DP_IF_FREQ_NORM_IF_FREQ_NORM_MASK 0x00ff
#define EXTAPB_REGFILE_RX_DP_IF_FREQ_NORM_IF_FREQ_NORM_POS  0
#define EXTAPB_REGFILE_RX_DP_IF_FREQ_NORM_IF_FREQ_NORM_ZB_2 240
#define EXTAPB_REGFILE_RX_DP_IF_FREQ_NORM_IF_FREQ_NORM_ZB_2_MASK 0xf0
#define EXTAPB_REGFILE_RX_DP_IF_FREQ_NORM_IF_FREQ_NORM_BLE_1 240
#define EXTAPB_REGFILE_RX_DP_IF_FREQ_NORM_IF_FREQ_NORM_BLE_1_MASK 0xf0
#define EXTAPB_REGFILE_RX_DP_IF_FREQ_NORM_IF_FREQ_NORM_BLE_2 240
#define EXTAPB_REGFILE_RX_DP_IF_FREQ_NORM_IF_FREQ_NORM_BLE_2_MASK 0xf0
#define EXTAPB_REGFILE_RX_DP_IF_FREQ_NORM_IF_FREQ_NORM_EXTENDED_MASK 0xff00
#define EXTAPB_REGFILE_RX_DP_IF_FREQ_NORM_IF_FREQ_NORM_EXTENDED_POS  8
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int if_freq_norm : 8;
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
    /* ES1 if explicitly configured */
#else
    /* ES2 default */
    unsigned int if_freq_norm_extended : 8;
#endif
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_if_freq_norm;
#define EXTAPB_REGFILE_RX_DP_IF_FREQ_NORM_RST 0xf0
#define EXTAPB_REGFILE_RX_DP_IF_FREQ_NORM_ADDR  0x4001d200


/* correlator_start_link register */
/*----------------------*/
/* Number of symbols at the beginning of a packet for which the correlator does not calculate the result (Stored in configuration bank) */
/* correlator_start_link : Number of symbols at the beginning of a packet for which the correlator does not calculate the result */
#define EXTAPB_REGFILE_RX_DP_CORRELATOR_START_LINK_CORRELATOR_START_LINK_MASK 0xffff
#define EXTAPB_REGFILE_RX_DP_CORRELATOR_START_LINK_CORRELATOR_START_LINK_POS  0
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#else
#define EXTAPB_REGFILE_RX_DP_CORRELATOR_START_LINK_CORRELATOR_START_LINK_ZB_2 35
#define EXTAPB_REGFILE_RX_DP_CORRELATOR_START_LINK_CORRELATOR_START_LINK_ZB_2_MASK 0x23
#define EXTAPB_REGFILE_RX_DP_CORRELATOR_START_LINK_CORRELATOR_START_LINK_BLE_1 35
#define EXTAPB_REGFILE_RX_DP_CORRELATOR_START_LINK_CORRELATOR_START_LINK_BLE_1_MASK 0x23
#define EXTAPB_REGFILE_RX_DP_CORRELATOR_START_LINK_CORRELATOR_START_LINK_BLE_2 35
#define EXTAPB_REGFILE_RX_DP_CORRELATOR_START_LINK_CORRELATOR_START_LINK_BLE_2_MASK 0x23
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int correlator_start_link : 16;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_correlator_start_link;
#define EXTAPB_REGFILE_RX_DP_CORRELATOR_START_LINK_RST 0x23
#define EXTAPB_REGFILE_RX_DP_CORRELATOR_START_LINK_ADDR  0x4001d204


/* correlator_start_scan register */
/*----------------------*/
/* Number of symbols at the beginning of a packet for which the correlator does not calculate the result (Stored in configuration bank) */
/* correlator_start_scan : Number of symbols at the beginning of a packet for which the correlator does not calculate the result */
#define EXTAPB_REGFILE_RX_DP_CORRELATOR_START_SCAN_CORRELATOR_START_SCAN_MASK 0xffff
#define EXTAPB_REGFILE_RX_DP_CORRELATOR_START_SCAN_CORRELATOR_START_SCAN_POS  0
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#else
#define EXTAPB_REGFILE_RX_DP_CORRELATOR_START_SCAN_CORRELATOR_START_SCAN_ZB_2 0
#define EXTAPB_REGFILE_RX_DP_CORRELATOR_START_SCAN_CORRELATOR_START_SCAN_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_CORRELATOR_START_SCAN_CORRELATOR_START_SCAN_BLE_1 0
#define EXTAPB_REGFILE_RX_DP_CORRELATOR_START_SCAN_CORRELATOR_START_SCAN_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_CORRELATOR_START_SCAN_CORRELATOR_START_SCAN_BLE_2 0
#define EXTAPB_REGFILE_RX_DP_CORRELATOR_START_SCAN_CORRELATOR_START_SCAN_BLE_2_MASK 0x0
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int correlator_start_scan : 16;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_correlator_start_scan;
#define EXTAPB_REGFILE_RX_DP_CORRELATOR_START_SCAN_RST 0x0
#define EXTAPB_REGFILE_RX_DP_CORRELATOR_START_SCAN_ADDR  0x4001d208


/* rssi_lna_gain_lut0 register */
/*----------------------*/
/* lna gain lookup table part 0; entry is narrowband RSSI (Stored in configuration bank) */
/* rssi_lna_gain_lut0 : m98 dBm */
/* rssi_lna_gain_lut1 : m95 dBm */
/* rssi_lna_gain_lut2 : m92 dBm */
/* rssi_lna_gain_lut3 : m89 dBm */
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT0_RSSI_LNA_GAIN_LUT0_MASK 0x0007
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT0_RSSI_LNA_GAIN_LUT0_POS  0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT0_RSSI_LNA_GAIN_LUT1_MASK 0x0038
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT0_RSSI_LNA_GAIN_LUT1_POS  3
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT0_RSSI_LNA_GAIN_LUT2_MASK 0x01c0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT0_RSSI_LNA_GAIN_LUT2_POS  6
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT0_RSSI_LNA_GAIN_LUT3_MASK 0x0e00
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT0_RSSI_LNA_GAIN_LUT3_POS  9
#else
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT0_RSSI_LNA_GAIN_LUT0_MASK 0x0007
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT0_RSSI_LNA_GAIN_LUT0_POS  0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT0_RSSI_LNA_GAIN_LUT0_ZB_2 4
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT0_RSSI_LNA_GAIN_LUT0_ZB_2_MASK 0x4
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT0_RSSI_LNA_GAIN_LUT0_BLE_1 4
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT0_RSSI_LNA_GAIN_LUT0_BLE_1_MASK 0x4
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT0_RSSI_LNA_GAIN_LUT0_BLE_2 4
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT0_RSSI_LNA_GAIN_LUT0_BLE_2_MASK 0x4
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT0_RSSI_LNA_GAIN_LUT1_MASK 0x0038
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT0_RSSI_LNA_GAIN_LUT1_POS  3
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT0_RSSI_LNA_GAIN_LUT1_ZB_2 4
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT0_RSSI_LNA_GAIN_LUT1_ZB_2_MASK 0x20
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT0_RSSI_LNA_GAIN_LUT1_BLE_1 4
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT0_RSSI_LNA_GAIN_LUT1_BLE_1_MASK 0x20
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT0_RSSI_LNA_GAIN_LUT1_BLE_2 4
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT0_RSSI_LNA_GAIN_LUT1_BLE_2_MASK 0x20
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT0_RSSI_LNA_GAIN_LUT2_MASK 0x01c0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT0_RSSI_LNA_GAIN_LUT2_POS  6
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT0_RSSI_LNA_GAIN_LUT2_ZB_2 4
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT0_RSSI_LNA_GAIN_LUT2_ZB_2_MASK 0x100
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT0_RSSI_LNA_GAIN_LUT2_BLE_1 4
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT0_RSSI_LNA_GAIN_LUT2_BLE_1_MASK 0x100
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT0_RSSI_LNA_GAIN_LUT2_BLE_2 4
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT0_RSSI_LNA_GAIN_LUT2_BLE_2_MASK 0x100
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT0_RSSI_LNA_GAIN_LUT3_MASK 0x0e00
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT0_RSSI_LNA_GAIN_LUT3_POS  9
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT0_RSSI_LNA_GAIN_LUT3_ZB_2 4
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT0_RSSI_LNA_GAIN_LUT3_ZB_2_MASK 0x800
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT0_RSSI_LNA_GAIN_LUT3_BLE_1 4
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT0_RSSI_LNA_GAIN_LUT3_BLE_1_MASK 0x800
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT0_RSSI_LNA_GAIN_LUT3_BLE_2 4
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT0_RSSI_LNA_GAIN_LUT3_BLE_2_MASK 0x800
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rssi_lna_gain_lut0 : 3;
    unsigned int rssi_lna_gain_lut1 : 3;
    unsigned int rssi_lna_gain_lut2 : 3;
    unsigned int rssi_lna_gain_lut3 : 3;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_rssi_lna_gain_lut0;
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT0_RST 0x924
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT0_ADDR  0x4001d210


/* clip_det_1_timeout register */
/*----------------------*/
/* Timeout following a clipping detection during which clipping events are ignored and further gain reduction of the LNA is blocked. (Stored in configuration bank) */
/* clip_det_1_timeout : Timeout following a clipping detection during which clipping events are ignored and further gain reduction of the LNA is blocked */
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_1_TIMEOUT_CLIP_DET_1_TIMEOUT_MASK 0x003f
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_1_TIMEOUT_CLIP_DET_1_TIMEOUT_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int clip_det_1_timeout : 6;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_clip_det_1_timeout;
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_1_TIMEOUT_RST 0x0
#define EXTAPB_REGFILE_RX_DP_CLIP_DET_1_TIMEOUT_ADDR  0x4001d220


/* agc_ctrl1 register */
/*----------------------*/
/* AGC control 1 */
/* compifaaf_det2 : When Ifamp gain is too low to decrease with det2, then increase AAF gain instead */
/* compifaaf_det3 : When AAF gain is too low to decrease with det3, then decrease Ifamp gain instead */
/* thres_rfp : threshold on gains to select middle or msb after rfp */
/* scale_rfp : enable autorescale output data from rfp for BLE */
/* offset_max_adc : offset from max adc to detect the cliping det 3 */
/* restrict_lut : restrict lut table management when set to 1, else gains only driven with clippng detectors */
/* enable_lut : enable lut table management when set to 1, else gains only driven with clippng detectors */
/* en_clip_rst_on_gfreeze : enable the possibility to reset cliping hs and ls when agc_freeze during 1 clock 16 Mhz */
/* en_clip_rst_on_timeout : enable the possibility to reset cliping hs and ls during timeout_clip1 or 2 instead of waiting rising_edge cliping detection */
#define EXTAPB_REGFILE_RX_DP_AGC_CTRL1_COMPIFAAF_DET2_MASK 0x0001
#define EXTAPB_REGFILE_RX_DP_AGC_CTRL1_COMPIFAAF_DET2_POS  0
#define EXTAPB_REGFILE_RX_DP_AGC_CTRL1_COMPIFAAF_DET3_MASK 0x0002
#define EXTAPB_REGFILE_RX_DP_AGC_CTRL1_COMPIFAAF_DET3_POS  1
#define EXTAPB_REGFILE_RX_DP_AGC_CTRL1_THRES_RFP_MASK 0x003c
#define EXTAPB_REGFILE_RX_DP_AGC_CTRL1_THRES_RFP_POS  2
#define EXTAPB_REGFILE_RX_DP_AGC_CTRL1_SCALE_RFP_MASK 0x0040
#define EXTAPB_REGFILE_RX_DP_AGC_CTRL1_SCALE_RFP_POS  6
#define EXTAPB_REGFILE_RX_DP_AGC_CTRL1_OFFSET_MAX_ADC_MASK 0x0780
#define EXTAPB_REGFILE_RX_DP_AGC_CTRL1_OFFSET_MAX_ADC_POS  7
#define EXTAPB_REGFILE_RX_DP_AGC_CTRL1_RESTRICT_LUT_MASK 0x1800
#define EXTAPB_REGFILE_RX_DP_AGC_CTRL1_RESTRICT_LUT_POS  11
#define EXTAPB_REGFILE_RX_DP_AGC_CTRL1_ENABLE_LUT_MASK 0x2000
#define EXTAPB_REGFILE_RX_DP_AGC_CTRL1_ENABLE_LUT_POS  13
#define EXTAPB_REGFILE_RX_DP_AGC_CTRL1_EN_CLIP_RST_ON_GFREEZE_MASK 0x4000
#define EXTAPB_REGFILE_RX_DP_AGC_CTRL1_EN_CLIP_RST_ON_GFREEZE_POS  14
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#else
#define EXTAPB_REGFILE_RX_DP_AGC_CTRL1_EN_CLIP_RST_ON_TIMEOUT_MASK 0x8000
#define EXTAPB_REGFILE_RX_DP_AGC_CTRL1_EN_CLIP_RST_ON_TIMEOUT_POS  15
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int compifaaf_det2 : 1;
    unsigned int compifaaf_det3 : 1;
    unsigned int thres_rfp : 4;
    unsigned int scale_rfp : 1;
    unsigned int offset_max_adc : 4;
    unsigned int restrict_lut : 2;
    unsigned int enable_lut : 1;
    unsigned int en_clip_rst_on_gfreeze : 1;
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#else
    unsigned int en_clip_rst_on_timeout : 1;
#endif
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_agc_ctrl1;
#define EXTAPB_REGFILE_RX_DP_AGC_CTRL1_RST 0x2028
#define EXTAPB_REGFILE_RX_DP_AGC_CTRL1_ADDR  0x4001d224


/* agc_ctrl2 register */
/*----------------------*/
/* AGC control 2 */
/* cliphs_end : When Ifamp gain is too low to decrease with det2, then increase AAF gain instead */
/* clipls_end : When Ifamp gain is too low to decrease with det2, then increase AAF gain instead */
/* reinit_on_clip : During clipping sequence lna,if,aaf, if a previous clip occur, then reset all gain to max */
/* window_mode_clip3 : When set to '2' change aaf gain based on window new method (all gains in one step), when set to '1' change aaf change aaf gain based on window method, else change step by step on each ADC saturationgain based on window method */
/* extend_nbrssi : enable possibility to recompute rssi when agc just freeze and apply lut */
/* clipone_nbrssi : enable possibility to compute rssi only once after clipping */
/* extend_time1up : enable possibility to activate timer1_up to allow max gains when gains changes , not only clip hs */
/* en_aaf_always_lsclip : enable the possibility to modify ifamp gains even if hs_clip always happens and lna_gain=0 */
/* en_if_always_hsclip : enable the possibility to modify aaf gains even if ls_clip always happens and if_gain=0 */
#define EXTAPB_REGFILE_RX_DP_AGC_CTRL2_CLIPHS_END_MASK 0x000f
#define EXTAPB_REGFILE_RX_DP_AGC_CTRL2_CLIPHS_END_POS  0
#define EXTAPB_REGFILE_RX_DP_AGC_CTRL2_CLIPLS_END_MASK 0x00f0
#define EXTAPB_REGFILE_RX_DP_AGC_CTRL2_CLIPLS_END_POS  4
#define EXTAPB_REGFILE_RX_DP_AGC_CTRL2_REINIT_ON_CLIP_MASK 0x0100
#define EXTAPB_REGFILE_RX_DP_AGC_CTRL2_REINIT_ON_CLIP_POS  8
#define EXTAPB_REGFILE_RX_DP_AGC_CTRL2_WINDOW_MODE_CLIP3_MASK 0x0600
#define EXTAPB_REGFILE_RX_DP_AGC_CTRL2_WINDOW_MODE_CLIP3_POS  9
#define EXTAPB_REGFILE_RX_DP_AGC_CTRL2_EXTEND_NBRSSI_MASK 0x0800
#define EXTAPB_REGFILE_RX_DP_AGC_CTRL2_EXTEND_NBRSSI_POS  11
#define EXTAPB_REGFILE_RX_DP_AGC_CTRL2_CLIPONE_NBRSSI_MASK 0x1000
#define EXTAPB_REGFILE_RX_DP_AGC_CTRL2_CLIPONE_NBRSSI_POS  12
#define EXTAPB_REGFILE_RX_DP_AGC_CTRL2_EXTEND_TIME1UP_MASK 0x2000
#define EXTAPB_REGFILE_RX_DP_AGC_CTRL2_EXTEND_TIME1UP_POS  13
#define EXTAPB_REGFILE_RX_DP_AGC_CTRL2_EN_AAF_ALWAYS_LSCLIP_MASK 0x4000
#define EXTAPB_REGFILE_RX_DP_AGC_CTRL2_EN_AAF_ALWAYS_LSCLIP_POS  14
#define EXTAPB_REGFILE_RX_DP_AGC_CTRL2_EN_IF_ALWAYS_HSCLIP_MASK 0x8000
#define EXTAPB_REGFILE_RX_DP_AGC_CTRL2_EN_IF_ALWAYS_HSCLIP_POS  15
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int cliphs_end : 4;
    unsigned int clipls_end : 4;
    unsigned int reinit_on_clip : 1;
    unsigned int window_mode_clip3 : 2;
    unsigned int extend_nbrssi : 1;
    unsigned int clipone_nbrssi : 1;
    unsigned int extend_time1up : 1;
    unsigned int en_aaf_always_lsclip : 1;
    unsigned int en_if_always_hsclip : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_agc_ctrl2;
#define EXTAPB_REGFILE_RX_DP_AGC_CTRL2_RST 0x155
#define EXTAPB_REGFILE_RX_DP_AGC_CTRL2_ADDR  0x4001d228


/* agc_reset register */
/*----------------------*/
/* agc_wificm_reset */
/* reinit_cpt_wificm : wifi stats, reinit gain counters each time reg_nb_measure is reached and gain is still forced */
/* rst_wificm : reset wifi detectors counter gains and gain_lna is released */
#define EXTAPB_REGFILE_RX_DP_AGC_RESET_REINIT_CPT_WIFICM_MASK 0x0001
#define EXTAPB_REGFILE_RX_DP_AGC_RESET_REINIT_CPT_WIFICM_POS  0
#define EXTAPB_REGFILE_RX_DP_AGC_RESET_RST_WIFICM_MASK 0x0002
#define EXTAPB_REGFILE_RX_DP_AGC_RESET_RST_WIFICM_POS  1
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int reinit_cpt_wificm : 1;
    unsigned int rst_wificm : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_agc_reset;
#define EXTAPB_REGFILE_RX_DP_AGC_RESET_RST 0x0
#define EXTAPB_REGFILE_RX_DP_AGC_RESET_ADDR  0x4001d22c


/* agc_wificm_conf register */
/*----------------------*/
/* agc_wificm_conf */
/* keep_prev_gain : keep gain from previous packet in retetion flop for lna, if, aaf */
/* nb_measure : number of measures needed (2**(nb_measure+2)) to computed the optimum gain */
/* mode_agcvalid : in wifi stats, counter is based on agc_valid info, when set to 1 else on timeout_wificm when set to 0 */
/* en_prot_lna : apply gain result from wifi_stats algo to analog lna gain */
/* en_prot_ifamp : apply gain result from wifi_stats algo to analog ifamp gain */
/* en_wificm : enable wifi detector bloc */
/* dis_init_cpt_ret : disable wifi retention flop initialisation */
/* dis_init_ret : disable wifi gain counter retention flop initialisation */
/* dis_gupdate : disable update forced gain during all measures , only applied first measure */
#define EXTAPB_REGFILE_RX_DP_AGC_WIFICM_CONF_KEEP_PREV_GAIN_MASK 0x0001
#define EXTAPB_REGFILE_RX_DP_AGC_WIFICM_CONF_KEEP_PREV_GAIN_POS  0
#define EXTAPB_REGFILE_RX_DP_AGC_WIFICM_CONF_NB_MEASURE_MASK 0x001e
#define EXTAPB_REGFILE_RX_DP_AGC_WIFICM_CONF_NB_MEASURE_POS  1
#define EXTAPB_REGFILE_RX_DP_AGC_WIFICM_CONF_MODE_AGCVALID_MASK 0x0020
#define EXTAPB_REGFILE_RX_DP_AGC_WIFICM_CONF_MODE_AGCVALID_POS  5
#define EXTAPB_REGFILE_RX_DP_AGC_WIFICM_CONF_EN_PROT_LNA_MASK 0x0040
#define EXTAPB_REGFILE_RX_DP_AGC_WIFICM_CONF_EN_PROT_LNA_POS  6
#define EXTAPB_REGFILE_RX_DP_AGC_WIFICM_CONF_EN_PROT_IFAMP_MASK 0x0080
#define EXTAPB_REGFILE_RX_DP_AGC_WIFICM_CONF_EN_PROT_IFAMP_POS  7
#define EXTAPB_REGFILE_RX_DP_AGC_WIFICM_CONF_EN_WIFICM_MASK 0x0100
#define EXTAPB_REGFILE_RX_DP_AGC_WIFICM_CONF_EN_WIFICM_POS  8
#define EXTAPB_REGFILE_RX_DP_AGC_WIFICM_CONF_DIS_INIT_CPT_RET_MASK 0x0200
#define EXTAPB_REGFILE_RX_DP_AGC_WIFICM_CONF_DIS_INIT_CPT_RET_POS  9
#define EXTAPB_REGFILE_RX_DP_AGC_WIFICM_CONF_DIS_INIT_RET_MASK 0x0400
#define EXTAPB_REGFILE_RX_DP_AGC_WIFICM_CONF_DIS_INIT_RET_POS  10
#define EXTAPB_REGFILE_RX_DP_AGC_WIFICM_CONF_DIS_GUPDATE_MASK 0x0800
#define EXTAPB_REGFILE_RX_DP_AGC_WIFICM_CONF_DIS_GUPDATE_POS  11
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int keep_prev_gain : 1;
    unsigned int nb_measure : 4;
    unsigned int mode_agcvalid : 1;
    unsigned int en_prot_lna : 1;
    unsigned int en_prot_ifamp : 1;
    unsigned int en_wificm : 1;
    unsigned int dis_init_cpt_ret : 1;
    unsigned int dis_init_ret : 1;
    unsigned int dis_gupdate : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_agc_wificm_conf;
#define EXTAPB_REGFILE_RX_DP_AGC_WIFICM_CONF_RST 0x22
#define EXTAPB_REGFILE_RX_DP_AGC_WIFICM_CONF_ADDR  0x4001d230


/* agc_wificm_gain register */
/*----------------------*/
/* agc_wificm_gain */
/* set_soft_gain : force lna gain and ifamp gain with soft_glna and soft_gifamp_when set to 1 */
/* soft_glna : reg_soft_glna */
/* soft_gifamp : reg_soft_gifamp */
#define EXTAPB_REGFILE_RX_DP_AGC_WIFICM_GAIN_SET_SOFT_GAIN_MASK 0x0001
#define EXTAPB_REGFILE_RX_DP_AGC_WIFICM_GAIN_SET_SOFT_GAIN_POS  0
#define EXTAPB_REGFILE_RX_DP_AGC_WIFICM_GAIN_SOFT_GLNA_MASK 0x000e
#define EXTAPB_REGFILE_RX_DP_AGC_WIFICM_GAIN_SOFT_GLNA_POS  1
#define EXTAPB_REGFILE_RX_DP_AGC_WIFICM_GAIN_SOFT_GIFAMP_MASK 0x0030
#define EXTAPB_REGFILE_RX_DP_AGC_WIFICM_GAIN_SOFT_GIFAMP_POS  4
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int set_soft_gain : 1;
    unsigned int soft_glna : 3;
    unsigned int soft_gifamp : 2;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_agc_wificm_gain;
#define EXTAPB_REGFILE_RX_DP_AGC_WIFICM_GAIN_RST 0x0
#define EXTAPB_REGFILE_RX_DP_AGC_WIFICM_GAIN_ADDR  0x4001d234


/* agc_wificm_tout register */
/*----------------------*/
/* agc_wificm_tout */
/* timeout_wificm : maximum time in multiple of 62.5 ns to do one measure when reg_mode_agcvalid = 0 */
#define EXTAPB_REGFILE_RX_DP_AGC_WIFICM_TOUT_TIMEOUT_WIFICM_MASK 0xffff
#define EXTAPB_REGFILE_RX_DP_AGC_WIFICM_TOUT_TIMEOUT_WIFICM_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int timeout_wificm : 16;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_agc_wificm_tout;
#define EXTAPB_REGFILE_RX_DP_AGC_WIFICM_TOUT_RST 0x0
#define EXTAPB_REGFILE_RX_DP_AGC_WIFICM_TOUT_ADDR  0x4001d238


/* agc_wificm_fgain register */
/*----------------------*/
/* agc_wificm number of forced gains consecutively applied */
/* nb_forced_gain : maximum time in multiple of 62.5 ns to do one measure when reg_mode_agcvalid = 0 */
#define EXTAPB_REGFILE_RX_DP_AGC_WIFICM_FGAIN_NB_FORCED_GAIN_MASK 0x00ff
#define EXTAPB_REGFILE_RX_DP_AGC_WIFICM_FGAIN_NB_FORCED_GAIN_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nb_forced_gain : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_agc_wificm_fgain;
#define EXTAPB_REGFILE_RX_DP_AGC_WIFICM_FGAIN_RST 0x0
#define EXTAPB_REGFILE_RX_DP_AGC_WIFICM_FGAIN_ADDR  0x4001d23c


/* agc_wificm_th register */
/*----------------------*/
/* agc_wificm_th */
/* thres_glna : threshold value used */
#define EXTAPB_REGFILE_RX_DP_AGC_WIFICM_TH_THRES_GLNA_MASK 0x01ff
#define EXTAPB_REGFILE_RX_DP_AGC_WIFICM_TH_THRES_GLNA_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int thres_glna : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_agc_wificm_th;
#define EXTAPB_REGFILE_RX_DP_AGC_WIFICM_TH_RST 0x0
#define EXTAPB_REGFILE_RX_DP_AGC_WIFICM_TH_ADDR  0x4001d240


/* agc_obs register */
/*----------------------*/
/* agc_obs */
/* clip_hs_ana : HS clip form radio */
/* clip_ls_ana : LS clip from radio */
/* clip_hs_dig : HS clip after resync */
/* clip_ls_dig : LS clip after resync */
#define EXTAPB_REGFILE_RX_DP_AGC_OBS_CLIP_HS_ANA_MASK 0x0001
#define EXTAPB_REGFILE_RX_DP_AGC_OBS_CLIP_HS_ANA_POS  0
#define EXTAPB_REGFILE_RX_DP_AGC_OBS_CLIP_LS_ANA_MASK 0x0002
#define EXTAPB_REGFILE_RX_DP_AGC_OBS_CLIP_LS_ANA_POS  1
#define EXTAPB_REGFILE_RX_DP_AGC_OBS_CLIP_HS_DIG_MASK 0x0004
#define EXTAPB_REGFILE_RX_DP_AGC_OBS_CLIP_HS_DIG_POS  2
#define EXTAPB_REGFILE_RX_DP_AGC_OBS_CLIP_LS_DIG_MASK 0x0008
#define EXTAPB_REGFILE_RX_DP_AGC_OBS_CLIP_LS_DIG_POS  3
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int clip_hs_ana : 1;
    unsigned int clip_ls_ana : 1;
    unsigned int clip_hs_dig : 1;
    unsigned int clip_ls_dig : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_agc_obs;
#define EXTAPB_REGFILE_RX_DP_AGC_OBS_RST 0x0
#define EXTAPB_REGFILE_RX_DP_AGC_OBS_DYNAMIC true
#define EXTAPB_REGFILE_RX_DP_AGC_OBS_SNAPCLOCK 1
#define EXTAPB_REGFILE_RX_DP_AGC_OBS_ADDR  0x4001d244


/* wificm_glna0 register */
/*----------------------*/
/* Result of retention gain_lna = 0 */
/* cpt_glna0 : result of retention gain_lna=0 */
#define EXTAPB_REGFILE_RX_DP_WIFICM_GLNA0_CPT_GLNA0_MASK 0x01ff
#define EXTAPB_REGFILE_RX_DP_WIFICM_GLNA0_CPT_GLNA0_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int cpt_glna0 : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_wificm_glna0;
#define EXTAPB_REGFILE_RX_DP_WIFICM_GLNA0_RST 0x0
#define EXTAPB_REGFILE_RX_DP_WIFICM_GLNA0_DYNAMIC true
#define EXTAPB_REGFILE_RX_DP_WIFICM_GLNA0_SNAPCLOCK 1
#define EXTAPB_REGFILE_RX_DP_WIFICM_GLNA0_ADDR  0x4001d248


/* wificm_glna1 register */
/*----------------------*/
/* Result of retention gain_lna = 1 */
/* cpt_glna1 : result of retention gain_lna=1 */
#define EXTAPB_REGFILE_RX_DP_WIFICM_GLNA1_CPT_GLNA1_MASK 0x01ff
#define EXTAPB_REGFILE_RX_DP_WIFICM_GLNA1_CPT_GLNA1_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int cpt_glna1 : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_wificm_glna1;
#define EXTAPB_REGFILE_RX_DP_WIFICM_GLNA1_RST 0x0
#define EXTAPB_REGFILE_RX_DP_WIFICM_GLNA1_DYNAMIC true
#define EXTAPB_REGFILE_RX_DP_WIFICM_GLNA1_SNAPCLOCK 1
#define EXTAPB_REGFILE_RX_DP_WIFICM_GLNA1_ADDR  0x4001d24c


/* wificm_glna2 register */
/*----------------------*/
/* Result of retention gain_lna = 2 */
/* cpt_glna2 : result of retention gain_lna=2 */
#define EXTAPB_REGFILE_RX_DP_WIFICM_GLNA2_CPT_GLNA2_MASK 0x01ff
#define EXTAPB_REGFILE_RX_DP_WIFICM_GLNA2_CPT_GLNA2_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int cpt_glna2 : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_wificm_glna2;
#define EXTAPB_REGFILE_RX_DP_WIFICM_GLNA2_RST 0x0
#define EXTAPB_REGFILE_RX_DP_WIFICM_GLNA2_DYNAMIC true
#define EXTAPB_REGFILE_RX_DP_WIFICM_GLNA2_SNAPCLOCK 1
#define EXTAPB_REGFILE_RX_DP_WIFICM_GLNA2_ADDR  0x4001d250


/* wificm_glna3 register */
/*----------------------*/
/* Result of retention gain_lna = 3 */
/* cpt_glna3 : result of retention gain_lna=3 */
#define EXTAPB_REGFILE_RX_DP_WIFICM_GLNA3_CPT_GLNA3_MASK 0x01ff
#define EXTAPB_REGFILE_RX_DP_WIFICM_GLNA3_CPT_GLNA3_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int cpt_glna3 : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_wificm_glna3;
#define EXTAPB_REGFILE_RX_DP_WIFICM_GLNA3_RST 0x0
#define EXTAPB_REGFILE_RX_DP_WIFICM_GLNA3_DYNAMIC true
#define EXTAPB_REGFILE_RX_DP_WIFICM_GLNA3_SNAPCLOCK 1
#define EXTAPB_REGFILE_RX_DP_WIFICM_GLNA3_ADDR  0x4001d254


/* wificm_glna4 register */
/*----------------------*/
/* Result of retention gain_lna = 4 */
/* cpt_glna4 : result of retention gain_lna=4 */
#define EXTAPB_REGFILE_RX_DP_WIFICM_GLNA4_CPT_GLNA4_MASK 0x01ff
#define EXTAPB_REGFILE_RX_DP_WIFICM_GLNA4_CPT_GLNA4_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int cpt_glna4 : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_wificm_glna4;
#define EXTAPB_REGFILE_RX_DP_WIFICM_GLNA4_RST 0x0
#define EXTAPB_REGFILE_RX_DP_WIFICM_GLNA4_DYNAMIC true
#define EXTAPB_REGFILE_RX_DP_WIFICM_GLNA4_SNAPCLOCK 1
#define EXTAPB_REGFILE_RX_DP_WIFICM_GLNA4_ADDR  0x4001d258


/* wificm_gifamp register */
/*----------------------*/
/* Result of retention gain_lna */
/* cpt_gifamp : result of retention gain_ifamp */
#define EXTAPB_REGFILE_RX_DP_WIFICM_GIFAMP_CPT_GIFAMP_MASK 0x01ff
#define EXTAPB_REGFILE_RX_DP_WIFICM_GIFAMP_CPT_GIFAMP_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int cpt_gifamp : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_wificm_gifamp;
#define EXTAPB_REGFILE_RX_DP_WIFICM_GIFAMP_RST 0x0
#define EXTAPB_REGFILE_RX_DP_WIFICM_GIFAMP_DYNAMIC true
#define EXTAPB_REGFILE_RX_DP_WIFICM_GIFAMP_SNAPCLOCK 1
#define EXTAPB_REGFILE_RX_DP_WIFICM_GIFAMP_ADDR  0x4001d25c


/* agc_bt_conf register */
/*----------------------*/
/* BT gain offset for AGC */
/* gain_offset : Add offset gain to gain calc in AGC for BT */
/* rssi_mux : mux to select bt rssi filter */
/* rfagc_fsync_det_dis : TBD */
/* rfagc_direction_freeze : TBD */
/* rf_gain_sw : TBD */
/* agc_sat_flag : TBD */
#define EXTAPB_REGFILE_RX_DP_AGC_BT_CONF_GAIN_OFFSET_MASK 0x007f
#define EXTAPB_REGFILE_RX_DP_AGC_BT_CONF_GAIN_OFFSET_POS  0
#define EXTAPB_REGFILE_RX_DP_AGC_BT_CONF_RSSI_MUX_MASK 0x0080
#define EXTAPB_REGFILE_RX_DP_AGC_BT_CONF_RSSI_MUX_POS  7
#define EXTAPB_REGFILE_RX_DP_AGC_BT_CONF_RFAGC_FSYNC_DET_DIS_MASK 0x0100
#define EXTAPB_REGFILE_RX_DP_AGC_BT_CONF_RFAGC_FSYNC_DET_DIS_POS  8
#define EXTAPB_REGFILE_RX_DP_AGC_BT_CONF_RFAGC_DIRECTION_FREEZE_MASK 0x0200
#define EXTAPB_REGFILE_RX_DP_AGC_BT_CONF_RFAGC_DIRECTION_FREEZE_POS  9
#define EXTAPB_REGFILE_RX_DP_AGC_BT_CONF_RF_GAIN_SW_MASK 0x0400
#define EXTAPB_REGFILE_RX_DP_AGC_BT_CONF_RF_GAIN_SW_POS  10
#define EXTAPB_REGFILE_RX_DP_AGC_BT_CONF_AGC_SAT_FLAG_MASK 0x0800
#define EXTAPB_REGFILE_RX_DP_AGC_BT_CONF_AGC_SAT_FLAG_POS  11
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int gain_offset : 7;
    unsigned int rssi_mux : 1;
    unsigned int rfagc_fsync_det_dis : 1;
    unsigned int rfagc_direction_freeze : 1;
    unsigned int rf_gain_sw : 1;
    unsigned int agc_sat_flag : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_agc_bt_conf;
#define EXTAPB_REGFILE_RX_DP_AGC_BT_CONF_RST 0xa14
#define EXTAPB_REGFILE_RX_DP_AGC_BT_CONF_ADDR  0x4001d260


/* rx_pwrup_cnt_th register */
/*----------------------*/
/*  */
/* rx_pwrup_cnt_th1m : Delay to start correlating in BLE 1 Mbps mode */
/* rx_pwrup_cnt_th2m : Delay to start correlating in BLE 2 Mbps mode */
#define EXTAPB_REGFILE_RX_DP_RX_PWRUP_CNT_TH_RX_PWRUP_CNT_TH1M_MASK 0x00ff
#define EXTAPB_REGFILE_RX_DP_RX_PWRUP_CNT_TH_RX_PWRUP_CNT_TH1M_POS  0
#define EXTAPB_REGFILE_RX_DP_RX_PWRUP_CNT_TH_RX_PWRUP_CNT_TH2M_MASK 0xff00
#define EXTAPB_REGFILE_RX_DP_RX_PWRUP_CNT_TH_RX_PWRUP_CNT_TH2M_POS  8
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rx_pwrup_cnt_th1m : 8;
    unsigned int rx_pwrup_cnt_th2m : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_rx_pwrup_cnt_th;
#define EXTAPB_REGFILE_RX_DP_RX_PWRUP_CNT_TH_RST 0x3646
#define EXTAPB_REGFILE_RX_DP_RX_PWRUP_CNT_TH_ADDR  0x4001d264


/* rssi_lna_gain_lut5 register */
/*----------------------*/
/* lna gain lookup table part 5; entry is narrowband RSSI (Stored in configuration bank) */
/* rssi_lna_gain_lut23 : m30 dBm */
/* rssi_lna_gain_lut24 : m27 dBm */
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT5_RSSI_LNA_GAIN_LUT23_MASK 0x0007
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT5_RSSI_LNA_GAIN_LUT23_POS  0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT5_RSSI_LNA_GAIN_LUT24_MASK 0x0038
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT5_RSSI_LNA_GAIN_LUT24_POS  3
#else
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT5_RSSI_LNA_GAIN_LUT23_MASK 0x0007
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT5_RSSI_LNA_GAIN_LUT23_POS  0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT5_RSSI_LNA_GAIN_LUT23_ZB_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT5_RSSI_LNA_GAIN_LUT23_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT5_RSSI_LNA_GAIN_LUT23_BLE_1 0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT5_RSSI_LNA_GAIN_LUT23_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT5_RSSI_LNA_GAIN_LUT23_BLE_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT5_RSSI_LNA_GAIN_LUT23_BLE_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT5_RSSI_LNA_GAIN_LUT24_MASK 0x0038
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT5_RSSI_LNA_GAIN_LUT24_POS  3
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT5_RSSI_LNA_GAIN_LUT24_ZB_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT5_RSSI_LNA_GAIN_LUT24_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT5_RSSI_LNA_GAIN_LUT24_BLE_1 0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT5_RSSI_LNA_GAIN_LUT24_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT5_RSSI_LNA_GAIN_LUT24_BLE_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT5_RSSI_LNA_GAIN_LUT24_BLE_2_MASK 0x0
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rssi_lna_gain_lut23 : 3;
    unsigned int rssi_lna_gain_lut24 : 3;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_rssi_lna_gain_lut5;
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT5_RST 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_LNA_GAIN_LUT5_ADDR  0x4001d268


/* rssi_ifamp_gain_lut3 register */
/*----------------------*/
/* IFAMP gain lookup table part 3; entry is narrowband RSSI (Stored in configuration bank) */
/* rssi_ifamp_gain_lut23 : m30 dBm */
/* rssi_ifamp_gain_lut24 : m27 dBm */
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT3_RSSI_IFAMP_GAIN_LUT23_MASK 0x0003
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT3_RSSI_IFAMP_GAIN_LUT23_POS  0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT3_RSSI_IFAMP_GAIN_LUT24_MASK 0x000c
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT3_RSSI_IFAMP_GAIN_LUT24_POS  2
#else
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT3_RSSI_IFAMP_GAIN_LUT23_MASK 0x0003
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT3_RSSI_IFAMP_GAIN_LUT23_POS  0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT3_RSSI_IFAMP_GAIN_LUT23_ZB_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT3_RSSI_IFAMP_GAIN_LUT23_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT3_RSSI_IFAMP_GAIN_LUT23_BLE_1 0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT3_RSSI_IFAMP_GAIN_LUT23_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT3_RSSI_IFAMP_GAIN_LUT23_BLE_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT3_RSSI_IFAMP_GAIN_LUT23_BLE_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT3_RSSI_IFAMP_GAIN_LUT24_MASK 0x000c
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT3_RSSI_IFAMP_GAIN_LUT24_POS  2
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT3_RSSI_IFAMP_GAIN_LUT24_ZB_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT3_RSSI_IFAMP_GAIN_LUT24_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT3_RSSI_IFAMP_GAIN_LUT24_BLE_1 0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT3_RSSI_IFAMP_GAIN_LUT24_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT3_RSSI_IFAMP_GAIN_LUT24_BLE_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT3_RSSI_IFAMP_GAIN_LUT24_BLE_2_MASK 0x0
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rssi_ifamp_gain_lut23 : 2;
    unsigned int rssi_ifamp_gain_lut24 : 2;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_rssi_ifamp_gain_lut3;
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT3_RST 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_IFAMP_GAIN_LUT3_ADDR  0x4001d26c


/* rssi_aaf_gain_lut5 register */
/*----------------------*/
/* AAF gain lookup table part 5; entry is narrowband RSSI (Stored in configuration bank) */
/* rssi_aaf_gain_lut23 : m30 dBm */
/* rssi_aaf_gain_lut24 : m27 dBm */
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT5_RSSI_AAF_GAIN_LUT23_MASK 0x0007
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT5_RSSI_AAF_GAIN_LUT23_POS  0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT5_RSSI_AAF_GAIN_LUT24_MASK 0x0038
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT5_RSSI_AAF_GAIN_LUT24_POS  3
#else
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT5_RSSI_AAF_GAIN_LUT23_MASK 0x0007
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT5_RSSI_AAF_GAIN_LUT23_POS  0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT5_RSSI_AAF_GAIN_LUT23_ZB_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT5_RSSI_AAF_GAIN_LUT23_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT5_RSSI_AAF_GAIN_LUT23_BLE_1 0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT5_RSSI_AAF_GAIN_LUT23_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT5_RSSI_AAF_GAIN_LUT23_BLE_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT5_RSSI_AAF_GAIN_LUT23_BLE_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT5_RSSI_AAF_GAIN_LUT24_MASK 0x0038
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT5_RSSI_AAF_GAIN_LUT24_POS  3
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT5_RSSI_AAF_GAIN_LUT24_ZB_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT5_RSSI_AAF_GAIN_LUT24_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT5_RSSI_AAF_GAIN_LUT24_BLE_1 0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT5_RSSI_AAF_GAIN_LUT24_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT5_RSSI_AAF_GAIN_LUT24_BLE_2 0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT5_RSSI_AAF_GAIN_LUT24_BLE_2_MASK 0x0
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rssi_aaf_gain_lut23 : 3;
    unsigned int rssi_aaf_gain_lut24 : 3;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rx_dp_rssi_aaf_gain_lut5;
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT5_RST 0x0
#define EXTAPB_REGFILE_RX_DP_RSSI_AAF_GAIN_LUT5_ADDR  0x4001d270


typedef struct{
    t_extapb_regfile_rx_dp_global  global;
    t_extapb_regfile_rx_dp_cfg  cfg;
    t_extapb_regfile_rx_dp_bank_cfg1  bank_cfg1;
    t_extapb_regfile_rx_dp_dc_offset_cfg  dc_offset_cfg;
    t_extapb_regfile_rx_dp_clip_det_1_lev_sel  clip_det_1_lev_sel;
    t_extapb_regfile_rx_dp_clip_det_1_ana_agc_bypass  clip_det_1_ana_agc_bypass;
    t_extapb_regfile_rx_dp_clip_det_1_timeout_up  clip_det_1_timeout_up;
    unsigned int  reserved0[1];
    t_extapb_regfile_rx_dp_lna_setting  lna_setting;
    t_extapb_regfile_rx_dp_lna_gain_setting_ana_agc_bypass  lna_gain_setting_ana_agc_bypass;
    t_extapb_regfile_rx_dp_clip_det_2_lev_sel  clip_det_2_lev_sel;
    t_extapb_regfile_rx_dp_clip_det_2_ana_agc_bypass  clip_det_2_ana_agc_bypass;
    t_extapb_regfile_rx_dp_clip_det_2_bucket_decr  clip_det_2_bucket_decr;
    t_extapb_regfile_rx_dp_clip_det_2_bucket_incr  clip_det_2_bucket_incr;
    t_extapb_regfile_rx_dp_clip_det_2_bucket_threshold  clip_det_2_bucket_threshold;
    t_extapb_regfile_rx_dp_clip_det_2_timeout  clip_det_2_timeout;
    t_extapb_regfile_rx_dp_clip_det_3_window_size  clip_det_3_window_size;
    t_extapb_regfile_rx_dp_clip_det_3_thr_1  clip_det_3_thr_1;
    t_extapb_regfile_rx_dp_clip_det_3_thr_2  clip_det_3_thr_2;
    t_extapb_regfile_rx_dp_clip_det_3_timeout  clip_det_3_timeout;
    t_extapb_regfile_rx_dp_ifamp_gain_setting_ana_agc_bypass  ifamp_gain_setting_ana_agc_bypass;
    t_extapb_regfile_rx_dp_ifamp_fc_set  ifamp_fc_set;
    t_extapb_regfile_rx_dp_ifamp_ibias_set  ifamp_ibias_set;
    t_extapb_regfile_rx_dp_ifamp_bypass_set_ana_agc_bypass  ifamp_bypass_set_ana_agc_bypass;
    t_extapb_regfile_rx_dp_aaf_gain_setting_ana_agc_bypass  aaf_gain_setting_ana_agc_bypass;
    t_extapb_regfile_rx_dp_aaf_fc_set  aaf_fc_set;
    t_extapb_regfile_rx_dp_aaf_q_set  aaf_q_set;
    t_extapb_regfile_rx_dp_aaf_opam1i_set0  aaf_opam1i_set0;
    t_extapb_regfile_rx_dp_aaf_opam1i_set1  aaf_opam1i_set1;
    t_extapb_regfile_rx_dp_aaf_opam1i_set2  aaf_opam1i_set2;
    t_extapb_regfile_rx_dp_aaf_opam1i_set3  aaf_opam1i_set3;
    t_extapb_regfile_rx_dp_aaf_opam1i_set4  aaf_opam1i_set4;
    t_extapb_regfile_rx_dp_aaf_opam1i_set5  aaf_opam1i_set5;
    t_extapb_regfile_rx_dp_aaf_opam1i_set6  aaf_opam1i_set6;
    t_extapb_regfile_rx_dp_aaf_opam2i_set0  aaf_opam2i_set0;
    t_extapb_regfile_rx_dp_aaf_opam2i_set1  aaf_opam2i_set1;
    t_extapb_regfile_rx_dp_aaf_opam2i_set2  aaf_opam2i_set2;
    t_extapb_regfile_rx_dp_aaf_opam2i_set3  aaf_opam2i_set3;
    t_extapb_regfile_rx_dp_aaf_opam2i_set4  aaf_opam2i_set4;
    t_extapb_regfile_rx_dp_aaf_opam2i_set5  aaf_opam2i_set5;
    t_extapb_regfile_rx_dp_aaf_opam2i_set6  aaf_opam2i_set6;
    t_extapb_regfile_rx_dp_aaf_gain_delay  aaf_gain_delay;
    t_extapb_regfile_rx_dp_nb_rssi_correction_db  nb_rssi_correction_db;
    t_extapb_regfile_rx_dp_nb_rssi_hysteresis  nb_rssi_hysteresis;
    t_extapb_regfile_rx_dp_rssi_lna_gain_lut1  rssi_lna_gain_lut1;
    t_extapb_regfile_rx_dp_rssi_lna_gain_lut2  rssi_lna_gain_lut2;
    t_extapb_regfile_rx_dp_rssi_lna_gain_lut3  rssi_lna_gain_lut3;
    t_extapb_regfile_rx_dp_rssi_lna_gain_lut4  rssi_lna_gain_lut4;
    t_extapb_regfile_rx_dp_rssi_ifamp_gain_lut0  rssi_ifamp_gain_lut0;
    t_extapb_regfile_rx_dp_rssi_ifamp_gain_lut1  rssi_ifamp_gain_lut1;
    t_extapb_regfile_rx_dp_rssi_ifamp_gain_lut2  rssi_ifamp_gain_lut2;
    t_extapb_regfile_rx_dp_rssi_aaf_gain_lut0  rssi_aaf_gain_lut0;
    unsigned int  reserved1[8];
    t_extapb_regfile_rx_dp_rssi_aaf_gain_lut1  rssi_aaf_gain_lut1;
    t_extapb_regfile_rx_dp_rssi_aaf_gain_lut2  rssi_aaf_gain_lut2;
    t_extapb_regfile_rx_dp_rssi_aaf_gain_lut3  rssi_aaf_gain_lut3;
    t_extapb_regfile_rx_dp_rssi_aaf_gain_lut4  rssi_aaf_gain_lut4;
    t_extapb_regfile_rx_dp_lna_gain_lut0  lna_gain_lut0;
    t_extapb_regfile_rx_dp_lna_gain_lut1  lna_gain_lut1;
    t_extapb_regfile_rx_dp_lna_gain_lut2  lna_gain_lut2;
    t_extapb_regfile_rx_dp_lna_gain_lut3  lna_gain_lut3;
    t_extapb_regfile_rx_dp_lna_gain_lut4  lna_gain_lut4;
    t_extapb_regfile_rx_dp_ifamp_gain_lut0  ifamp_gain_lut0;
    t_extapb_regfile_rx_dp_ifamp_gain_lut1  ifamp_gain_lut1;
    t_extapb_regfile_rx_dp_ifamp_gain_lut2  ifamp_gain_lut2;
    t_extapb_regfile_rx_dp_aaf_gain_lut0  aaf_gain_lut0;
    t_extapb_regfile_rx_dp_aaf_gain_lut1  aaf_gain_lut1;
    t_extapb_regfile_rx_dp_aaf_gain_lut2  aaf_gain_lut2;
    t_extapb_regfile_rx_dp_aaf_gain_lut3  aaf_gain_lut3;
    t_extapb_regfile_rx_dp_aaf_gain_lut4  aaf_gain_lut4;
    t_extapb_regfile_rx_dp_aaf_gain_lut5  aaf_gain_lut5;
    t_extapb_regfile_rx_dp_aaf_gain_lut6  aaf_gain_lut6;
    t_extapb_regfile_rx_dp_nb_rssi_conv_to_dbm  nb_rssi_conv_to_dbm;
    t_extapb_regfile_rx_dp_wb_rssi_conv_to_dbm  wb_rssi_conv_to_dbm;
    t_extapb_regfile_rx_dp_wb_rssi_ctrl  wb_rssi_ctrl;
    t_extapb_regfile_rx_dp_wb_rssi_wakeup  wb_rssi_wakeup;
    t_extapb_regfile_rx_dp_nb_rssi_wakeup  nb_rssi_wakeup;
    t_extapb_regfile_rx_dp_nb_rssi_ctrl1  nb_rssi_ctrl1;
    t_extapb_regfile_rx_dp_nb_rssi_ctrl2  nb_rssi_ctrl2;
    t_extapb_regfile_rx_dp_nb_rssi_ctrl3  nb_rssi_ctrl3;
    t_extapb_regfile_rx_dp_nb_rssi_payload_ctrl  nb_rssi_payload_ctrl;
    t_extapb_regfile_rx_dp_nb_rssi_modem_ctrl  nb_rssi_modem_ctrl;
    t_extapb_regfile_rx_dp_mute_ctrl1  mute_ctrl1;
    t_extapb_regfile_rx_dp_mute_ctrl2  mute_ctrl2;
    t_extapb_regfile_rx_dp_mute_ctrl3  mute_ctrl3;
    t_extapb_regfile_rx_dp_ana_agc_bypass  ana_agc_bypass;
    t_extapb_regfile_rx_dp_agc_freeze_offset  agc_freeze_offset;
    t_extapb_regfile_rx_dp_wb_rssi_dbm_run  wb_rssi_dbm_run;
    unsigned int  reserved2[1];
    t_extapb_regfile_rx_dp_wb_rssi_dbm_sync  wb_rssi_dbm_sync;
    t_extapb_regfile_rx_dp_wb_rssi_dbm_packet  wb_rssi_dbm_packet;
    t_extapb_regfile_rx_dp_nb_rssi_dbm_run  nb_rssi_dbm_run;
    t_extapb_regfile_rx_dp_nb_rssi_agc_dbm_run  nb_rssi_agc_dbm_run;
    t_extapb_regfile_rx_dp_nb_rssi_dbm_sync  nb_rssi_dbm_sync;
    t_extapb_regfile_rx_dp_nb_rssi_agc_dbm_sync  nb_rssi_agc_dbm_sync;
    t_extapb_regfile_rx_dp_mf_rssi_dbm_run  mf_rssi_dbm_run;
    t_extapb_regfile_rx_dp_mf_rssi_dbm_packet  mf_rssi_dbm_packet;
    t_extapb_regfile_rx_dp_dc_offset_i_packet  dc_offset_i_packet;
    t_extapb_regfile_rx_dp_dc_offset_q_packet  dc_offset_q_packet;
    t_extapb_regfile_rx_dp_agc_bypass_nb_rssi  agc_bypass_nb_rssi;
    t_extapb_regfile_rx_dp_agc_out_run  agc_out_run;
    t_extapb_regfile_rx_dp_agc_out_sync  agc_out_sync;
    t_extapb_regfile_rx_dp_dc_offset_delay  dc_offset_delay;
    t_extapb_regfile_rx_dp_wakeup_timeout  wakeup_timeout;
    t_extapb_regfile_rx_dp_nb_rssi_init_timeout  nb_rssi_init_timeout;
    t_extapb_regfile_rx_dp_if_freq_norm  if_freq_norm;
    t_extapb_regfile_rx_dp_correlator_start_link  correlator_start_link;
    t_extapb_regfile_rx_dp_correlator_start_scan  correlator_start_scan;
    unsigned int  reserved3[1];
    t_extapb_regfile_rx_dp_rssi_lna_gain_lut0  rssi_lna_gain_lut0;
    unsigned int  reserved4[3];
    t_extapb_regfile_rx_dp_clip_det_1_timeout  clip_det_1_timeout;
    t_extapb_regfile_rx_dp_agc_ctrl1  agc_ctrl1;
    t_extapb_regfile_rx_dp_agc_ctrl2  agc_ctrl2;
    t_extapb_regfile_rx_dp_agc_reset  agc_reset;
    t_extapb_regfile_rx_dp_agc_wificm_conf  agc_wificm_conf;
    t_extapb_regfile_rx_dp_agc_wificm_gain  agc_wificm_gain;
    t_extapb_regfile_rx_dp_agc_wificm_tout  agc_wificm_tout;
    t_extapb_regfile_rx_dp_agc_wificm_fgain  agc_wificm_fgain;
    t_extapb_regfile_rx_dp_agc_wificm_th  agc_wificm_th;
    t_extapb_regfile_rx_dp_agc_obs  agc_obs;
    t_extapb_regfile_rx_dp_wificm_glna0  wificm_glna0;
    t_extapb_regfile_rx_dp_wificm_glna1  wificm_glna1;
    t_extapb_regfile_rx_dp_wificm_glna2  wificm_glna2;
    t_extapb_regfile_rx_dp_wificm_glna3  wificm_glna3;
    t_extapb_regfile_rx_dp_wificm_glna4  wificm_glna4;
    t_extapb_regfile_rx_dp_wificm_gifamp  wificm_gifamp;
    t_extapb_regfile_rx_dp_agc_bt_conf  agc_bt_conf;
    t_extapb_regfile_rx_dp_rx_pwrup_cnt_th  rx_pwrup_cnt_th;
    t_extapb_regfile_rx_dp_rssi_lna_gain_lut5  rssi_lna_gain_lut5;
    t_extapb_regfile_rx_dp_rssi_ifamp_gain_lut3  rssi_ifamp_gain_lut3;
    t_extapb_regfile_rx_dp_rssi_aaf_gain_lut5  rssi_aaf_gain_lut5;
} t_extapb_regfile_rx_datapath;
#define EXTAPB_REGFILE_RX_DATAPATH_ADDR 0x4001d040
#define EXTAPB_REGFILE_RX_DATAPATH ((t_extapb_regfile_rx_datapath *)EXTAPB_REGFILE_RX_DATAPATH_ADDR)


/* transceiver module */
/*-------------------------*/


/* clipdet_d2r_if_val register */
/*----------------------*/
/* Clip Detector RF interface : regfile value */
/* rx_clipdet_hs_enable : Clip Detector HS enable */
/* rx_clipdet_ls_enable : Clip Detector LS enable */
/* rx_clipdet_hs_amp_set : Programmable clip amplitude level */
/* rx_clipdet_hs_reset : Reset signal for the SR output latch */
/* rx_clipdet_ls_amp_set : Programmable clip amplitude level */
/* rx_clipdet_ls_reset : Reset signal to the SR output latch */
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_VAL_RX_CLIPDET_HS_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_VAL_RX_CLIPDET_HS_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_VAL_RX_CLIPDET_LS_ENABLE_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_VAL_RX_CLIPDET_LS_ENABLE_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_VAL_RX_CLIPDET_HS_AMP_SET_MASK 0x001c
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_VAL_RX_CLIPDET_HS_AMP_SET_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_VAL_RX_CLIPDET_HS_RESET_MASK 0x0020
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_VAL_RX_CLIPDET_HS_RESET_POS  5
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_VAL_RX_CLIPDET_LS_AMP_SET_MASK 0x01c0
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_VAL_RX_CLIPDET_LS_AMP_SET_POS  6
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_VAL_RX_CLIPDET_LS_RESET_MASK 0x0200
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_VAL_RX_CLIPDET_LS_RESET_POS  9
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rx_clipdet_hs_enable : 1;
    unsigned int rx_clipdet_ls_enable : 1;
    unsigned int rx_clipdet_hs_amp_set : 3;
    unsigned int rx_clipdet_hs_reset : 1;
    unsigned int rx_clipdet_ls_amp_set : 3;
    unsigned int rx_clipdet_ls_reset : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_clipdet_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_VAL_ADDR  0x4001d280


/* clipdet_d2r_if_src_sel register */
/*----------------------*/
/* Clip Detector RF interface : source selection */
/* rx_clipdet_hs_enable : Source selection for rx_clipdet_hs_enable */
/* rx_clipdet_ls_enable : Source selection for rx_clipdet_ls_enable */
/* rx_clipdet_hs_amp_set : Source selection for rx_clipdet_hs_amp_set */
/* rx_clipdet_hs_reset : Source selection for rx_clipdet_hs_reset */
/* rx_clipdet_ls_amp_set : Source selection for rx_clipdet_ls_amp_set */
/* rx_clipdet_ls_reset : Source selection for rx_clipdet_ls_reset */
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_SRC_SEL_RX_CLIPDET_HS_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_SRC_SEL_RX_CLIPDET_HS_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_SRC_SEL_RX_CLIPDET_HS_ENABLE_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_SRC_SEL_RX_CLIPDET_HS_ENABLE_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_SRC_SEL_RX_CLIPDET_HS_ENABLE_AGC 1
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_SRC_SEL_RX_CLIPDET_HS_ENABLE_AGC_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_SRC_SEL_RX_CLIPDET_LS_ENABLE_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_SRC_SEL_RX_CLIPDET_LS_ENABLE_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_SRC_SEL_RX_CLIPDET_LS_ENABLE_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_SRC_SEL_RX_CLIPDET_LS_ENABLE_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_SRC_SEL_RX_CLIPDET_LS_ENABLE_AGC 1
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_SRC_SEL_RX_CLIPDET_LS_ENABLE_AGC_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_SRC_SEL_RX_CLIPDET_HS_AMP_SET_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_SRC_SEL_RX_CLIPDET_HS_AMP_SET_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_SRC_SEL_RX_CLIPDET_HS_AMP_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_SRC_SEL_RX_CLIPDET_HS_AMP_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_SRC_SEL_RX_CLIPDET_HS_AMP_SET_AGC 1
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_SRC_SEL_RX_CLIPDET_HS_AMP_SET_AGC_MASK 0x4
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_SRC_SEL_RX_CLIPDET_HS_RESET_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_SRC_SEL_RX_CLIPDET_HS_RESET_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_SRC_SEL_RX_CLIPDET_HS_RESET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_SRC_SEL_RX_CLIPDET_HS_RESET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_SRC_SEL_RX_CLIPDET_HS_RESET_AGC 1
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_SRC_SEL_RX_CLIPDET_HS_RESET_AGC_MASK 0x8
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_SRC_SEL_RX_CLIPDET_LS_AMP_SET_MASK 0x0010
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_SRC_SEL_RX_CLIPDET_LS_AMP_SET_POS  4
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_SRC_SEL_RX_CLIPDET_LS_AMP_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_SRC_SEL_RX_CLIPDET_LS_AMP_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_SRC_SEL_RX_CLIPDET_LS_AMP_SET_AGC 1
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_SRC_SEL_RX_CLIPDET_LS_AMP_SET_AGC_MASK 0x10
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_SRC_SEL_RX_CLIPDET_LS_RESET_MASK 0x0020
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_SRC_SEL_RX_CLIPDET_LS_RESET_POS  5
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_SRC_SEL_RX_CLIPDET_LS_RESET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_SRC_SEL_RX_CLIPDET_LS_RESET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_SRC_SEL_RX_CLIPDET_LS_RESET_AGC 1
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_SRC_SEL_RX_CLIPDET_LS_RESET_AGC_MASK 0x20
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rx_clipdet_hs_enable : 1;
    unsigned int rx_clipdet_ls_enable : 1;
    unsigned int rx_clipdet_hs_amp_set : 1;
    unsigned int rx_clipdet_hs_reset : 1;
    unsigned int rx_clipdet_ls_amp_set : 1;
    unsigned int rx_clipdet_ls_reset : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_clipdet_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_SRC_SEL_RST 0x3f
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_SRC_SEL_ADDR  0x4001d284


/* clipdet_d2r_if_pol_invert_en register */
/*----------------------*/
/* Clip detector RF interface : polarity invert control */
/* rx_clipdet_hs_enable : Polarity invert control for rx_clipdet_hs_enable */
/* rx_clipdet_ls_enable : Polarity invert control for rx_clipdet_ls_enable */
/* rx_clipdet_hs_reset : Polarity invert control for rx_clipdet_hs_reset */
/* rx_clipdet_ls_reset : Polarity invert control for rx_clipdet_ls_reset */
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_POL_INVERT_EN_RX_CLIPDET_HS_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_POL_INVERT_EN_RX_CLIPDET_HS_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_POL_INVERT_EN_RX_CLIPDET_HS_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_POL_INVERT_EN_RX_CLIPDET_HS_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_POL_INVERT_EN_RX_CLIPDET_HS_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_POL_INVERT_EN_RX_CLIPDET_HS_ENABLE_EN_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_POL_INVERT_EN_RX_CLIPDET_LS_ENABLE_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_POL_INVERT_EN_RX_CLIPDET_LS_ENABLE_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_POL_INVERT_EN_RX_CLIPDET_LS_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_POL_INVERT_EN_RX_CLIPDET_LS_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_POL_INVERT_EN_RX_CLIPDET_LS_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_POL_INVERT_EN_RX_CLIPDET_LS_ENABLE_EN_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_POL_INVERT_EN_RX_CLIPDET_HS_RESET_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_POL_INVERT_EN_RX_CLIPDET_HS_RESET_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_POL_INVERT_EN_RX_CLIPDET_HS_RESET_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_POL_INVERT_EN_RX_CLIPDET_HS_RESET_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_POL_INVERT_EN_RX_CLIPDET_HS_RESET_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_POL_INVERT_EN_RX_CLIPDET_HS_RESET_EN_MASK 0x4
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_POL_INVERT_EN_RX_CLIPDET_LS_RESET_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_POL_INVERT_EN_RX_CLIPDET_LS_RESET_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_POL_INVERT_EN_RX_CLIPDET_LS_RESET_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_POL_INVERT_EN_RX_CLIPDET_LS_RESET_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_POL_INVERT_EN_RX_CLIPDET_LS_RESET_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_POL_INVERT_EN_RX_CLIPDET_LS_RESET_EN_MASK 0x8
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rx_clipdet_hs_enable : 1;
    unsigned int rx_clipdet_ls_enable : 1;
    unsigned int rx_clipdet_hs_reset : 1;
    unsigned int rx_clipdet_ls_reset : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_clipdet_d2r_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_D2R_IF_POL_INVERT_EN_ADDR  0x4001d288


/* clipdet_r2d_if_val register */
/*----------------------*/
/* Clip Detector RF interface : regfile value */
/* rx_clipdet_hs_clip : Clip det HS block output (0.8V) */
/* rx_clipdet_ls_clip : Clip det LS block output (0.8V) */
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_R2D_IF_VAL_RX_CLIPDET_HS_CLIP_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_R2D_IF_VAL_RX_CLIPDET_HS_CLIP_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_R2D_IF_VAL_RX_CLIPDET_LS_CLIP_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_R2D_IF_VAL_RX_CLIPDET_LS_CLIP_POS  1
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rx_clipdet_hs_clip : 1;
    unsigned int rx_clipdet_ls_clip : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_clipdet_r2d_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_R2D_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_R2D_IF_VAL_DYNAMIC true
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_R2D_IF_VAL_SNAPCLOCK 0
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_R2D_IF_VAL_ADDR  0x4001d28c


/* clipdet_r2d_if_pol_invert_en register */
/*----------------------*/
/* Clip Detector RF interface : polarity invert control */
/* rx_clipdet_hs_clip : Polarity invert control for rx_clipdet_hs_clip */
/* rx_clipdet_ls_clip : Polarity invert control for rx_clipdet_ls_clip */
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_R2D_IF_POL_INVERT_EN_RX_CLIPDET_HS_CLIP_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_R2D_IF_POL_INVERT_EN_RX_CLIPDET_HS_CLIP_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_R2D_IF_POL_INVERT_EN_RX_CLIPDET_HS_CLIP_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_R2D_IF_POL_INVERT_EN_RX_CLIPDET_HS_CLIP_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_R2D_IF_POL_INVERT_EN_RX_CLIPDET_HS_CLIP_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_R2D_IF_POL_INVERT_EN_RX_CLIPDET_HS_CLIP_EN_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_R2D_IF_POL_INVERT_EN_RX_CLIPDET_LS_CLIP_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_R2D_IF_POL_INVERT_EN_RX_CLIPDET_LS_CLIP_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_R2D_IF_POL_INVERT_EN_RX_CLIPDET_LS_CLIP_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_R2D_IF_POL_INVERT_EN_RX_CLIPDET_LS_CLIP_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_R2D_IF_POL_INVERT_EN_RX_CLIPDET_LS_CLIP_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_R2D_IF_POL_INVERT_EN_RX_CLIPDET_LS_CLIP_EN_MASK 0x2
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rx_clipdet_hs_clip : 1;
    unsigned int rx_clipdet_ls_clip : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_clipdet_r2d_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_R2D_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_CLIPDET_R2D_IF_POL_INVERT_EN_ADDR  0x4001d290


/* aaf_d2r_if_val register */
/*----------------------*/
/* Rx AAF RF interface : regfile value */
/* rx_aaf_i_enable : Anti-aliasing filter enable (I side) */
/* rx_aaf_q_enable : Anti-aliasing filter enable (Q/DAC filter side) */
/* rx_aaf_gain_set : DC Gain selection */
/* rx_aaf_opamp1i_set : Tail current of 1st stage opamp. Can be incremented in steps of 2uA */
/* rx_aaf_q_set : Q factor selection */
/* rx_aaf_opamp2i_set : Tail current of 2nd stage opamp. Can be incremented in steps of 2 uA. */
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_VAL_RX_AAF_I_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_VAL_RX_AAF_I_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_VAL_RX_AAF_Q_ENABLE_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_VAL_RX_AAF_Q_ENABLE_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_VAL_RX_AAF_GAIN_SET_MASK 0x001c
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_VAL_RX_AAF_GAIN_SET_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_VAL_RX_AAF_OPAMP1I_SET_MASK 0x01e0
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_VAL_RX_AAF_OPAMP1I_SET_POS  5
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_VAL_RX_AAF_Q_SET_MASK 0x0600
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_VAL_RX_AAF_Q_SET_POS  9
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_VAL_RX_AAF_OPAMP2I_SET_MASK 0x7800
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_VAL_RX_AAF_OPAMP2I_SET_POS  11
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rx_aaf_i_enable : 1;
    unsigned int rx_aaf_q_enable : 1;
    unsigned int rx_aaf_gain_set : 3;
    unsigned int rx_aaf_opamp1i_set : 4;
    unsigned int rx_aaf_q_set : 2;
    unsigned int rx_aaf_opamp2i_set : 4;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_aaf_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_VAL_ADDR  0x4001d294


/* aaf_d2r_if_src_sel register */
/*----------------------*/
/* Rx AAF RF Interface : source selection */
/* rx_aaf_i_enable : Source selection for rx_aaf_i_enable */
/* rx_aaf_q_enable : Source selection for rx_aaf_q_enable */
/* rx_aaf_gain_set : Source selectoin for rx_aaf_gain_set */
/* rx_aaf_opamp1i_set : Source selection for rx_aaf_opamp1i_set */
/* rx_aaf_q_set : Source selection for rx_aaf_q_set */
/* rx_aaf_opamp2i_set : Source selection for rx_aaf_opamp2i_set */
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_SRC_SEL_RX_AAF_I_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_SRC_SEL_RX_AAF_I_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_SRC_SEL_RX_AAF_I_ENABLE_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_SRC_SEL_RX_AAF_I_ENABLE_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_SRC_SEL_RX_AAF_I_ENABLE_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_SRC_SEL_RX_AAF_I_ENABLE_TMU_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_SRC_SEL_RX_AAF_Q_ENABLE_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_SRC_SEL_RX_AAF_Q_ENABLE_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_SRC_SEL_RX_AAF_Q_ENABLE_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_SRC_SEL_RX_AAF_Q_ENABLE_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_SRC_SEL_RX_AAF_Q_ENABLE_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_SRC_SEL_RX_AAF_Q_ENABLE_TMU_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_SRC_SEL_RX_AAF_GAIN_SET_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_SRC_SEL_RX_AAF_GAIN_SET_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_SRC_SEL_RX_AAF_GAIN_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_SRC_SEL_RX_AAF_GAIN_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_SRC_SEL_RX_AAF_GAIN_SET_AGC 1
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_SRC_SEL_RX_AAF_GAIN_SET_AGC_MASK 0x4
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_SRC_SEL_RX_AAF_OPAMP1I_SET_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_SRC_SEL_RX_AAF_OPAMP1I_SET_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_SRC_SEL_RX_AAF_OPAMP1I_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_SRC_SEL_RX_AAF_OPAMP1I_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_SRC_SEL_RX_AAF_OPAMP1I_SET_AGC 1
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_SRC_SEL_RX_AAF_OPAMP1I_SET_AGC_MASK 0x8
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_SRC_SEL_RX_AAF_Q_SET_MASK 0x0010
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_SRC_SEL_RX_AAF_Q_SET_POS  4
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_SRC_SEL_RX_AAF_Q_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_SRC_SEL_RX_AAF_Q_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_SRC_SEL_RX_AAF_Q_SET_AGC 1
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_SRC_SEL_RX_AAF_Q_SET_AGC_MASK 0x10
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_SRC_SEL_RX_AAF_OPAMP2I_SET_MASK 0x0020
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_SRC_SEL_RX_AAF_OPAMP2I_SET_POS  5
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_SRC_SEL_RX_AAF_OPAMP2I_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_SRC_SEL_RX_AAF_OPAMP2I_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_SRC_SEL_RX_AAF_OPAMP2I_SET_AGC 1
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_SRC_SEL_RX_AAF_OPAMP2I_SET_AGC_MASK 0x20
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rx_aaf_i_enable : 1;
    unsigned int rx_aaf_q_enable : 1;
    unsigned int rx_aaf_gain_set : 1;
    unsigned int rx_aaf_opamp1i_set : 1;
    unsigned int rx_aaf_q_set : 1;
    unsigned int rx_aaf_opamp2i_set : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_aaf_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_SRC_SEL_RST 0x3f
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_SRC_SEL_ADDR  0x4001d298


/* aaf_d2r_if_pol_invert_en register */
/*----------------------*/
/* Rx AAFF RF Interface : polarity invert control */
/* rx_aaf_i_enable : Polarity invert control for rx_aaf_i_enable */
/* rx_aaf_q_enable : Polarity invert control for rx_aaf_q_enable */
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_POL_INVERT_EN_RX_AAF_I_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_POL_INVERT_EN_RX_AAF_I_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_POL_INVERT_EN_RX_AAF_I_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_POL_INVERT_EN_RX_AAF_I_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_POL_INVERT_EN_RX_AAF_I_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_POL_INVERT_EN_RX_AAF_I_ENABLE_EN_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_POL_INVERT_EN_RX_AAF_Q_ENABLE_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_POL_INVERT_EN_RX_AAF_Q_ENABLE_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_POL_INVERT_EN_RX_AAF_Q_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_POL_INVERT_EN_RX_AAF_Q_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_POL_INVERT_EN_RX_AAF_Q_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_POL_INVERT_EN_RX_AAF_Q_ENABLE_EN_MASK 0x2
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rx_aaf_i_enable : 1;
    unsigned int rx_aaf_q_enable : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_aaf_d2r_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_D2R_IF_POL_INVERT_EN_ADDR  0x4001d29c


/* aaf_1_d2r_if_val register */
/*----------------------*/
/* Rx AAF RF interface : regfile value */
/* rx_aaf_fc_set : Anti-aliasing filter cut-off frequency config */
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_1_D2R_IF_VAL_RX_AAF_FC_SET_MASK 0x0003
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_1_D2R_IF_VAL_RX_AAF_FC_SET_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rx_aaf_fc_set : 2;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_aaf_1_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_1_D2R_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_1_D2R_IF_VAL_ADDR  0x4001d2a0


/* aaf_1_d2r_if_src_sel register */
/*----------------------*/
/* Rx AAF RF Interface : source selection */
/* rx_aaf_fc_set : Soruce selection for rx_aaf_fc_set */
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_1_D2R_IF_SRC_SEL_RX_AAF_FC_SET_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_1_D2R_IF_SRC_SEL_RX_AAF_FC_SET_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_1_D2R_IF_SRC_SEL_RX_AAF_FC_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_1_D2R_IF_SRC_SEL_RX_AAF_FC_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_1_D2R_IF_SRC_SEL_RX_AAF_FC_SET_AGC 1
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_1_D2R_IF_SRC_SEL_RX_AAF_FC_SET_AGC_MASK 0x1
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rx_aaf_fc_set : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_aaf_1_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_1_D2R_IF_SRC_SEL_RST 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_AAF_1_D2R_IF_SRC_SEL_ADDR  0x4001d2a4


/* ifamp_d2r_if_val register */
/*----------------------*/
/* IFamp RF interface : regfile value */
/* ifamp_enable_1v1 : IF amplifier enable */
/* ifamp_ibias_i_1v1_set : Bias current selection */
/* ifamp_gain_i_1v1_set : Ifamp gain */
/* ifamp_fc_i_1v1_set : Ifamp fc set */
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_VAL_IFAMP_ENABLE_1V1_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_VAL_IFAMP_ENABLE_1V1_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_VAL_IFAMP_IBIAS_I_1V1_SET_MASK 0x003e
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_VAL_IFAMP_IBIAS_I_1V1_SET_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_VAL_IFAMP_GAIN_I_1V1_SET_MASK 0x00c0
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_VAL_IFAMP_GAIN_I_1V1_SET_POS  6
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_VAL_IFAMP_FC_I_1V1_SET_MASK 0x0300
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_VAL_IFAMP_FC_I_1V1_SET_POS  8
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int ifamp_enable_1v1 : 1;
    unsigned int ifamp_ibias_i_1v1_set : 5;
    unsigned int ifamp_gain_i_1v1_set : 2;
    unsigned int ifamp_fc_i_1v1_set : 2;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_ifamp_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_VAL_RST 0x1e
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_VAL_ADDR  0x4001d2a8


/* ifamp_d2r_if_src_sel register */
/*----------------------*/
/* IFamp RF interface : source selection */
/* ifamp_enable_1v1 : Source selection for ifamp_enable_1v1 */
/* ifamp_ibias_i_1v1_set : Source selection for ifamp_ibias_i_1v1_set */
/* ifamp_gain_i_1v1_set : Source selection for ifamp_gain_1v1_set */
/* ifamp_fc_i_1v1_set : Source selection for ifamp_fc_i_1v1_set */
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_SRC_SEL_IFAMP_ENABLE_1V1_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_SRC_SEL_IFAMP_ENABLE_1V1_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_SRC_SEL_IFAMP_ENABLE_1V1_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_SRC_SEL_IFAMP_ENABLE_1V1_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_SRC_SEL_IFAMP_ENABLE_1V1_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_SRC_SEL_IFAMP_ENABLE_1V1_TMU_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_SRC_SEL_IFAMP_IBIAS_I_1V1_SET_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_SRC_SEL_IFAMP_IBIAS_I_1V1_SET_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_SRC_SEL_IFAMP_IBIAS_I_1V1_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_SRC_SEL_IFAMP_IBIAS_I_1V1_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_SRC_SEL_IFAMP_IBIAS_I_1V1_SET_AGC 1
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_SRC_SEL_IFAMP_IBIAS_I_1V1_SET_AGC_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_SRC_SEL_IFAMP_GAIN_I_1V1_SET_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_SRC_SEL_IFAMP_GAIN_I_1V1_SET_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_SRC_SEL_IFAMP_GAIN_I_1V1_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_SRC_SEL_IFAMP_GAIN_I_1V1_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_SRC_SEL_IFAMP_GAIN_I_1V1_SET_AGC 1
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_SRC_SEL_IFAMP_GAIN_I_1V1_SET_AGC_MASK 0x4
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_SRC_SEL_IFAMP_FC_I_1V1_SET_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_SRC_SEL_IFAMP_FC_I_1V1_SET_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_SRC_SEL_IFAMP_FC_I_1V1_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_SRC_SEL_IFAMP_FC_I_1V1_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_SRC_SEL_IFAMP_FC_I_1V1_SET_AGC 1
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_SRC_SEL_IFAMP_FC_I_1V1_SET_AGC_MASK 0x8
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int ifamp_enable_1v1 : 1;
    unsigned int ifamp_ibias_i_1v1_set : 1;
    unsigned int ifamp_gain_i_1v1_set : 1;
    unsigned int ifamp_fc_i_1v1_set : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_ifamp_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_SRC_SEL_RST 0xf
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_SRC_SEL_ADDR  0x4001d2ac


/* ifamp_d2r_if_pol_invert_en register */
/*----------------------*/
/* IFamp RF interface : polarity invert control */
/* ifamp_enable_1v1 : Polarity invert control for ifamp_enable_1v1 */
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_POL_INVERT_EN_IFAMP_ENABLE_1V1_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_POL_INVERT_EN_IFAMP_ENABLE_1V1_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_POL_INVERT_EN_IFAMP_ENABLE_1V1_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_POL_INVERT_EN_IFAMP_ENABLE_1V1_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_POL_INVERT_EN_IFAMP_ENABLE_1V1_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_POL_INVERT_EN_IFAMP_ENABLE_1V1_EN_MASK 0x1
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int ifamp_enable_1v1 : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_ifamp_d2r_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_IFAMP_D2R_IF_POL_INVERT_EN_ADDR  0x4001d2b0


/* lna_d2r_if_val register */
/*----------------------*/
/* Rx LNA Interface : regfile value */
/* lna_gain_i_1v1_set : LNA gain */
/* lna_iadj_i_1v1_set : LNA adj */
/* lna_enable_1v1 : TBD */
#define EXTAPB_REGFILE_TRANSCEIVER_LNA_D2R_IF_VAL_LNA_GAIN_I_1V1_SET_MASK 0x0007
#define EXTAPB_REGFILE_TRANSCEIVER_LNA_D2R_IF_VAL_LNA_GAIN_I_1V1_SET_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_LNA_D2R_IF_VAL_LNA_IADJ_I_1V1_SET_MASK 0x0038
#define EXTAPB_REGFILE_TRANSCEIVER_LNA_D2R_IF_VAL_LNA_IADJ_I_1V1_SET_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_LNA_D2R_IF_VAL_LNA_ENABLE_1V1_MASK 0x0040
#define EXTAPB_REGFILE_TRANSCEIVER_LNA_D2R_IF_VAL_LNA_ENABLE_1V1_POS  6
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int lna_gain_i_1v1_set : 3;
    unsigned int lna_iadj_i_1v1_set : 3;
    unsigned int lna_enable_1v1 : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_lna_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_LNA_D2R_IF_VAL_RST 0x20
#define EXTAPB_REGFILE_TRANSCEIVER_LNA_D2R_IF_VAL_ADDR  0x4001d2b4


/* lna_d2r_if_src_sel register */
/*----------------------*/
/* Rx LNA Interface : source selection */
/* lna_gain_i_1v1_set : Source selection for lna_gain_i_1v1_set */
/* lna_enable_1v1 : Source selection for lna_enable_1v1 */
#define EXTAPB_REGFILE_TRANSCEIVER_LNA_D2R_IF_SRC_SEL_LNA_GAIN_I_1V1_SET_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_LNA_D2R_IF_SRC_SEL_LNA_GAIN_I_1V1_SET_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_LNA_D2R_IF_SRC_SEL_LNA_GAIN_I_1V1_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_LNA_D2R_IF_SRC_SEL_LNA_GAIN_I_1V1_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LNA_D2R_IF_SRC_SEL_LNA_GAIN_I_1V1_SET_AGC 1
#define EXTAPB_REGFILE_TRANSCEIVER_LNA_D2R_IF_SRC_SEL_LNA_GAIN_I_1V1_SET_AGC_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_LNA_D2R_IF_SRC_SEL_LNA_ENABLE_1V1_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_LNA_D2R_IF_SRC_SEL_LNA_ENABLE_1V1_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_LNA_D2R_IF_SRC_SEL_LNA_ENABLE_1V1_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_LNA_D2R_IF_SRC_SEL_LNA_ENABLE_1V1_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LNA_D2R_IF_SRC_SEL_LNA_ENABLE_1V1_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_LNA_D2R_IF_SRC_SEL_LNA_ENABLE_1V1_TMU_MASK 0x2
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int lna_gain_i_1v1_set : 1;
    unsigned int lna_enable_1v1 : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_lna_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_LNA_D2R_IF_SRC_SEL_RST 0x3
#define EXTAPB_REGFILE_TRANSCEIVER_LNA_D2R_IF_SRC_SEL_ADDR  0x4001d2b8


/* lna_d2r_if_pol_invert_en register */
/*----------------------*/
/* Rx LNA interface: polarity invert control */
/* lna_enable_1v1 : Polarity invert control for pa_core_enable_1v1 */
#define EXTAPB_REGFILE_TRANSCEIVER_LNA_D2R_IF_POL_INVERT_EN_LNA_ENABLE_1V1_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_LNA_D2R_IF_POL_INVERT_EN_LNA_ENABLE_1V1_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_LNA_D2R_IF_POL_INVERT_EN_LNA_ENABLE_1V1_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_LNA_D2R_IF_POL_INVERT_EN_LNA_ENABLE_1V1_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LNA_D2R_IF_POL_INVERT_EN_LNA_ENABLE_1V1_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_LNA_D2R_IF_POL_INVERT_EN_LNA_ENABLE_1V1_EN_MASK 0x1
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int lna_enable_1v1 : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_lna_d2r_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_LNA_D2R_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LNA_D2R_IF_POL_INVERT_EN_ADDR  0x4001d2bc


/* pll_dac_0_d2r_if_val register */
/*----------------------*/
/* PLL DAC RF interface : regfile value */
/* pll_dac_aaf_out_enable : Enable DAC output to AAF. And AAF to Vmod */
/* pll_dac_aafbias_enable : Bias enable for AAF */
/* pll_dac_c_set : Output capacitor set. Default value 10 */
/* pll_dac_mode2_enable : 2Mbps mode ON */
/* dac_test_1v1_set : sets if_vcm_vo (350 mV if 1; 400mV if 0) + enable path from dac to aaf */
/* pll_dac_enable : DAC enable */
/* pll_dac_in_set : DAC data in (8 bits). NXP to detail. */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_VAL_PLL_DAC_AAF_OUT_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_VAL_PLL_DAC_AAF_OUT_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_VAL_PLL_DAC_AAFBIAS_ENABLE_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_VAL_PLL_DAC_AAFBIAS_ENABLE_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_VAL_PLL_DAC_C_SET_MASK 0x000c
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_VAL_PLL_DAC_C_SET_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_VAL_PLL_DAC_MODE2_ENABLE_MASK 0x0010
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_VAL_PLL_DAC_MODE2_ENABLE_POS  4
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_VAL_DAC_TEST_1V1_SET_MASK 0x0020
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_VAL_DAC_TEST_1V1_SET_POS  5
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_VAL_PLL_DAC_ENABLE_MASK 0x0040
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_VAL_PLL_DAC_ENABLE_POS  6
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_VAL_PLL_DAC_IN_SET_MASK 0x7f80
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_VAL_PLL_DAC_IN_SET_POS  7
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_dac_aaf_out_enable : 1;
    unsigned int pll_dac_aafbias_enable : 1;
    unsigned int pll_dac_c_set : 2;
    unsigned int pll_dac_mode2_enable : 1;
    unsigned int dac_test_1v1_set : 1;
    unsigned int pll_dac_enable : 1;
    unsigned int pll_dac_in_set : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_dac_0_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_VAL_RST 0x8
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_VAL_ADDR  0x4001d2c0


/* pll_dac_0_d2r_if_src_sel register */
/*----------------------*/
/* PLL DAC RF interface : source selection */
/* pll_dac_aaf_out_enable : Source selection for pll_dac_aaf_out_enable */
/* pll_dac_aafbias_enable : Source selection for pll_dac_aafbias_enable */
/* dac_test_1v1_set : Source selection for dac_test_1v1_set */
/* pll_dac_enable : Source selection for pll_dac_enable */
/* pll_dac_in_set : Source selection for pll_dac_in_set */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_SRC_SEL_PLL_DAC_AAF_OUT_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_SRC_SEL_PLL_DAC_AAF_OUT_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_SRC_SEL_PLL_DAC_AAF_OUT_ENABLE_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_SRC_SEL_PLL_DAC_AAF_OUT_ENABLE_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_SRC_SEL_PLL_DAC_AAF_OUT_ENABLE_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_SRC_SEL_PLL_DAC_AAF_OUT_ENABLE_TMU_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_SRC_SEL_PLL_DAC_AAFBIAS_ENABLE_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_SRC_SEL_PLL_DAC_AAFBIAS_ENABLE_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_SRC_SEL_PLL_DAC_AAFBIAS_ENABLE_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_SRC_SEL_PLL_DAC_AAFBIAS_ENABLE_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_SRC_SEL_PLL_DAC_AAFBIAS_ENABLE_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_SRC_SEL_PLL_DAC_AAFBIAS_ENABLE_TMU_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_SRC_SEL_DAC_TEST_1V1_SET_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_SRC_SEL_DAC_TEST_1V1_SET_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_SRC_SEL_DAC_TEST_1V1_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_SRC_SEL_DAC_TEST_1V1_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_SRC_SEL_DAC_TEST_1V1_SET_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_SRC_SEL_DAC_TEST_1V1_SET_TMU_MASK 0x4
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_SRC_SEL_PLL_DAC_ENABLE_MASK 0x0018
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_SRC_SEL_PLL_DAC_ENABLE_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_SRC_SEL_PLL_DAC_ENABLE_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_SRC_SEL_PLL_DAC_ENABLE_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_SRC_SEL_PLL_DAC_ENABLE_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_SRC_SEL_PLL_DAC_ENABLE_TMU_MASK 0x8
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_SRC_SEL_PLL_DAC_ENABLE_SYNTHESIZER 2
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_SRC_SEL_PLL_DAC_ENABLE_SYNTHESIZER_MASK 0x10
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_SRC_SEL_PLL_DAC_IN_SET_MASK 0x0020
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_SRC_SEL_PLL_DAC_IN_SET_POS  5
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_SRC_SEL_PLL_DAC_IN_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_SRC_SEL_PLL_DAC_IN_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_SRC_SEL_PLL_DAC_IN_SET_TX_DP 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_SRC_SEL_PLL_DAC_IN_SET_TX_DP_MASK 0x20
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_dac_aaf_out_enable : 1;
    unsigned int pll_dac_aafbias_enable : 1;
    unsigned int dac_test_1v1_set : 1;
    unsigned int pll_dac_enable : 2;
    unsigned int pll_dac_in_set : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_dac_0_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_SRC_SEL_RST 0x2a
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_SRC_SEL_ADDR  0x4001d2c4


/* pll_dac_0_d2r_if_pol_invert_en register */
/*----------------------*/
/* PLL DAC RF interface : polarity invert control */
/* pll_dac_aaf_out_enable : Polarity invert control for pll_dac_aaf_out_enable */
/* pll_dac_aafbias_enable : Polarity invert control for pll_dac_aafbias_enable */
/* pll_dac_mode2_enable : Polarity invert control for pll_dac_mode2_enable */
/* dac_test_1v1_set : Polarity invert control for dac_test_1v1_set */
/* pll_dac_enable : Polarity invert control for pll_dac_enable */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_POL_INVERT_EN_PLL_DAC_AAF_OUT_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_POL_INVERT_EN_PLL_DAC_AAF_OUT_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_POL_INVERT_EN_PLL_DAC_AAF_OUT_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_POL_INVERT_EN_PLL_DAC_AAF_OUT_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_POL_INVERT_EN_PLL_DAC_AAF_OUT_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_POL_INVERT_EN_PLL_DAC_AAF_OUT_ENABLE_EN_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_POL_INVERT_EN_PLL_DAC_AAFBIAS_ENABLE_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_POL_INVERT_EN_PLL_DAC_AAFBIAS_ENABLE_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_POL_INVERT_EN_PLL_DAC_AAFBIAS_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_POL_INVERT_EN_PLL_DAC_AAFBIAS_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_POL_INVERT_EN_PLL_DAC_AAFBIAS_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_POL_INVERT_EN_PLL_DAC_AAFBIAS_ENABLE_EN_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_POL_INVERT_EN_PLL_DAC_MODE2_ENABLE_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_POL_INVERT_EN_PLL_DAC_MODE2_ENABLE_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_POL_INVERT_EN_PLL_DAC_MODE2_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_POL_INVERT_EN_PLL_DAC_MODE2_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_POL_INVERT_EN_PLL_DAC_MODE2_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_POL_INVERT_EN_PLL_DAC_MODE2_ENABLE_EN_MASK 0x4
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_POL_INVERT_EN_DAC_TEST_1V1_SET_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_POL_INVERT_EN_DAC_TEST_1V1_SET_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_POL_INVERT_EN_DAC_TEST_1V1_SET_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_POL_INVERT_EN_DAC_TEST_1V1_SET_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_POL_INVERT_EN_DAC_TEST_1V1_SET_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_POL_INVERT_EN_DAC_TEST_1V1_SET_EN_MASK 0x8
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_POL_INVERT_EN_PLL_DAC_ENABLE_MASK 0x0010
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_POL_INVERT_EN_PLL_DAC_ENABLE_POS  4
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_POL_INVERT_EN_PLL_DAC_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_POL_INVERT_EN_PLL_DAC_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_POL_INVERT_EN_PLL_DAC_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_POL_INVERT_EN_PLL_DAC_ENABLE_EN_MASK 0x10
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_dac_aaf_out_enable : 1;
    unsigned int pll_dac_aafbias_enable : 1;
    unsigned int pll_dac_mode2_enable : 1;
    unsigned int dac_test_1v1_set : 1;
    unsigned int pll_dac_enable : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_dac_0_d2r_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_0_D2R_IF_POL_INVERT_EN_ADDR  0x4001d2c8


/* pll_dac_1_d2r_if_val register */
/*----------------------*/
/* PLL DAC RF interface : regfile value */
/* pll_dac_dccur_set : Output voltage trimming. Default value 1000. NXP to detail. */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_1_D2R_IF_VAL_PLL_DAC_DCCUR_SET_MASK 0x000f
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_1_D2R_IF_VAL_PLL_DAC_DCCUR_SET_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_dac_dccur_set : 4;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_dac_1_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_1_D2R_IF_VAL_RST 0x8
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DAC_1_D2R_IF_VAL_ADDR  0x4001d2cc


/* adc_d2r_if_val register */
/*----------------------*/
/* Rx ADC RF interface : regfile value */
/* rx_adc_samptime_set : ADC control. NXP to expand table. */
/* rx_adc_enable : ADC enable signal */
#define EXTAPB_REGFILE_TRANSCEIVER_ADC_D2R_IF_VAL_RX_ADC_SAMPTIME_SET_MASK 0x0003
#define EXTAPB_REGFILE_TRANSCEIVER_ADC_D2R_IF_VAL_RX_ADC_SAMPTIME_SET_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_ADC_D2R_IF_VAL_RX_ADC_ENABLE_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_ADC_D2R_IF_VAL_RX_ADC_ENABLE_POS  2
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rx_adc_samptime_set : 2;
    unsigned int rx_adc_enable : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_adc_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_ADC_D2R_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_ADC_D2R_IF_VAL_ADDR  0x4001d2d0


/* adc_d2r_if_src_sel register */
/*----------------------*/
/* Rx ADC RF interface : source selection */
/* rx_adc_enable : Source selection for rx_adc_enable */
#define EXTAPB_REGFILE_TRANSCEIVER_ADC_D2R_IF_SRC_SEL_RX_ADC_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_ADC_D2R_IF_SRC_SEL_RX_ADC_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_ADC_D2R_IF_SRC_SEL_RX_ADC_ENABLE_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_ADC_D2R_IF_SRC_SEL_RX_ADC_ENABLE_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_ADC_D2R_IF_SRC_SEL_RX_ADC_ENABLE_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_ADC_D2R_IF_SRC_SEL_RX_ADC_ENABLE_TMU_MASK 0x1
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rx_adc_enable : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_adc_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_ADC_D2R_IF_SRC_SEL_RST 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_ADC_D2R_IF_SRC_SEL_ADDR  0x4001d2d4


/* adc_d2r_if_pol_invert_en register */
/*----------------------*/
/* Rx ADC RF interface : polarity invert control */
/* rx_adc_enable : Polarity invert control for rx_adc_enable */
#define EXTAPB_REGFILE_TRANSCEIVER_ADC_D2R_IF_POL_INVERT_EN_RX_ADC_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_ADC_D2R_IF_POL_INVERT_EN_RX_ADC_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_ADC_D2R_IF_POL_INVERT_EN_RX_ADC_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_ADC_D2R_IF_POL_INVERT_EN_RX_ADC_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_ADC_D2R_IF_POL_INVERT_EN_RX_ADC_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_ADC_D2R_IF_POL_INVERT_EN_RX_ADC_ENABLE_EN_MASK 0x1
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rx_adc_enable : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_adc_d2r_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_ADC_D2R_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_ADC_D2R_IF_POL_INVERT_EN_ADDR  0x4001d2d8


/* bgr_d2r_if_val register */
/*----------------------*/
/* Rx Bandgap RF interface : regfile value */
/* rx_bgr_enable : BGR enable */
/* rx_bgr_trim_enable : Enable bypass RF bandgap trimming */
/* rx_bgr_cur5ua_1v8_set : 5uA Main mirror N trimming. 3.4uA to 8.3uA */
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_D2R_IF_VAL_RX_BGR_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_D2R_IF_VAL_RX_BGR_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_D2R_IF_VAL_RX_BGR_TRIM_ENABLE_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_D2R_IF_VAL_RX_BGR_TRIM_ENABLE_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_D2R_IF_VAL_RX_BGR_CUR5UA_1V8_SET_MASK 0x007c
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_D2R_IF_VAL_RX_BGR_CUR5UA_1V8_SET_POS  2
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rx_bgr_enable : 1;
    unsigned int rx_bgr_trim_enable : 1;
    unsigned int rx_bgr_cur5ua_1v8_set : 5;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_bgr_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_D2R_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_D2R_IF_VAL_ADDR  0x4001d2dc


/* bgr_d2r_if_src_sel register */
/*----------------------*/
/* Rx Bandgap RF interface : source selection */
/* rx_bgr_enable : Source selection for rx_bgr_enable */
/* rx_bgr_trim_enable : Source selection for rx_bgr_trim_enable */
/* rx_bgr_cur5ua_1v8_set : Source selection for rx_bgr_cur5ua_1v8_set */
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_D2R_IF_SRC_SEL_RX_BGR_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_D2R_IF_SRC_SEL_RX_BGR_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_D2R_IF_SRC_SEL_RX_BGR_ENABLE_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_D2R_IF_SRC_SEL_RX_BGR_ENABLE_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_D2R_IF_SRC_SEL_RX_BGR_ENABLE_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_D2R_IF_SRC_SEL_RX_BGR_ENABLE_TMU_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_D2R_IF_SRC_SEL_RX_BGR_TRIM_ENABLE_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_D2R_IF_SRC_SEL_RX_BGR_TRIM_ENABLE_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_D2R_IF_SRC_SEL_RX_BGR_TRIM_ENABLE_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_D2R_IF_SRC_SEL_RX_BGR_TRIM_ENABLE_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_D2R_IF_SRC_SEL_RX_BGR_TRIM_ENABLE_CALIBRATION 1
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_D2R_IF_SRC_SEL_RX_BGR_TRIM_ENABLE_CALIBRATION_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_D2R_IF_SRC_SEL_RX_BGR_CUR5UA_1V8_SET_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_D2R_IF_SRC_SEL_RX_BGR_CUR5UA_1V8_SET_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_D2R_IF_SRC_SEL_RX_BGR_CUR5UA_1V8_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_D2R_IF_SRC_SEL_RX_BGR_CUR5UA_1V8_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_D2R_IF_SRC_SEL_RX_BGR_CUR5UA_1V8_SET_CALIBRATION 1
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_D2R_IF_SRC_SEL_RX_BGR_CUR5UA_1V8_SET_CALIBRATION_MASK 0x4
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rx_bgr_enable : 1;
    unsigned int rx_bgr_trim_enable : 1;
    unsigned int rx_bgr_cur5ua_1v8_set : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_bgr_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_D2R_IF_SRC_SEL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_D2R_IF_SRC_SEL_ADDR  0x4001d2e0


/* bgr_d2r_if_pol_invert_en register */
/*----------------------*/
/* Rx Bandgap RF interface : polarity invert control */
/* rx_bgr_enable : Polarity invert control for rx_bgr_enable */
/* rx_bgr_trim_enable : Polarity invert control for rx_bgr_trim_enable */
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_D2R_IF_POL_INVERT_EN_RX_BGR_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_D2R_IF_POL_INVERT_EN_RX_BGR_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_D2R_IF_POL_INVERT_EN_RX_BGR_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_D2R_IF_POL_INVERT_EN_RX_BGR_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_D2R_IF_POL_INVERT_EN_RX_BGR_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_D2R_IF_POL_INVERT_EN_RX_BGR_ENABLE_EN_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_D2R_IF_POL_INVERT_EN_RX_BGR_TRIM_ENABLE_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_D2R_IF_POL_INVERT_EN_RX_BGR_TRIM_ENABLE_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_D2R_IF_POL_INVERT_EN_RX_BGR_TRIM_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_D2R_IF_POL_INVERT_EN_RX_BGR_TRIM_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_D2R_IF_POL_INVERT_EN_RX_BGR_TRIM_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_D2R_IF_POL_INVERT_EN_RX_BGR_TRIM_ENABLE_EN_MASK 0x2
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rx_bgr_enable : 1;
    unsigned int rx_bgr_trim_enable : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_bgr_d2r_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_D2R_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_D2R_IF_POL_INVERT_EN_ADDR  0x4001d2e4


/* bgr_r2d_if_val register */
/*----------------------*/
/* Rx Bandgap RF interface : regfile value */
/* rx_bgr_comp_out : Bandgap comparator output */
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_R2D_IF_VAL_RX_BGR_COMP_OUT_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_R2D_IF_VAL_RX_BGR_COMP_OUT_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rx_bgr_comp_out : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_bgr_r2d_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_R2D_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_R2D_IF_VAL_DYNAMIC true
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_R2D_IF_VAL_SNAPCLOCK 0
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_R2D_IF_VAL_ADDR  0x4001d2e8


/* bgr_r2d_if_pol_invert_en register */
/*----------------------*/
/* Rx Bandgap RF interface : polarity invert control */
/* rx_bgr_comp_out : Polarity invert control for rx_bgr_comp_out */
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_R2D_IF_POL_INVERT_EN_RX_BGR_COMP_OUT_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_R2D_IF_POL_INVERT_EN_RX_BGR_COMP_OUT_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_R2D_IF_POL_INVERT_EN_RX_BGR_COMP_OUT_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_R2D_IF_POL_INVERT_EN_RX_BGR_COMP_OUT_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_R2D_IF_POL_INVERT_EN_RX_BGR_COMP_OUT_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_R2D_IF_POL_INVERT_EN_RX_BGR_COMP_OUT_EN_MASK 0x1
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rx_bgr_comp_out : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_bgr_r2d_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_R2D_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_BGR_R2D_IF_POL_INVERT_EN_ADDR  0x4001d2ec


/* mixer_d2r_if_val register */
/*----------------------*/
/* Mixer RF interface : regfile value */
/* enable_1v1 : NXP to detail */
/* mixer_vgadjust_i_1v1_set : NXP to detail */
/* dummy_mixer_enable : Mixer enable */
#define EXTAPB_REGFILE_TRANSCEIVER_MIXER_D2R_IF_VAL_ENABLE_1V1_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_MIXER_D2R_IF_VAL_ENABLE_1V1_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_MIXER_D2R_IF_VAL_MIXER_VGADJUST_I_1V1_SET_MASK 0x000e
#define EXTAPB_REGFILE_TRANSCEIVER_MIXER_D2R_IF_VAL_MIXER_VGADJUST_I_1V1_SET_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_MIXER_D2R_IF_VAL_DUMMY_MIXER_ENABLE_MASK 0x0010
#define EXTAPB_REGFILE_TRANSCEIVER_MIXER_D2R_IF_VAL_DUMMY_MIXER_ENABLE_POS  4
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int enable_1v1 : 1;
    unsigned int mixer_vgadjust_i_1v1_set : 3;
    unsigned int dummy_mixer_enable : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_mixer_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_MIXER_D2R_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_MIXER_D2R_IF_VAL_ADDR  0x4001d2f0


/* mixer_d2r_if_src_sel register */
/*----------------------*/
/* Mixer RF interface : source selection */
/* enable_1v1 : Source selection for enable_1v1 */
/* dummy_mixer_enable : Source selection for dummy_mixer_enable */
#define EXTAPB_REGFILE_TRANSCEIVER_MIXER_D2R_IF_SRC_SEL_ENABLE_1V1_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_MIXER_D2R_IF_SRC_SEL_ENABLE_1V1_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_MIXER_D2R_IF_SRC_SEL_ENABLE_1V1_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_MIXER_D2R_IF_SRC_SEL_ENABLE_1V1_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_MIXER_D2R_IF_SRC_SEL_ENABLE_1V1_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_MIXER_D2R_IF_SRC_SEL_ENABLE_1V1_TMU_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_MIXER_D2R_IF_SRC_SEL_DUMMY_MIXER_ENABLE_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_MIXER_D2R_IF_SRC_SEL_DUMMY_MIXER_ENABLE_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_MIXER_D2R_IF_SRC_SEL_DUMMY_MIXER_ENABLE_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_MIXER_D2R_IF_SRC_SEL_DUMMY_MIXER_ENABLE_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_MIXER_D2R_IF_SRC_SEL_DUMMY_MIXER_ENABLE_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_MIXER_D2R_IF_SRC_SEL_DUMMY_MIXER_ENABLE_TMU_MASK 0x2
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int enable_1v1 : 1;
    unsigned int dummy_mixer_enable : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_mixer_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_MIXER_D2R_IF_SRC_SEL_RST 0x3
#define EXTAPB_REGFILE_TRANSCEIVER_MIXER_D2R_IF_SRC_SEL_ADDR  0x4001d2f4


/* mixer_d2r_if_pol_invert_en register */
/*----------------------*/
/* Mixer RF interface : polarity invert control */
/* enable_1v1 : Polarity invert control for enable_1v1 */
/* dummy_mixer_enable : Polarity invert control for dummy_mixer_en */
#define EXTAPB_REGFILE_TRANSCEIVER_MIXER_D2R_IF_POL_INVERT_EN_ENABLE_1V1_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_MIXER_D2R_IF_POL_INVERT_EN_ENABLE_1V1_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_MIXER_D2R_IF_POL_INVERT_EN_ENABLE_1V1_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_MIXER_D2R_IF_POL_INVERT_EN_ENABLE_1V1_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_MIXER_D2R_IF_POL_INVERT_EN_ENABLE_1V1_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_MIXER_D2R_IF_POL_INVERT_EN_ENABLE_1V1_EN_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_MIXER_D2R_IF_POL_INVERT_EN_DUMMY_MIXER_ENABLE_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_MIXER_D2R_IF_POL_INVERT_EN_DUMMY_MIXER_ENABLE_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_MIXER_D2R_IF_POL_INVERT_EN_DUMMY_MIXER_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_MIXER_D2R_IF_POL_INVERT_EN_DUMMY_MIXER_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_MIXER_D2R_IF_POL_INVERT_EN_DUMMY_MIXER_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_MIXER_D2R_IF_POL_INVERT_EN_DUMMY_MIXER_ENABLE_EN_MASK 0x2
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int enable_1v1 : 1;
    unsigned int dummy_mixer_enable : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_mixer_d2r_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_MIXER_D2R_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_MIXER_D2R_IF_POL_INVERT_EN_ADDR  0x4001d2f8


/* tone_0_d2r_if_val register */
/*----------------------*/
/* Tone Generator RF interface : regfile value */
/* tone_buffer_enable : Used in PA calibration */
/* tone_att_n_enable : Attenuator n enable */
/* tone_att_p_enable : Attenuator p enable */
/* tone_cco_drv_enable : CCO and CCO driver enable */
/* tone_cp_slice_enable : Charge pump enable */
/* tone_cp_slice_test_enable : Charge pump test slice enable */
/* tone_cp_bias_cor_enable : Charge pump bias correction enable */
/* tone_cp_offcur_set : Set charge pump offset current */
/* tone_cp_bias_enable : Charge pump bias enable */
/* tone_divn_fo_test_enable : Test frequency out enable */
/* tone_pfd_enable : Enable signal for PFD */
/* tone_att_set : Attenuation selection */
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_VAL_TONE_BUFFER_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_VAL_TONE_BUFFER_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_VAL_TONE_ATT_N_ENABLE_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_VAL_TONE_ATT_N_ENABLE_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_VAL_TONE_ATT_P_ENABLE_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_VAL_TONE_ATT_P_ENABLE_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_VAL_TONE_CCO_DRV_ENABLE_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_VAL_TONE_CCO_DRV_ENABLE_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_VAL_TONE_CP_SLICE_ENABLE_MASK 0x0010
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_VAL_TONE_CP_SLICE_ENABLE_POS  4
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_VAL_TONE_CP_SLICE_TEST_ENABLE_MASK 0x0020
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_VAL_TONE_CP_SLICE_TEST_ENABLE_POS  5
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_VAL_TONE_CP_BIAS_COR_ENABLE_MASK 0x0040
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_VAL_TONE_CP_BIAS_COR_ENABLE_POS  6
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_VAL_TONE_CP_OFFCUR_SET_MASK 0x0380
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_VAL_TONE_CP_OFFCUR_SET_POS  7
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_VAL_TONE_CP_BIAS_ENABLE_MASK 0x0400
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_VAL_TONE_CP_BIAS_ENABLE_POS  10
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_VAL_TONE_DIVN_FO_TEST_ENABLE_MASK 0x0800
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_VAL_TONE_DIVN_FO_TEST_ENABLE_POS  11
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_VAL_TONE_PFD_ENABLE_MASK 0x1000
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_VAL_TONE_PFD_ENABLE_POS  12
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_VAL_TONE_ATT_SET_MASK 0x6000
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_VAL_TONE_ATT_SET_POS  13
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_VAL_TONE_ATT_SET_E_32DB 0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_VAL_TONE_ATT_SET_E_32DB_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_VAL_TONE_ATT_SET_E_38DB 1
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_VAL_TONE_ATT_SET_E_38DB_MASK 0x2000
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_VAL_TONE_ATT_SET_E_44DB 2
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_VAL_TONE_ATT_SET_E_44DB_MASK 0x4000
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_VAL_TONE_ATT_SET_E_50DB 3
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_VAL_TONE_ATT_SET_E_50DB_MASK 0x6000
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int tone_buffer_enable : 1;
    unsigned int tone_att_n_enable : 1;
    unsigned int tone_att_p_enable : 1;
    unsigned int tone_cco_drv_enable : 1;
    unsigned int tone_cp_slice_enable : 1;
    unsigned int tone_cp_slice_test_enable : 1;
    unsigned int tone_cp_bias_cor_enable : 1;
    unsigned int tone_cp_offcur_set : 3;
    unsigned int tone_cp_bias_enable : 1;
    unsigned int tone_divn_fo_test_enable : 1;
    unsigned int tone_pfd_enable : 1;
    unsigned int tone_att_set : 2;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_tone_0_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_VAL_ADDR  0x4001d2fc


/* tone_0_d2r_if_src_sel register */
/*----------------------*/
/* Tone Generator RF interface : source selection */
/* tone_buffer_enable : Source selection for tone_buffer_enable */
/* tone_att_n_enable : Source selection for tone_att_n_enable */
/* tone_att_p_enable : Source selection for tone_att_p_enable */
/* tone_cco_drv_enable : Source selection for tone_cco_drv_enable */
/* tone_cp_slice_enable : Source selection for tone_cp_slice_enable */
/* tone_cp_slice_test_enable : Source selection for tone_cp_slice_test_enable */
/* tone_cp_bias_cor_enable : Source selection for tone_cp_bias_cor_enable */
/* tone_cp_bias_enable : Source selection for tone_cp_bias_enable */
/* tone_divn_fo_test_enable : Source selection for tone_divn_fo_test_enable */
/* tone_pfd_enable : Source selection for tone_pfd_enable */
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_BUFFER_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_BUFFER_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_BUFFER_ENABLE_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_BUFFER_ENABLE_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_BUFFER_ENABLE_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_BUFFER_ENABLE_TMU_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_ATT_N_ENABLE_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_ATT_N_ENABLE_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_ATT_N_ENABLE_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_ATT_N_ENABLE_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_ATT_N_ENABLE_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_ATT_N_ENABLE_TMU_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_ATT_P_ENABLE_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_ATT_P_ENABLE_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_ATT_P_ENABLE_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_ATT_P_ENABLE_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_ATT_P_ENABLE_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_ATT_P_ENABLE_TMU_MASK 0x4
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_CCO_DRV_ENABLE_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_CCO_DRV_ENABLE_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_CCO_DRV_ENABLE_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_CCO_DRV_ENABLE_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_CCO_DRV_ENABLE_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_CCO_DRV_ENABLE_TMU_MASK 0x8
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_CP_SLICE_ENABLE_MASK 0x0010
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_CP_SLICE_ENABLE_POS  4
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_CP_SLICE_ENABLE_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_CP_SLICE_ENABLE_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_CP_SLICE_ENABLE_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_CP_SLICE_ENABLE_TMU_MASK 0x10
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_CP_SLICE_TEST_ENABLE_MASK 0x0020
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_CP_SLICE_TEST_ENABLE_POS  5
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_CP_SLICE_TEST_ENABLE_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_CP_SLICE_TEST_ENABLE_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_CP_SLICE_TEST_ENABLE_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_CP_SLICE_TEST_ENABLE_TMU_MASK 0x20
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_CP_BIAS_COR_ENABLE_MASK 0x0040
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_CP_BIAS_COR_ENABLE_POS  6
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_CP_BIAS_COR_ENABLE_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_CP_BIAS_COR_ENABLE_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_CP_BIAS_COR_ENABLE_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_CP_BIAS_COR_ENABLE_TMU_MASK 0x40
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_CP_BIAS_ENABLE_MASK 0x0080
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_CP_BIAS_ENABLE_POS  7
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_CP_BIAS_ENABLE_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_CP_BIAS_ENABLE_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_CP_BIAS_ENABLE_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_CP_BIAS_ENABLE_TMU_MASK 0x80
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_DIVN_FO_TEST_ENABLE_MASK 0x0100
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_DIVN_FO_TEST_ENABLE_POS  8
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_DIVN_FO_TEST_ENABLE_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_DIVN_FO_TEST_ENABLE_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_DIVN_FO_TEST_ENABLE_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_DIVN_FO_TEST_ENABLE_TMU_MASK 0x100
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_PFD_ENABLE_MASK 0x0200
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_PFD_ENABLE_POS  9
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_PFD_ENABLE_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_PFD_ENABLE_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_PFD_ENABLE_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_TONE_PFD_ENABLE_TMU_MASK 0x200
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int tone_buffer_enable : 1;
    unsigned int tone_att_n_enable : 1;
    unsigned int tone_att_p_enable : 1;
    unsigned int tone_cco_drv_enable : 1;
    unsigned int tone_cp_slice_enable : 1;
    unsigned int tone_cp_slice_test_enable : 1;
    unsigned int tone_cp_bias_cor_enable : 1;
    unsigned int tone_cp_bias_enable : 1;
    unsigned int tone_divn_fo_test_enable : 1;
    unsigned int tone_pfd_enable : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_tone_0_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_RST 0x3ff
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_SRC_SEL_ADDR  0x4001d300


/* tone_1_d2r_if_val register */
/*----------------------*/
/* Tone Generator RF interface : regfile value */
/* tone_divn_p_set : Fixed division ration for div2_divn block */
/* tone_pfd_del_ctrl_set : Delay control signal. 0 : no delay, 3 : delay by 3 cycles */
/* tone_lf_prech_set : Pre charge loop filter to start at mid value */
/* tone_cp_prech_set : Pre charge for charge pump */
/* tone_pfd_force_up_set : force UP signal to always high */
/* tone_pfd_force_dn_set : force DOWN signal to always high */
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_VAL_TONE_DIVN_P_SET_MASK 0x007f
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_VAL_TONE_DIVN_P_SET_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_VAL_TONE_PFD_DEL_CTRL_SET_MASK 0x0180
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_VAL_TONE_PFD_DEL_CTRL_SET_POS  7
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_VAL_TONE_LF_PRECH_SET_MASK 0x0200
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_VAL_TONE_LF_PRECH_SET_POS  9
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_VAL_TONE_CP_PRECH_SET_MASK 0x0400
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_VAL_TONE_CP_PRECH_SET_POS  10
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_VAL_TONE_PFD_FORCE_UP_SET_MASK 0x0800
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_VAL_TONE_PFD_FORCE_UP_SET_POS  11
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_VAL_TONE_PFD_FORCE_DN_SET_MASK 0x1000
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_VAL_TONE_PFD_FORCE_DN_SET_POS  12
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int tone_divn_p_set : 7;
    unsigned int tone_pfd_del_ctrl_set : 2;
    unsigned int tone_lf_prech_set : 1;
    unsigned int tone_cp_prech_set : 1;
    unsigned int tone_pfd_force_up_set : 1;
    unsigned int tone_pfd_force_dn_set : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_tone_1_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_VAL_ADDR  0x4001d304


/* tone_1_d2r_if_src_sel register */
/*----------------------*/
/* Tone Generator RF interface : source selection */
/* tone_divn_p_set : Source selection for tone_divn_p_set */
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_SRC_SEL_TONE_DIVN_P_SET_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_SRC_SEL_TONE_DIVN_P_SET_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_SRC_SEL_TONE_DIVN_P_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_SRC_SEL_TONE_DIVN_P_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_SRC_SEL_TONE_DIVN_P_SET_TX_DP 1
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_SRC_SEL_TONE_DIVN_P_SET_TX_DP_MASK 0x1
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int tone_divn_p_set : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_tone_1_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_SRC_SEL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_SRC_SEL_ADDR  0x4001d308


/* tone_0_d2r_if_pol_invert_en register */
/*----------------------*/
/* Tone Generator RF interface : polarity invert control */
/* tone_att_n_enable : Polarity invert control for tone_att_n_enable */
/* tone_att_p_enable : Polarity invert control for tone_att_p_enable */
/* tone_cco_drv_enable : Polarity invert control for tone_cco_drv_enable */
/* tone_cp_slice_enable : Polarity invert control for tone_cp_slice_enable */
/* tone_cp_slice_test_enable : Polarity invert control for tone_cp_slice_test_enable */
/* tone_cp_bias_cor_enable : Polarity invert control for tone_cp_bias_cor_enable */
/* tone_cp_bias_enable : Polarity invert control for tone_cp_bias_enable */
/* tone_divn_fo_test_enable : Polarity invert control for tone_divn_fo_test_enable */
/* tone_pfd_enable : Polarity invert control for tone_pfd_enable */
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_ATT_N_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_ATT_N_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_ATT_N_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_ATT_N_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_ATT_N_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_ATT_N_ENABLE_EN_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_ATT_P_ENABLE_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_ATT_P_ENABLE_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_ATT_P_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_ATT_P_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_ATT_P_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_ATT_P_ENABLE_EN_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_CCO_DRV_ENABLE_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_CCO_DRV_ENABLE_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_CCO_DRV_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_CCO_DRV_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_CCO_DRV_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_CCO_DRV_ENABLE_EN_MASK 0x4
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_CP_SLICE_ENABLE_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_CP_SLICE_ENABLE_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_CP_SLICE_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_CP_SLICE_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_CP_SLICE_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_CP_SLICE_ENABLE_EN_MASK 0x8
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_CP_SLICE_TEST_ENABLE_MASK 0x0010
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_CP_SLICE_TEST_ENABLE_POS  4
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_CP_SLICE_TEST_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_CP_SLICE_TEST_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_CP_SLICE_TEST_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_CP_SLICE_TEST_ENABLE_EN_MASK 0x10
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_CP_BIAS_COR_ENABLE_MASK 0x0020
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_CP_BIAS_COR_ENABLE_POS  5
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_CP_BIAS_COR_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_CP_BIAS_COR_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_CP_BIAS_COR_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_CP_BIAS_COR_ENABLE_EN_MASK 0x20
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_CP_BIAS_ENABLE_MASK 0x0040
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_CP_BIAS_ENABLE_POS  6
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_CP_BIAS_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_CP_BIAS_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_CP_BIAS_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_CP_BIAS_ENABLE_EN_MASK 0x40
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_DIVN_FO_TEST_ENABLE_MASK 0x0080
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_DIVN_FO_TEST_ENABLE_POS  7
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_DIVN_FO_TEST_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_DIVN_FO_TEST_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_DIVN_FO_TEST_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_DIVN_FO_TEST_ENABLE_EN_MASK 0x80
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_PFD_ENABLE_MASK 0x0100
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_PFD_ENABLE_POS  8
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_PFD_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_PFD_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_PFD_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_TONE_PFD_ENABLE_EN_MASK 0x100
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int tone_att_n_enable : 1;
    unsigned int tone_att_p_enable : 1;
    unsigned int tone_cco_drv_enable : 1;
    unsigned int tone_cp_slice_enable : 1;
    unsigned int tone_cp_slice_test_enable : 1;
    unsigned int tone_cp_bias_cor_enable : 1;
    unsigned int tone_cp_bias_enable : 1;
    unsigned int tone_divn_fo_test_enable : 1;
    unsigned int tone_pfd_enable : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_tone_0_d2r_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_0_D2R_IF_POL_INVERT_EN_ADDR  0x4001d30c


/* tone_1_d2r_if_pol_invert_en register */
/*----------------------*/
/* Tone Generator RF Interface : Polarity invert control */
/* tone_lf_prech_set : Polarity invert control for tone_lf_prech_set */
/* tone_cp_prech_set : Polarity invert control for tone_cp_prech_set */
/* tone_pfd_force_up_set : Polarity invert control for tone_pfd_force_up_set */
/* tone_pfd_force_dn_set : Polarity invert control for tone_pfd_force_dn_set */
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_POL_INVERT_EN_TONE_LF_PRECH_SET_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_POL_INVERT_EN_TONE_LF_PRECH_SET_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_POL_INVERT_EN_TONE_LF_PRECH_SET_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_POL_INVERT_EN_TONE_LF_PRECH_SET_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_POL_INVERT_EN_TONE_LF_PRECH_SET_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_POL_INVERT_EN_TONE_LF_PRECH_SET_EN_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_POL_INVERT_EN_TONE_CP_PRECH_SET_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_POL_INVERT_EN_TONE_CP_PRECH_SET_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_POL_INVERT_EN_TONE_CP_PRECH_SET_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_POL_INVERT_EN_TONE_CP_PRECH_SET_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_POL_INVERT_EN_TONE_CP_PRECH_SET_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_POL_INVERT_EN_TONE_CP_PRECH_SET_EN_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_POL_INVERT_EN_TONE_PFD_FORCE_UP_SET_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_POL_INVERT_EN_TONE_PFD_FORCE_UP_SET_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_POL_INVERT_EN_TONE_PFD_FORCE_UP_SET_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_POL_INVERT_EN_TONE_PFD_FORCE_UP_SET_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_POL_INVERT_EN_TONE_PFD_FORCE_UP_SET_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_POL_INVERT_EN_TONE_PFD_FORCE_UP_SET_EN_MASK 0x4
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_POL_INVERT_EN_TONE_PFD_FORCE_DN_SET_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_POL_INVERT_EN_TONE_PFD_FORCE_DN_SET_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_POL_INVERT_EN_TONE_PFD_FORCE_DN_SET_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_POL_INVERT_EN_TONE_PFD_FORCE_DN_SET_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_POL_INVERT_EN_TONE_PFD_FORCE_DN_SET_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_POL_INVERT_EN_TONE_PFD_FORCE_DN_SET_EN_MASK 0x8
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int tone_lf_prech_set : 1;
    unsigned int tone_cp_prech_set : 1;
    unsigned int tone_pfd_force_up_set : 1;
    unsigned int tone_pfd_force_dn_set : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_tone_1_d2r_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_1_D2R_IF_POL_INVERT_EN_ADDR  0x4001d310


/* pll_cp_d2r_if_val register */
/*----------------------*/
/* PLL charge pump RF interface : regfile value */
/* pll_cp_enable : Enable signal for charge pump */
/* pll_cp_bias_cor_enable : Enable signal for bias correction */
/* pll_cp_offcur_set : Enable signal for charge pump offset */
/* pll_cp_offcur_pol_set : Enable PMOS (default) or NMOS sources in the CP */
/* pll_cp_slice_test_enable : Enable signal for test slice cp */
/* pll_cp_slice_set : enable signal for slices cp */
/* pll_cp_pch_enable : Enable signal for precharge cp */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_VAL_PLL_CP_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_VAL_PLL_CP_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_VAL_PLL_CP_BIAS_COR_ENABLE_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_VAL_PLL_CP_BIAS_COR_ENABLE_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_VAL_PLL_CP_OFFCUR_SET_MASK 0x003c
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_VAL_PLL_CP_OFFCUR_SET_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_VAL_PLL_CP_OFFCUR_POL_SET_MASK 0x0040
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_VAL_PLL_CP_OFFCUR_POL_SET_POS  6
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_VAL_PLL_CP_SLICE_TEST_ENABLE_MASK 0x0080
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_VAL_PLL_CP_SLICE_TEST_ENABLE_POS  7
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_VAL_PLL_CP_SLICE_SET_MASK 0x1f00
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_VAL_PLL_CP_SLICE_SET_POS  8
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_VAL_PLL_CP_PCH_ENABLE_MASK 0x2000
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_VAL_PLL_CP_PCH_ENABLE_POS  13
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_cp_enable : 1;
    unsigned int pll_cp_bias_cor_enable : 1;
    unsigned int pll_cp_offcur_set : 4;
    unsigned int pll_cp_offcur_pol_set : 1;
    unsigned int pll_cp_slice_test_enable : 1;
    unsigned int pll_cp_slice_set : 5;
    unsigned int pll_cp_pch_enable : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_cp_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_VAL_ADDR  0x4001d314


/* pll_cp_d2r_if_src_sel register */
/*----------------------*/
/* PLL charge pump RF interface : source selection */
/* pll_cp_enable : Source selection for pll_cp_enable */
/* pll_cp_bias_cor_enable : Source selection for pll_cp_bias_cor_enable */
/* pll_cp_offcur_set : Source selection for pll_cp_offcur_set */
/* pll_cp_slice_set : Source selection for pll_cp_slice_set */
/* pll_cp_pch_enable : cd */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_SRC_SEL_PLL_CP_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_SRC_SEL_PLL_CP_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_SRC_SEL_PLL_CP_ENABLE_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_SRC_SEL_PLL_CP_ENABLE_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_SRC_SEL_PLL_CP_ENABLE_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_SRC_SEL_PLL_CP_ENABLE_TMU_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_SRC_SEL_PLL_CP_BIAS_COR_ENABLE_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_SRC_SEL_PLL_CP_BIAS_COR_ENABLE_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_SRC_SEL_PLL_CP_BIAS_COR_ENABLE_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_SRC_SEL_PLL_CP_BIAS_COR_ENABLE_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_SRC_SEL_PLL_CP_BIAS_COR_ENABLE_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_SRC_SEL_PLL_CP_BIAS_COR_ENABLE_TMU_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_SRC_SEL_PLL_CP_OFFCUR_SET_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_SRC_SEL_PLL_CP_OFFCUR_SET_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_SRC_SEL_PLL_CP_OFFCUR_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_SRC_SEL_PLL_CP_OFFCUR_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_SRC_SEL_PLL_CP_OFFCUR_SET_CALIBRATION 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_SRC_SEL_PLL_CP_OFFCUR_SET_CALIBRATION_MASK 0x4
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_SRC_SEL_PLL_CP_SLICE_SET_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_SRC_SEL_PLL_CP_SLICE_SET_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_SRC_SEL_PLL_CP_SLICE_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_SRC_SEL_PLL_CP_SLICE_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_SRC_SEL_PLL_CP_SLICE_SET_CALIBRATION 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_SRC_SEL_PLL_CP_SLICE_SET_CALIBRATION_MASK 0x8
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_SRC_SEL_PLL_CP_PCH_ENABLE_MASK 0x0010
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_SRC_SEL_PLL_CP_PCH_ENABLE_POS  4
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_SRC_SEL_PLL_CP_PCH_ENABLE_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_SRC_SEL_PLL_CP_PCH_ENABLE_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_SRC_SEL_PLL_CP_PCH_ENABLE_CALIBRATION 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_SRC_SEL_PLL_CP_PCH_ENABLE_CALIBRATION_MASK 0x10
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_cp_enable : 1;
    unsigned int pll_cp_bias_cor_enable : 1;
    unsigned int pll_cp_offcur_set : 1;
    unsigned int pll_cp_slice_set : 1;
    unsigned int pll_cp_pch_enable : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_cp_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_SRC_SEL_RST 0x13
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_SRC_SEL_ADDR  0x4001d318


/* pll_cp_d2r_if_pol_invert_en register */
/*----------------------*/
/* PLL charge pump RF interface : polarity invert control */
/* pll_cp_enable : Polarity invert control for pll_cp_enable */
/* pll_cp_bias_cor_enable : Polarity invert control for pll_cp_bias_cor_enable */
/* pll_cp_offcur_pol_set : Polarity invert control for pll_cp_offcur_pol_set */
/* pll_cp_slice_test_enable : Polarity invert control for pll_cp_slice_test_enable */
/* pll_cp_pch_enable : Polarity invert control for pll_cp_pch_enable */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_POL_INVERT_EN_PLL_CP_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_POL_INVERT_EN_PLL_CP_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_POL_INVERT_EN_PLL_CP_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_POL_INVERT_EN_PLL_CP_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_POL_INVERT_EN_PLL_CP_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_POL_INVERT_EN_PLL_CP_ENABLE_EN_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_POL_INVERT_EN_PLL_CP_BIAS_COR_ENABLE_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_POL_INVERT_EN_PLL_CP_BIAS_COR_ENABLE_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_POL_INVERT_EN_PLL_CP_BIAS_COR_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_POL_INVERT_EN_PLL_CP_BIAS_COR_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_POL_INVERT_EN_PLL_CP_BIAS_COR_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_POL_INVERT_EN_PLL_CP_BIAS_COR_ENABLE_EN_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_POL_INVERT_EN_PLL_CP_OFFCUR_POL_SET_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_POL_INVERT_EN_PLL_CP_OFFCUR_POL_SET_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_POL_INVERT_EN_PLL_CP_OFFCUR_POL_SET_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_POL_INVERT_EN_PLL_CP_OFFCUR_POL_SET_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_POL_INVERT_EN_PLL_CP_OFFCUR_POL_SET_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_POL_INVERT_EN_PLL_CP_OFFCUR_POL_SET_EN_MASK 0x4
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_POL_INVERT_EN_PLL_CP_SLICE_TEST_ENABLE_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_POL_INVERT_EN_PLL_CP_SLICE_TEST_ENABLE_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_POL_INVERT_EN_PLL_CP_SLICE_TEST_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_POL_INVERT_EN_PLL_CP_SLICE_TEST_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_POL_INVERT_EN_PLL_CP_SLICE_TEST_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_POL_INVERT_EN_PLL_CP_SLICE_TEST_ENABLE_EN_MASK 0x8
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_POL_INVERT_EN_PLL_CP_PCH_ENABLE_MASK 0x0010
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_POL_INVERT_EN_PLL_CP_PCH_ENABLE_POS  4
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_POL_INVERT_EN_PLL_CP_PCH_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_POL_INVERT_EN_PLL_CP_PCH_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_POL_INVERT_EN_PLL_CP_PCH_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_POL_INVERT_EN_PLL_CP_PCH_ENABLE_EN_MASK 0x10
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_cp_enable : 1;
    unsigned int pll_cp_bias_cor_enable : 1;
    unsigned int pll_cp_offcur_pol_set : 1;
    unsigned int pll_cp_slice_test_enable : 1;
    unsigned int pll_cp_pch_enable : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_cp_d2r_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CP_D2R_IF_POL_INVERT_EN_ADDR  0x4001d31c


/* pll_xo_d2r_if_val register */
/*----------------------*/
/* PLL XO RF interface : regfile value */
/* pll_xo_captest_start_set : Start test */
/* pll_xo_captest_enable : Enable signal for cap test */
/* pll_xo_captest_osc_in_set : Select the input for test, 0 : osc_out, 1: osc_in */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_XO_D2R_IF_VAL_PLL_XO_CAPTEST_START_SET_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_XO_D2R_IF_VAL_PLL_XO_CAPTEST_START_SET_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_XO_D2R_IF_VAL_PLL_XO_CAPTEST_ENABLE_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_XO_D2R_IF_VAL_PLL_XO_CAPTEST_ENABLE_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_XO_D2R_IF_VAL_PLL_XO_CAPTEST_OSC_IN_SET_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_XO_D2R_IF_VAL_PLL_XO_CAPTEST_OSC_IN_SET_POS  2
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_xo_captest_start_set : 1;
    unsigned int pll_xo_captest_enable : 1;
    unsigned int pll_xo_captest_osc_in_set : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_xo_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_XO_D2R_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_XO_D2R_IF_VAL_ADDR  0x4001d320


/* pll_xo_d2r_if_src_sel register */
/*----------------------*/
/* PLL XO RF Interface : source selection */
/* pll_xo_captest_start_set : Source selection for pll_xo_captest_start_set */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_XO_D2R_IF_SRC_SEL_PLL_XO_CAPTEST_START_SET_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_XO_D2R_IF_SRC_SEL_PLL_XO_CAPTEST_START_SET_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_XO_D2R_IF_SRC_SEL_PLL_XO_CAPTEST_START_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_XO_D2R_IF_SRC_SEL_PLL_XO_CAPTEST_START_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_XO_D2R_IF_SRC_SEL_PLL_XO_CAPTEST_START_SET_CALIBRATION 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_XO_D2R_IF_SRC_SEL_PLL_XO_CAPTEST_START_SET_CALIBRATION_MASK 0x1
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_xo_captest_start_set : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_xo_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_XO_D2R_IF_SRC_SEL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_XO_D2R_IF_SRC_SEL_ADDR  0x4001d324


/* pll_xo_d2r_if_pol_invert_en register */
/*----------------------*/
/* PLL XO RF Interface : polarity invert control */
/* pll_xo_captest_start_set : Polarity invert control for pll_xo_captest_start_set */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_XO_D2R_IF_POL_INVERT_EN_PLL_XO_CAPTEST_START_SET_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_XO_D2R_IF_POL_INVERT_EN_PLL_XO_CAPTEST_START_SET_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_XO_D2R_IF_POL_INVERT_EN_PLL_XO_CAPTEST_START_SET_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_XO_D2R_IF_POL_INVERT_EN_PLL_XO_CAPTEST_START_SET_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_XO_D2R_IF_POL_INVERT_EN_PLL_XO_CAPTEST_START_SET_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_XO_D2R_IF_POL_INVERT_EN_PLL_XO_CAPTEST_START_SET_EN_MASK 0x1
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_xo_captest_start_set : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_xo_d2r_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_XO_D2R_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_XO_D2R_IF_POL_INVERT_EN_ADDR  0x4001d328


/* pll_xo_r2d_if_val register */
/*----------------------*/
/* PLL XO RF interface : regfile value */
/* pll_xo_captest_stop : Output XO cap test. */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_XO_R2D_IF_VAL_PLL_XO_CAPTEST_STOP_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_XO_R2D_IF_VAL_PLL_XO_CAPTEST_STOP_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_xo_captest_stop : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_xo_r2d_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_XO_R2D_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_XO_R2D_IF_VAL_DYNAMIC true
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_XO_R2D_IF_VAL_SNAPCLOCK 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_XO_R2D_IF_VAL_ADDR  0x4001d32c


/* pll_xo_r2d_if_pol_invert_en register */
/*----------------------*/
/* PLL XO RF Interface : polarity invert control */
/* pll_xo_captest_stop : Polarity invert control for pll_xo_captest_stop */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_XO_R2D_IF_POL_INVERT_EN_PLL_XO_CAPTEST_STOP_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_XO_R2D_IF_POL_INVERT_EN_PLL_XO_CAPTEST_STOP_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_XO_R2D_IF_POL_INVERT_EN_PLL_XO_CAPTEST_STOP_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_XO_R2D_IF_POL_INVERT_EN_PLL_XO_CAPTEST_STOP_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_XO_R2D_IF_POL_INVERT_EN_PLL_XO_CAPTEST_STOP_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_XO_R2D_IF_POL_INVERT_EN_PLL_XO_CAPTEST_STOP_EN_MASK 0x1
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_xo_captest_stop : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_xo_r2d_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_XO_R2D_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_XO_R2D_IF_POL_INVERT_EN_ADDR  0x4001d330


/* xo32k_d2r_if_val register */
/*----------------------*/
/* 32 kHz XO RF interface : regfile value */
/* xo32k_captest_start_ao_set : Start test */
/* xo32k_captest_enable_ao : Enable signal for cap test */
/* xo32k_captest_osc_in_sel_ao_set : Select the input for test, 0 : osc_out, 1 : osc_in */
#define EXTAPB_REGFILE_TRANSCEIVER_XO32K_D2R_IF_VAL_XO32K_CAPTEST_START_AO_SET_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_XO32K_D2R_IF_VAL_XO32K_CAPTEST_START_AO_SET_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_XO32K_D2R_IF_VAL_XO32K_CAPTEST_ENABLE_AO_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_XO32K_D2R_IF_VAL_XO32K_CAPTEST_ENABLE_AO_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_XO32K_D2R_IF_VAL_XO32K_CAPTEST_OSC_IN_SEL_AO_SET_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_XO32K_D2R_IF_VAL_XO32K_CAPTEST_OSC_IN_SEL_AO_SET_POS  2
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int xo32k_captest_start_ao_set : 1;
    unsigned int xo32k_captest_enable_ao : 1;
    unsigned int xo32k_captest_osc_in_sel_ao_set : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_xo32k_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_XO32K_D2R_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_XO32K_D2R_IF_VAL_ADDR  0x4001d334


/* xo32k_d2r_if_src_sel register */
/*----------------------*/
/* 32 kHz XO RF interface : source selection */
/* xo32k_captest_start_ao_set : Source selection for xo32k_captest_start_ao_set */
#define EXTAPB_REGFILE_TRANSCEIVER_XO32K_D2R_IF_SRC_SEL_XO32K_CAPTEST_START_AO_SET_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_XO32K_D2R_IF_SRC_SEL_XO32K_CAPTEST_START_AO_SET_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_XO32K_D2R_IF_SRC_SEL_XO32K_CAPTEST_START_AO_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_XO32K_D2R_IF_SRC_SEL_XO32K_CAPTEST_START_AO_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_XO32K_D2R_IF_SRC_SEL_XO32K_CAPTEST_START_AO_SET_CALIBRATION 1
#define EXTAPB_REGFILE_TRANSCEIVER_XO32K_D2R_IF_SRC_SEL_XO32K_CAPTEST_START_AO_SET_CALIBRATION_MASK 0x1
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int xo32k_captest_start_ao_set : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_xo32k_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_XO32K_D2R_IF_SRC_SEL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_XO32K_D2R_IF_SRC_SEL_ADDR  0x4001d338


/* xo32k_d2r_if_pol_invert_en register */
/*----------------------*/
/* 32 kHz XO RF interface : polarity invert control */
/* xo32k_captest_start_ao_set : Polarity invert control for xo32k_captest_start_ao_set */
#define EXTAPB_REGFILE_TRANSCEIVER_XO32K_D2R_IF_POL_INVERT_EN_XO32K_CAPTEST_START_AO_SET_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_XO32K_D2R_IF_POL_INVERT_EN_XO32K_CAPTEST_START_AO_SET_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_XO32K_D2R_IF_POL_INVERT_EN_XO32K_CAPTEST_START_AO_SET_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_XO32K_D2R_IF_POL_INVERT_EN_XO32K_CAPTEST_START_AO_SET_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_XO32K_D2R_IF_POL_INVERT_EN_XO32K_CAPTEST_START_AO_SET_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_XO32K_D2R_IF_POL_INVERT_EN_XO32K_CAPTEST_START_AO_SET_EN_MASK 0x1
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int xo32k_captest_start_ao_set : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_xo32k_d2r_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_XO32K_D2R_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_XO32K_D2R_IF_POL_INVERT_EN_ADDR  0x4001d33c


/* xo32k_r2d_if_val register */
/*----------------------*/
/* 32 kHz XO RF interface : regfile value */
/* xo32k_captest_stop_ao : Output XO cap test */
#define EXTAPB_REGFILE_TRANSCEIVER_XO32K_R2D_IF_VAL_XO32K_CAPTEST_STOP_AO_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_XO32K_R2D_IF_VAL_XO32K_CAPTEST_STOP_AO_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int xo32k_captest_stop_ao : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_xo32k_r2d_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_XO32K_R2D_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_XO32K_R2D_IF_VAL_DYNAMIC true
#define EXTAPB_REGFILE_TRANSCEIVER_XO32K_R2D_IF_VAL_SNAPCLOCK 0
#define EXTAPB_REGFILE_TRANSCEIVER_XO32K_R2D_IF_VAL_ADDR  0x4001d340


/* xo32k_r2d_if_pol_invert_en register */
/*----------------------*/
/* 32 kHz XO RF interface : polarity invert control */
/* xo32k_captest_stop_ao : Polarity invert control for xo32k_captest_stop_ao */
#define EXTAPB_REGFILE_TRANSCEIVER_XO32K_R2D_IF_POL_INVERT_EN_XO32K_CAPTEST_STOP_AO_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_XO32K_R2D_IF_POL_INVERT_EN_XO32K_CAPTEST_STOP_AO_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_XO32K_R2D_IF_POL_INVERT_EN_XO32K_CAPTEST_STOP_AO_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_XO32K_R2D_IF_POL_INVERT_EN_XO32K_CAPTEST_STOP_AO_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_XO32K_R2D_IF_POL_INVERT_EN_XO32K_CAPTEST_STOP_AO_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_XO32K_R2D_IF_POL_INVERT_EN_XO32K_CAPTEST_STOP_AO_EN_MASK 0x1
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int xo32k_captest_stop_ao : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_xo32k_r2d_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_XO32K_R2D_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_XO32K_R2D_IF_POL_INVERT_EN_ADDR  0x4001d344


/* ldo_lo_d2r_if_val register */
/*----------------------*/
/* PLL LDO RF Interface : regfile value */
/* enable_1v8 : Enable signal for LO */
/* bypass_i_1v8_set : Enable bypass signal */
/* highz_i_1v8_set : TBD */
/* vout_i_1v8_set : TBD */
/* ibias_i_1v8_set : TBD */
/* stabmode_i_1v8_set : TBD */
/* vout_i_1v8_set_rx : TBD */
/* vout_i_1v8_set_tx : TBD */
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_VAL_ENABLE_1V8_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_VAL_ENABLE_1V8_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_VAL_BYPASS_I_1V8_SET_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_VAL_BYPASS_I_1V8_SET_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_VAL_HIGHZ_I_1V8_SET_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_VAL_HIGHZ_I_1V8_SET_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_VAL_VOUT_I_1V8_SET_MASK 0x0038
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_VAL_VOUT_I_1V8_SET_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_VAL_IBIAS_I_1V8_SET_MASK 0x00c0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_VAL_IBIAS_I_1V8_SET_POS  6
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_VAL_STABMODE_I_1V8_SET_MASK 0x0300
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_VAL_STABMODE_I_1V8_SET_POS  8
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_VAL_VOUT_I_1V8_SET_RX_MASK 0x1c00
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_VAL_VOUT_I_1V8_SET_RX_POS  10
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_VAL_VOUT_I_1V8_SET_TX_MASK 0xe000
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_VAL_VOUT_I_1V8_SET_TX_POS  13
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int enable_1v8 : 1;
    unsigned int bypass_i_1v8_set : 1;
    unsigned int highz_i_1v8_set : 1;
    unsigned int vout_i_1v8_set : 3;
    unsigned int ibias_i_1v8_set : 2;
    unsigned int stabmode_i_1v8_set : 2;
    unsigned int vout_i_1v8_set_rx : 3;
    unsigned int vout_i_1v8_set_tx : 3;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_ldo_lo_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_VAL_RST 0xb568
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_VAL_ADDR  0x4001d348


/* ldo_lo_d2r_if_src_sel register */
/*----------------------*/
/* PLL LDO RF Interface : source selection */
/* enable_1v8 : Source selection for enable_1v8 */
/* vout_i_1v8_set : Source selection for vout_i_1v8 */
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_SRC_SEL_ENABLE_1V8_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_SRC_SEL_ENABLE_1V8_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_SRC_SEL_ENABLE_1V8_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_SRC_SEL_ENABLE_1V8_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_SRC_SEL_ENABLE_1V8_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_SRC_SEL_ENABLE_1V8_TMU_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_SRC_SEL_VOUT_I_1V8_SET_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_SRC_SEL_VOUT_I_1V8_SET_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_SRC_SEL_VOUT_I_1V8_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_SRC_SEL_VOUT_I_1V8_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_SRC_SEL_VOUT_I_1V8_SET_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_SRC_SEL_VOUT_I_1V8_SET_TMU_MASK 0x2
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int enable_1v8 : 1;
    unsigned int vout_i_1v8_set : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_ldo_lo_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_SRC_SEL_RST 0x3
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_SRC_SEL_ADDR  0x4001d34c


/* ldo_lo_d2r_if_pol_invert_en register */
/*----------------------*/
/* PLL LDO RF interface : polarity invert control */
/* bypass_i_1v8_set : Polarity invert control for bypass_i_1v8_set */
/* enable_1v8 : Polarity invert control for enable_1v8 */
/* highz_i_1v8_set : Polarity invert control for highz_i_1v8_set */
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_POL_INVERT_EN_BYPASS_I_1V8_SET_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_POL_INVERT_EN_BYPASS_I_1V8_SET_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_POL_INVERT_EN_BYPASS_I_1V8_SET_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_POL_INVERT_EN_BYPASS_I_1V8_SET_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_POL_INVERT_EN_BYPASS_I_1V8_SET_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_POL_INVERT_EN_BYPASS_I_1V8_SET_EN_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_POL_INVERT_EN_ENABLE_1V8_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_POL_INVERT_EN_ENABLE_1V8_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_POL_INVERT_EN_ENABLE_1V8_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_POL_INVERT_EN_ENABLE_1V8_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_POL_INVERT_EN_ENABLE_1V8_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_POL_INVERT_EN_ENABLE_1V8_EN_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_POL_INVERT_EN_HIGHZ_I_1V8_SET_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_POL_INVERT_EN_HIGHZ_I_1V8_SET_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_POL_INVERT_EN_HIGHZ_I_1V8_SET_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_POL_INVERT_EN_HIGHZ_I_1V8_SET_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_POL_INVERT_EN_HIGHZ_I_1V8_SET_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_POL_INVERT_EN_HIGHZ_I_1V8_SET_EN_MASK 0x4
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int bypass_i_1v8_set : 1;
    unsigned int enable_1v8 : 1;
    unsigned int highz_i_1v8_set : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_ldo_lo_d2r_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_LO_D2R_IF_POL_INVERT_EN_ADDR  0x4001d350


/* pll_pfd_d2r_if_val register */
/*----------------------*/
/* PLL PFD RF interface : regfile value */
/* pll_pfdcp_enable : Enable signal for pfdcp */
/* pll_pfd_del_ctrl_set : Tune delay in the pfd. Default 00. NXP to detail */
/* pll_pfd_force_up_set : Force Up signal */
/* pll_pfd_force_dn_set : Force Down signal */
/* pll_pfd_rst_set : Reset pfd active high */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_VAL_PLL_PFDCP_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_VAL_PLL_PFDCP_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_VAL_PLL_PFD_DEL_CTRL_SET_MASK 0x0006
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_VAL_PLL_PFD_DEL_CTRL_SET_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_VAL_PLL_PFD_FORCE_UP_SET_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_VAL_PLL_PFD_FORCE_UP_SET_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_VAL_PLL_PFD_FORCE_DN_SET_MASK 0x0010
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_VAL_PLL_PFD_FORCE_DN_SET_POS  4
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_VAL_PLL_PFD_RST_SET_MASK 0x0020
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_VAL_PLL_PFD_RST_SET_POS  5
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_pfdcp_enable : 1;
    unsigned int pll_pfd_del_ctrl_set : 2;
    unsigned int pll_pfd_force_up_set : 1;
    unsigned int pll_pfd_force_dn_set : 1;
    unsigned int pll_pfd_rst_set : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_pfd_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_VAL_ADDR  0x4001d354


/* pll_pfd_d2r_if_src_sel register */
/*----------------------*/
/* PLL PFD RF Interface : source selection */
/* pll_pfdcp_enable : Source selection for pll_pfdcp_enable */
/* pll_pfd_rst_set : Source selection for pll_pfd_rst_set */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_SRC_SEL_PLL_PFDCP_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_SRC_SEL_PLL_PFDCP_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_SRC_SEL_PLL_PFDCP_ENABLE_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_SRC_SEL_PLL_PFDCP_ENABLE_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_SRC_SEL_PLL_PFDCP_ENABLE_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_SRC_SEL_PLL_PFDCP_ENABLE_TMU_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_SRC_SEL_PLL_PFD_RST_SET_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_SRC_SEL_PLL_PFD_RST_SET_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_SRC_SEL_PLL_PFD_RST_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_SRC_SEL_PLL_PFD_RST_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_SRC_SEL_PLL_PFD_RST_SET_CALIBRATION 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_SRC_SEL_PLL_PFD_RST_SET_CALIBRATION_MASK 0x2
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_pfdcp_enable : 1;
    unsigned int pll_pfd_rst_set : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_pfd_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_SRC_SEL_RST 0x3
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_SRC_SEL_ADDR  0x4001d358


/* pll_pfd_d2r_if_pol_invert_en register */
/*----------------------*/
/* PLL PFD RF interface : polarity invert control */
/* pll_pfdcp_enable : Polarity invert control for pll_pfdcp_enable */
/* pll_pfd_force_up_set : Polarity invert control for pll_pfd_force_up_set */
/* pll_pfd_force_dn_set : Polarity Invert control for pll_pfd_force_dn_set */
/* pll_pfd_rst_set : Polarity invert control for pll_pfd_rst_set */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_POL_INVERT_EN_PLL_PFDCP_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_POL_INVERT_EN_PLL_PFDCP_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_POL_INVERT_EN_PLL_PFDCP_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_POL_INVERT_EN_PLL_PFDCP_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_POL_INVERT_EN_PLL_PFDCP_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_POL_INVERT_EN_PLL_PFDCP_ENABLE_EN_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_POL_INVERT_EN_PLL_PFD_FORCE_UP_SET_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_POL_INVERT_EN_PLL_PFD_FORCE_UP_SET_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_POL_INVERT_EN_PLL_PFD_FORCE_UP_SET_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_POL_INVERT_EN_PLL_PFD_FORCE_UP_SET_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_POL_INVERT_EN_PLL_PFD_FORCE_UP_SET_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_POL_INVERT_EN_PLL_PFD_FORCE_UP_SET_EN_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_POL_INVERT_EN_PLL_PFD_FORCE_DN_SET_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_POL_INVERT_EN_PLL_PFD_FORCE_DN_SET_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_POL_INVERT_EN_PLL_PFD_FORCE_DN_SET_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_POL_INVERT_EN_PLL_PFD_FORCE_DN_SET_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_POL_INVERT_EN_PLL_PFD_FORCE_DN_SET_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_POL_INVERT_EN_PLL_PFD_FORCE_DN_SET_EN_MASK 0x4
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_POL_INVERT_EN_PLL_PFD_RST_SET_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_POL_INVERT_EN_PLL_PFD_RST_SET_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_POL_INVERT_EN_PLL_PFD_RST_SET_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_POL_INVERT_EN_PLL_PFD_RST_SET_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_POL_INVERT_EN_PLL_PFD_RST_SET_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_POL_INVERT_EN_PLL_PFD_RST_SET_EN_MASK 0x8
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_pfdcp_enable : 1;
    unsigned int pll_pfd_force_up_set : 1;
    unsigned int pll_pfd_force_dn_set : 1;
    unsigned int pll_pfd_rst_set : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_pfd_d2r_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_PFD_D2R_IF_POL_INVERT_EN_ADDR  0x4001d35c


/* pll_lock_d2r_if_val register */
/*----------------------*/
/* PLL Lock RF interface : regfile value */
/* pll_lock_det_enable : Enable signal for the lock detector */
/* pll_lock_det_force_rst_set : Force reset lock detector */
/* pll_lock_det_mode_ctrl_set : Mode select for lock detector. Default : 00000 */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_D2R_IF_VAL_PLL_LOCK_DET_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_D2R_IF_VAL_PLL_LOCK_DET_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_D2R_IF_VAL_PLL_LOCK_DET_FORCE_RST_SET_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_D2R_IF_VAL_PLL_LOCK_DET_FORCE_RST_SET_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_D2R_IF_VAL_PLL_LOCK_DET_MODE_CTRL_SET_MASK 0x007c
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_D2R_IF_VAL_PLL_LOCK_DET_MODE_CTRL_SET_POS  2
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_lock_det_enable : 1;
    unsigned int pll_lock_det_force_rst_set : 1;
    unsigned int pll_lock_det_mode_ctrl_set : 5;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_lock_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_D2R_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_D2R_IF_VAL_ADDR  0x4001d360


/* pll_lock_d2r_if_src_sel register */
/*----------------------*/
/* PLL Lock RF interface : source selection */
/* pll_lock_det_enable : Source selection for pll_lock_det_enable */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_D2R_IF_SRC_SEL_PLL_LOCK_DET_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_D2R_IF_SRC_SEL_PLL_LOCK_DET_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_D2R_IF_SRC_SEL_PLL_LOCK_DET_ENABLE_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_D2R_IF_SRC_SEL_PLL_LOCK_DET_ENABLE_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_D2R_IF_SRC_SEL_PLL_LOCK_DET_ENABLE_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_D2R_IF_SRC_SEL_PLL_LOCK_DET_ENABLE_TMU_MASK 0x1
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_lock_det_enable : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_lock_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_D2R_IF_SRC_SEL_RST 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_D2R_IF_SRC_SEL_ADDR  0x4001d364


/* pll_lock_d2r_if_pol_invert_en register */
/*----------------------*/
/* PLL Lock RF interface : polarity invert control */
/* pll_lock_det_enable : Polarity invert control for pll_lock_det_enable */
/* pll_lock_det_force_rst_set : Polarity invert control for pll_lock_det_force_rst_set */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_D2R_IF_POL_INVERT_EN_PLL_LOCK_DET_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_D2R_IF_POL_INVERT_EN_PLL_LOCK_DET_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_D2R_IF_POL_INVERT_EN_PLL_LOCK_DET_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_D2R_IF_POL_INVERT_EN_PLL_LOCK_DET_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_D2R_IF_POL_INVERT_EN_PLL_LOCK_DET_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_D2R_IF_POL_INVERT_EN_PLL_LOCK_DET_ENABLE_EN_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_D2R_IF_POL_INVERT_EN_PLL_LOCK_DET_FORCE_RST_SET_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_D2R_IF_POL_INVERT_EN_PLL_LOCK_DET_FORCE_RST_SET_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_D2R_IF_POL_INVERT_EN_PLL_LOCK_DET_FORCE_RST_SET_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_D2R_IF_POL_INVERT_EN_PLL_LOCK_DET_FORCE_RST_SET_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_D2R_IF_POL_INVERT_EN_PLL_LOCK_DET_FORCE_RST_SET_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_D2R_IF_POL_INVERT_EN_PLL_LOCK_DET_FORCE_RST_SET_EN_MASK 0x2
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_lock_det_enable : 1;
    unsigned int pll_lock_det_force_rst_set : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_lock_d2r_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_D2R_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_D2R_IF_POL_INVERT_EN_ADDR  0x4001d368


/* pll_lock_r2d_if_val register */
/*----------------------*/
/* PLL Lock RF interface : regfile value */
/* pll_lock_out : PLL lock detect signal */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_R2D_IF_VAL_PLL_LOCK_OUT_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_R2D_IF_VAL_PLL_LOCK_OUT_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_lock_out : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_lock_r2d_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_R2D_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_R2D_IF_VAL_DYNAMIC true
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_R2D_IF_VAL_SNAPCLOCK 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_R2D_IF_VAL_ADDR  0x4001d36c


/* pll_lock_r2d_if_pol_invert_en register */
/*----------------------*/
/* PLL Lock RF interface : polarity invert control */
/* pll_lock_out : Polarity invert control for pll_lock_out */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_R2D_IF_POL_INVERT_EN_PLL_LOCK_OUT_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_R2D_IF_POL_INVERT_EN_PLL_LOCK_OUT_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_R2D_IF_POL_INVERT_EN_PLL_LOCK_OUT_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_R2D_IF_POL_INVERT_EN_PLL_LOCK_OUT_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_R2D_IF_POL_INVERT_EN_PLL_LOCK_OUT_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_R2D_IF_POL_INVERT_EN_PLL_LOCK_OUT_EN_MASK 0x1
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_lock_out : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_lock_r2d_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_R2D_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LOCK_R2D_IF_POL_INVERT_EN_ADDR  0x4001d370


/* pll_vco_0_d2r_if_val register */
/*----------------------*/
/* PLL VCO RF Interface : regfile value */
/* pll_vco_comp_enable : Enable signal for peak detector */
/* pll_vco_enable : Enable signal for vco */
/* pll_vco_fctrl_bin_set : Binary cap settings for vco. NXP to detail */
/* pll_vco_comp_amp_set : Vref setting for peak detector VCO. NXP to detail */
/* pll_vco_icore_bin_enable : Enable signal for */
/* pll_vco_vtune_enable : Enable switch vtune */
/* pll_vco_vtail_enable : Enable VCO tail resistor */
/* pll_vco_tx_notrx : VCO settings selector */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_VAL_PLL_VCO_COMP_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_VAL_PLL_VCO_COMP_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_VAL_PLL_VCO_ENABLE_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_VAL_PLL_VCO_ENABLE_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_VAL_PLL_VCO_FCTRL_BIN_SET_MASK 0x003c
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_VAL_PLL_VCO_FCTRL_BIN_SET_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_VAL_PLL_VCO_COMP_AMP_SET_MASK 0x07c0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_VAL_PLL_VCO_COMP_AMP_SET_POS  6
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_VAL_PLL_VCO_ICORE_BIN_ENABLE_MASK 0x0800
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_VAL_PLL_VCO_ICORE_BIN_ENABLE_POS  11
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_VAL_PLL_VCO_VTUNE_ENABLE_MASK 0x1000
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_VAL_PLL_VCO_VTUNE_ENABLE_POS  12
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_VAL_PLL_VCO_VTAIL_ENABLE_MASK 0x2000
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_VAL_PLL_VCO_VTAIL_ENABLE_POS  13
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_VAL_PLL_VCO_TX_NOTRX_MASK 0x4000
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_VAL_PLL_VCO_TX_NOTRX_POS  14
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_vco_comp_enable : 1;
    unsigned int pll_vco_enable : 1;
    unsigned int pll_vco_fctrl_bin_set : 4;
    unsigned int pll_vco_comp_amp_set : 5;
    unsigned int pll_vco_icore_bin_enable : 1;
    unsigned int pll_vco_vtune_enable : 1;
    unsigned int pll_vco_vtail_enable : 1;
    unsigned int pll_vco_tx_notrx : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_vco_0_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_VAL_ADDR  0x4001d374


/* pll_vco_0_d2r_if_src_sel register */
/*----------------------*/
/* PLL VCO RF Interface : source selection */
/* pll_vco_comp_enable : Source selection for pll_vco_comp_enable */
/* pll_vco_enable : Source selection for pll_vco_enable */
/* pll_vco_fctrl_bin_set : Source selection for pll_vco_fctrl_bin_set */
/* pll_vco_comp_amp_set : Source selection for pll_vco_comp_amp_set */
/* pll_vco_tx_notrx : Source selection for pll_vco_tx_notrx */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_SRC_SEL_PLL_VCO_COMP_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_SRC_SEL_PLL_VCO_COMP_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_SRC_SEL_PLL_VCO_COMP_ENABLE_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_SRC_SEL_PLL_VCO_COMP_ENABLE_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_SRC_SEL_PLL_VCO_COMP_ENABLE_CALIBRATION 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_SRC_SEL_PLL_VCO_COMP_ENABLE_CALIBRATION_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_SRC_SEL_PLL_VCO_ENABLE_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_SRC_SEL_PLL_VCO_ENABLE_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_SRC_SEL_PLL_VCO_ENABLE_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_SRC_SEL_PLL_VCO_ENABLE_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_SRC_SEL_PLL_VCO_ENABLE_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_SRC_SEL_PLL_VCO_ENABLE_TMU_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_SRC_SEL_PLL_VCO_FCTRL_BIN_SET_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_SRC_SEL_PLL_VCO_FCTRL_BIN_SET_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_SRC_SEL_PLL_VCO_FCTRL_BIN_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_SRC_SEL_PLL_VCO_FCTRL_BIN_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_SRC_SEL_PLL_VCO_FCTRL_BIN_SET_CALIBRATION 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_SRC_SEL_PLL_VCO_FCTRL_BIN_SET_CALIBRATION_MASK 0x4
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_SRC_SEL_PLL_VCO_COMP_AMP_SET_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_SRC_SEL_PLL_VCO_COMP_AMP_SET_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_SRC_SEL_PLL_VCO_COMP_AMP_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_SRC_SEL_PLL_VCO_COMP_AMP_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_SRC_SEL_PLL_VCO_COMP_AMP_SET_CALIBRATION 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_SRC_SEL_PLL_VCO_COMP_AMP_SET_CALIBRATION_MASK 0x8
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_SRC_SEL_PLL_VCO_TX_NOTRX_MASK 0x0010
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_SRC_SEL_PLL_VCO_TX_NOTRX_POS  4
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_SRC_SEL_PLL_VCO_TX_NOTRX_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_SRC_SEL_PLL_VCO_TX_NOTRX_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_SRC_SEL_PLL_VCO_TX_NOTRX_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_SRC_SEL_PLL_VCO_TX_NOTRX_TMU_MASK 0x10
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_vco_comp_enable : 1;
    unsigned int pll_vco_enable : 1;
    unsigned int pll_vco_fctrl_bin_set : 1;
    unsigned int pll_vco_comp_amp_set : 1;
    unsigned int pll_vco_tx_notrx : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_vco_0_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_SRC_SEL_RST 0x16
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_SRC_SEL_ADDR  0x4001d378


/* pll_vco_0_d2r_if_pol_invert_en register */
/*----------------------*/
/* PLL VCO RF Interface : polarity invert control */
/* pll_vco_comp_enable : Polarity invert control for pll_vco_comp_enable */
/* pll_vco_enable : Polarity invert control for pll_vco_enable */
/* pll_vco_icore_bin_enable : Polarity invert control for pll_vco_icore_bin_enable */
/* pll_vco_vtune_enable : Polarity invert control for pll_vco_vtune_enable */
/* pll_vco_vtail_enable : Polarity invert control for pll_vco_vtail_enable */
/* pll_vco_tx_notrx : Polarity invert control for pll_vco_tx_notrx */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_POL_INVERT_EN_PLL_VCO_COMP_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_POL_INVERT_EN_PLL_VCO_COMP_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_POL_INVERT_EN_PLL_VCO_COMP_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_POL_INVERT_EN_PLL_VCO_COMP_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_POL_INVERT_EN_PLL_VCO_COMP_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_POL_INVERT_EN_PLL_VCO_COMP_ENABLE_EN_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_POL_INVERT_EN_PLL_VCO_ENABLE_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_POL_INVERT_EN_PLL_VCO_ENABLE_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_POL_INVERT_EN_PLL_VCO_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_POL_INVERT_EN_PLL_VCO_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_POL_INVERT_EN_PLL_VCO_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_POL_INVERT_EN_PLL_VCO_ENABLE_EN_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_POL_INVERT_EN_PLL_VCO_ICORE_BIN_ENABLE_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_POL_INVERT_EN_PLL_VCO_ICORE_BIN_ENABLE_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_POL_INVERT_EN_PLL_VCO_ICORE_BIN_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_POL_INVERT_EN_PLL_VCO_ICORE_BIN_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_POL_INVERT_EN_PLL_VCO_ICORE_BIN_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_POL_INVERT_EN_PLL_VCO_ICORE_BIN_ENABLE_EN_MASK 0x4
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_POL_INVERT_EN_PLL_VCO_VTUNE_ENABLE_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_POL_INVERT_EN_PLL_VCO_VTUNE_ENABLE_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_POL_INVERT_EN_PLL_VCO_VTUNE_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_POL_INVERT_EN_PLL_VCO_VTUNE_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_POL_INVERT_EN_PLL_VCO_VTUNE_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_POL_INVERT_EN_PLL_VCO_VTUNE_ENABLE_EN_MASK 0x8
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_POL_INVERT_EN_PLL_VCO_VTAIL_ENABLE_MASK 0x0010
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_POL_INVERT_EN_PLL_VCO_VTAIL_ENABLE_POS  4
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_POL_INVERT_EN_PLL_VCO_VTAIL_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_POL_INVERT_EN_PLL_VCO_VTAIL_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_POL_INVERT_EN_PLL_VCO_VTAIL_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_POL_INVERT_EN_PLL_VCO_VTAIL_ENABLE_EN_MASK 0x10
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_POL_INVERT_EN_PLL_VCO_TX_NOTRX_MASK 0x0020
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_POL_INVERT_EN_PLL_VCO_TX_NOTRX_POS  5
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_POL_INVERT_EN_PLL_VCO_TX_NOTRX_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_POL_INVERT_EN_PLL_VCO_TX_NOTRX_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_POL_INVERT_EN_PLL_VCO_TX_NOTRX_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_POL_INVERT_EN_PLL_VCO_TX_NOTRX_EN_MASK 0x20
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_vco_comp_enable : 1;
    unsigned int pll_vco_enable : 1;
    unsigned int pll_vco_icore_bin_enable : 1;
    unsigned int pll_vco_vtune_enable : 1;
    unsigned int pll_vco_vtail_enable : 1;
    unsigned int pll_vco_tx_notrx : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_vco_0_d2r_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_0_D2R_IF_POL_INVERT_EN_ADDR  0x4001d37c


/* pll_vco_1_d2r_if_val register */
/*----------------------*/
/* PLL VCO RF interface : regfile value */
/* pll_vco_fctrl_therm_set : Thermo cap settings for vco. NXP to detail. */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_1_D2R_IF_VAL_PLL_VCO_FCTRL_THERM_SET_MASK 0x7fff
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_1_D2R_IF_VAL_PLL_VCO_FCTRL_THERM_SET_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_vco_fctrl_therm_set : 15;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_vco_1_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_1_D2R_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_1_D2R_IF_VAL_ADDR  0x4001d380


/* pll_vco_1_d2r_if_src_sel register */
/*----------------------*/
/* PLL VCO RF interface : source selection */
/* pll_vco_fctrl_therm_set : Source selection for pll_vco_fctrl_therm_set */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_1_D2R_IF_SRC_SEL_PLL_VCO_FCTRL_THERM_SET_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_1_D2R_IF_SRC_SEL_PLL_VCO_FCTRL_THERM_SET_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_1_D2R_IF_SRC_SEL_PLL_VCO_FCTRL_THERM_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_1_D2R_IF_SRC_SEL_PLL_VCO_FCTRL_THERM_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_1_D2R_IF_SRC_SEL_PLL_VCO_FCTRL_THERM_SET_CALIBRATION 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_1_D2R_IF_SRC_SEL_PLL_VCO_FCTRL_THERM_SET_CALIBRATION_MASK 0x1
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_vco_fctrl_therm_set : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_vco_1_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_1_D2R_IF_SRC_SEL_RST 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_1_D2R_IF_SRC_SEL_ADDR  0x4001d384


/* pll_vco_curset_d2r_if_val register */
/*----------------------*/
/* PLL VCO curset interface : regfile value */
/* pll_vco_curset_rx : Current settings VCO */
/* pll_vco_curset_tx : Current settings VCO */
/* pll_vco_curset_set : Current settings vco */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_CURSET_D2R_IF_VAL_PLL_VCO_CURSET_RX_MASK 0x001f
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_CURSET_D2R_IF_VAL_PLL_VCO_CURSET_RX_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_CURSET_D2R_IF_VAL_PLL_VCO_CURSET_TX_MASK 0x03e0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_CURSET_D2R_IF_VAL_PLL_VCO_CURSET_TX_POS  5
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_CURSET_D2R_IF_VAL_PLL_VCO_CURSET_SET_MASK 0x7c00
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_CURSET_D2R_IF_VAL_PLL_VCO_CURSET_SET_POS  10
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_vco_curset_rx : 5;
    unsigned int pll_vco_curset_tx : 5;
    unsigned int pll_vco_curset_set : 5;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_vco_curset_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_CURSET_D2R_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_CURSET_D2R_IF_VAL_ADDR  0x4001d388


/* pll_vco_curset_d2r_if_src_sel register */
/*----------------------*/
/* PLL VCO curset Interface : source selection */
/* pll_vco_curset_rx : Source selection for pll_vco_curset_rx */
/* pll_vco_curset_tx : Source selection for pll_vco_curset_tx */
/* pll_vco_curset_set : Source selection for pll_vco_curset_set */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_CURSET_D2R_IF_SRC_SEL_PLL_VCO_CURSET_RX_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_CURSET_D2R_IF_SRC_SEL_PLL_VCO_CURSET_RX_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_CURSET_D2R_IF_SRC_SEL_PLL_VCO_CURSET_RX_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_CURSET_D2R_IF_SRC_SEL_PLL_VCO_CURSET_RX_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_CURSET_D2R_IF_SRC_SEL_PLL_VCO_CURSET_RX_CALIBRATION 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_CURSET_D2R_IF_SRC_SEL_PLL_VCO_CURSET_RX_CALIBRATION_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_CURSET_D2R_IF_SRC_SEL_PLL_VCO_CURSET_TX_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_CURSET_D2R_IF_SRC_SEL_PLL_VCO_CURSET_TX_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_CURSET_D2R_IF_SRC_SEL_PLL_VCO_CURSET_TX_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_CURSET_D2R_IF_SRC_SEL_PLL_VCO_CURSET_TX_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_CURSET_D2R_IF_SRC_SEL_PLL_VCO_CURSET_TX_CALIBRATION 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_CURSET_D2R_IF_SRC_SEL_PLL_VCO_CURSET_TX_CALIBRATION_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_CURSET_D2R_IF_SRC_SEL_PLL_VCO_CURSET_SET_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_CURSET_D2R_IF_SRC_SEL_PLL_VCO_CURSET_SET_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_CURSET_D2R_IF_SRC_SEL_PLL_VCO_CURSET_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_CURSET_D2R_IF_SRC_SEL_PLL_VCO_CURSET_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_CURSET_D2R_IF_SRC_SEL_PLL_VCO_CURSET_SET_CALIBRATION 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_CURSET_D2R_IF_SRC_SEL_PLL_VCO_CURSET_SET_CALIBRATION_MASK 0x4
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_vco_curset_rx : 1;
    unsigned int pll_vco_curset_tx : 1;
    unsigned int pll_vco_curset_set : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_vco_curset_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_CURSET_D2R_IF_SRC_SEL_RST 0x4
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_CURSET_D2R_IF_SRC_SEL_ADDR  0x4001d38c


/* pll_lf_d2r_if_val register */
/*----------------------*/
/* PLL LF RF interface : regfile value */
/* pll_lf_open_set : LF Open */
/* pll_lf_pch_n_set : Precharge settings. 0x0 : disabled. Xxx : enable resistor from supply to Vtune. */
/* pll_lf_pch_p_set : Precharge settings. 0x0 : disabled. Xxx : enable resisotr from supply to Vtune. */
/* pll_lf_lock_boost_enable : Enable signal for boost mode LF */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_VAL_PLL_LF_OPEN_SET_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_VAL_PLL_LF_OPEN_SET_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_VAL_PLL_LF_PCH_N_SET_MASK 0x000e
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_VAL_PLL_LF_PCH_N_SET_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_VAL_PLL_LF_PCH_P_SET_MASK 0x0070
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_VAL_PLL_LF_PCH_P_SET_POS  4
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_VAL_PLL_LF_LOCK_BOOST_ENABLE_MASK 0x0080
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_VAL_PLL_LF_LOCK_BOOST_ENABLE_POS  7
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_lf_open_set : 1;
    unsigned int pll_lf_pch_n_set : 3;
    unsigned int pll_lf_pch_p_set : 3;
    unsigned int pll_lf_lock_boost_enable : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_lf_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_VAL_ADDR  0x4001d390


/* pll_lf_d2r_if_src_sel register */
/*----------------------*/
/* PLL LF RF interface : source selection */
/* pll_lf_open_set : Source selection for pll_lf_open_set */
/* pll_lf_pch_n_set : Source selection for pll_lf_pch_n_set */
/* pll_lf_pch_p_set : Source selection for pll_lf_pch_p_set */
/* pll_lf_lock_boost_enable : Source selection for pll_lf_lock_boost_enable */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_SRC_SEL_PLL_LF_OPEN_SET_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_SRC_SEL_PLL_LF_OPEN_SET_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_SRC_SEL_PLL_LF_OPEN_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_SRC_SEL_PLL_LF_OPEN_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_SRC_SEL_PLL_LF_OPEN_SET_CALIBRATION 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_SRC_SEL_PLL_LF_OPEN_SET_CALIBRATION_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_SRC_SEL_PLL_LF_PCH_N_SET_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_SRC_SEL_PLL_LF_PCH_N_SET_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_SRC_SEL_PLL_LF_PCH_N_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_SRC_SEL_PLL_LF_PCH_N_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_SRC_SEL_PLL_LF_PCH_N_SET_CALIBRATION 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_SRC_SEL_PLL_LF_PCH_N_SET_CALIBRATION_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_SRC_SEL_PLL_LF_PCH_P_SET_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_SRC_SEL_PLL_LF_PCH_P_SET_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_SRC_SEL_PLL_LF_PCH_P_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_SRC_SEL_PLL_LF_PCH_P_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_SRC_SEL_PLL_LF_PCH_P_SET_CALIBRATION 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_SRC_SEL_PLL_LF_PCH_P_SET_CALIBRATION_MASK 0x4
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_SRC_SEL_PLL_LF_LOCK_BOOST_ENABLE_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_SRC_SEL_PLL_LF_LOCK_BOOST_ENABLE_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_SRC_SEL_PLL_LF_LOCK_BOOST_ENABLE_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_SRC_SEL_PLL_LF_LOCK_BOOST_ENABLE_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_SRC_SEL_PLL_LF_LOCK_BOOST_ENABLE_CALIBRATION 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_SRC_SEL_PLL_LF_LOCK_BOOST_ENABLE_CALIBRATION_MASK 0x8
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_lf_open_set : 1;
    unsigned int pll_lf_pch_n_set : 1;
    unsigned int pll_lf_pch_p_set : 1;
    unsigned int pll_lf_lock_boost_enable : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_lf_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_SRC_SEL_RST 0x6
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_SRC_SEL_ADDR  0x4001d394


/* pll_lf_d2r_if_pol_invert_en register */
/*----------------------*/
/* PLL LF RF interface : polarity invert control */
/* pll_lf_open_set : Polarity invert control for pll_lf_open_set */
/* pll_lf_lock_boost_enable : Polarity invert control for pll_lf_lock_boost_enable */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_POL_INVERT_EN_PLL_LF_OPEN_SET_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_POL_INVERT_EN_PLL_LF_OPEN_SET_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_POL_INVERT_EN_PLL_LF_OPEN_SET_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_POL_INVERT_EN_PLL_LF_OPEN_SET_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_POL_INVERT_EN_PLL_LF_OPEN_SET_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_POL_INVERT_EN_PLL_LF_OPEN_SET_EN_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_POL_INVERT_EN_PLL_LF_LOCK_BOOST_ENABLE_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_POL_INVERT_EN_PLL_LF_LOCK_BOOST_ENABLE_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_POL_INVERT_EN_PLL_LF_LOCK_BOOST_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_POL_INVERT_EN_PLL_LF_LOCK_BOOST_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_POL_INVERT_EN_PLL_LF_LOCK_BOOST_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_POL_INVERT_EN_PLL_LF_LOCK_BOOST_ENABLE_EN_MASK 0x2
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_lf_open_set : 1;
    unsigned int pll_lf_lock_boost_enable : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_lf_d2r_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_LF_D2R_IF_POL_INVERT_EN_ADDR  0x4001d398


/* pll_divn_d2r_if_val register */
/*----------------------*/
/* PLL Divider RF interface : regfile value */
/* pll_divn_fo_test_enable : Enable divider N feedback test */
/* pll_divn_set : Settings divider N. N = code in decimal */
/* pll_divn_sdm_pol_set : PLL SDM clock polarity w.r.t. pfd feedback clock */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVN_D2R_IF_VAL_PLL_DIVN_FO_TEST_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVN_D2R_IF_VAL_PLL_DIVN_FO_TEST_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVN_D2R_IF_VAL_PLL_DIVN_SET_MASK 0x00fe
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVN_D2R_IF_VAL_PLL_DIVN_SET_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVN_D2R_IF_VAL_PLL_DIVN_SDM_POL_SET_MASK 0x0100
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVN_D2R_IF_VAL_PLL_DIVN_SDM_POL_SET_POS  8
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_divn_fo_test_enable : 1;
    unsigned int pll_divn_set : 7;
    unsigned int pll_divn_sdm_pol_set : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_divn_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVN_D2R_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVN_D2R_IF_VAL_ADDR  0x4001d39c


/* pll_divn_d2r_if_src_sel register */
/*----------------------*/
/* PLL Divider RF interface : source selection */
/* pll_divn_set : Source selection for pll_divn_set */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVN_D2R_IF_SRC_SEL_PLL_DIVN_SET_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVN_D2R_IF_SRC_SEL_PLL_DIVN_SET_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVN_D2R_IF_SRC_SEL_PLL_DIVN_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVN_D2R_IF_SRC_SEL_PLL_DIVN_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVN_D2R_IF_SRC_SEL_PLL_DIVN_SET_SYNTHESIZER 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVN_D2R_IF_SRC_SEL_PLL_DIVN_SET_SYNTHESIZER_MASK 0x1
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_divn_set : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_divn_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVN_D2R_IF_SRC_SEL_RST 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVN_D2R_IF_SRC_SEL_ADDR  0x4001d3a0


/* pll_divn_d2r_if_pol_invert_en register */
/*----------------------*/
/* PLL Divider RF interface : polarity invert control */
/* pll_divn_fo_test_enable : Polarity invert control for pll_divn_fo_test_enable */
/* pll_divn_sdm_pol_set : Polarity invert control for pll_divn_sdm_pol_set */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVN_D2R_IF_POL_INVERT_EN_PLL_DIVN_FO_TEST_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVN_D2R_IF_POL_INVERT_EN_PLL_DIVN_FO_TEST_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVN_D2R_IF_POL_INVERT_EN_PLL_DIVN_FO_TEST_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVN_D2R_IF_POL_INVERT_EN_PLL_DIVN_FO_TEST_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVN_D2R_IF_POL_INVERT_EN_PLL_DIVN_FO_TEST_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVN_D2R_IF_POL_INVERT_EN_PLL_DIVN_FO_TEST_ENABLE_EN_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVN_D2R_IF_POL_INVERT_EN_PLL_DIVN_SDM_POL_SET_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVN_D2R_IF_POL_INVERT_EN_PLL_DIVN_SDM_POL_SET_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVN_D2R_IF_POL_INVERT_EN_PLL_DIVN_SDM_POL_SET_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVN_D2R_IF_POL_INVERT_EN_PLL_DIVN_SDM_POL_SET_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVN_D2R_IF_POL_INVERT_EN_PLL_DIVN_SDM_POL_SET_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVN_D2R_IF_POL_INVERT_EN_PLL_DIVN_SDM_POL_SET_EN_MASK 0x2
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_divn_fo_test_enable : 1;
    unsigned int pll_divn_sdm_pol_set : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_divn_d2r_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVN_D2R_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVN_D2R_IF_POL_INVERT_EN_ADDR  0x4001d3a4


/* pll_cal_d2r_if_val register */
/*----------------------*/
/* PLL Calibration RF Interface : regfile value */
/* pll_cal_enable : Enable calibration counter */
/* pll_cal_ip_aac_fref_set : AAC calibration reference */
/* pll_cal_ip_aafc_enable : AAFC enable */
/* pll_cal_ip_afc_fref_set : AFC calibration reference */
/* pll_cal_ip_det_fref_set : DET calibration reference */
/* pll_cal_ip_test_enable : Test enable calibration */
/* pll_cal_ip_vco_rst_set : Reset calibration */
/* pll_cal_div_set : Pll cal divset */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_VAL_PLL_CAL_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_VAL_PLL_CAL_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_VAL_PLL_CAL_IP_AAC_FREF_SET_MASK 0x0020
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_VAL_PLL_CAL_IP_AAC_FREF_SET_POS  5
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_VAL_PLL_CAL_IP_AAFC_ENABLE_MASK 0x0040
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_VAL_PLL_CAL_IP_AAFC_ENABLE_POS  6
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_VAL_PLL_CAL_IP_AFC_FREF_SET_MASK 0x0080
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_VAL_PLL_CAL_IP_AFC_FREF_SET_POS  7
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_VAL_PLL_CAL_IP_DET_FREF_SET_MASK 0x0100
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_VAL_PLL_CAL_IP_DET_FREF_SET_POS  8
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_VAL_PLL_CAL_IP_TEST_ENABLE_MASK 0x0200
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_VAL_PLL_CAL_IP_TEST_ENABLE_POS  9
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_VAL_PLL_CAL_IP_VCO_RST_SET_MASK 0x0400
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_VAL_PLL_CAL_IP_VCO_RST_SET_POS  10
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_VAL_PLL_CAL_DIV_SET_MASK 0x7800
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_VAL_PLL_CAL_DIV_SET_POS  11
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_cal_enable : 1;
    unsigned int : 4;
    unsigned int pll_cal_ip_aac_fref_set : 1;
    unsigned int pll_cal_ip_aafc_enable : 1;
    unsigned int pll_cal_ip_afc_fref_set : 1;
    unsigned int pll_cal_ip_det_fref_set : 1;
    unsigned int pll_cal_ip_test_enable : 1;
    unsigned int pll_cal_ip_vco_rst_set : 1;
    unsigned int pll_cal_div_set : 4;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_cal_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_VAL_ADDR  0x4001d3a8


/* pll_cal_d2r_if_src_sel register */
/*----------------------*/
/* PLL calibration RF interface : source selection */
/* pll_cal_enable : Source selection for pll_cal_enable */
/* pll_cal_ip_aac_fref_set : Source selection for pll_cal_ip_aac_fref_set */
/* pll_cal_ip_aafc_enable : Source selection for pll_cal_if_aafc_enable */
/* pll_cal_ip_afc_fref_set : Source selection for pll_cal_ip_afc_fref_set */
/* pll_cal_ip_det_fref_set : Source selection for pll_cal_ip_det_fref_set */
/* pll_cal_ip_vco_rst_set : Source selection for pll_cal_ip_vco_rst_set */
/* pll_cal_div_set : Source selection for pll_cal_div_set */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_PLL_CAL_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_PLL_CAL_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_PLL_CAL_ENABLE_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_PLL_CAL_ENABLE_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_PLL_CAL_ENABLE_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_PLL_CAL_ENABLE_TMU_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_PLL_CAL_IP_AAC_FREF_SET_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_PLL_CAL_IP_AAC_FREF_SET_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_PLL_CAL_IP_AAC_FREF_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_PLL_CAL_IP_AAC_FREF_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_PLL_CAL_IP_AAC_FREF_SET_CALIBRATION 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_PLL_CAL_IP_AAC_FREF_SET_CALIBRATION_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_PLL_CAL_IP_AAFC_ENABLE_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_PLL_CAL_IP_AAFC_ENABLE_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_PLL_CAL_IP_AAFC_ENABLE_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_PLL_CAL_IP_AAFC_ENABLE_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_PLL_CAL_IP_AAFC_ENABLE_CALIBRATION 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_PLL_CAL_IP_AAFC_ENABLE_CALIBRATION_MASK 0x4
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_PLL_CAL_IP_AFC_FREF_SET_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_PLL_CAL_IP_AFC_FREF_SET_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_PLL_CAL_IP_AFC_FREF_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_PLL_CAL_IP_AFC_FREF_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_PLL_CAL_IP_AFC_FREF_SET_CALIBRATION 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_PLL_CAL_IP_AFC_FREF_SET_CALIBRATION_MASK 0x8
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_PLL_CAL_IP_DET_FREF_SET_MASK 0x0010
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_PLL_CAL_IP_DET_FREF_SET_POS  4
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_PLL_CAL_IP_DET_FREF_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_PLL_CAL_IP_DET_FREF_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_PLL_CAL_IP_DET_FREF_SET_CALIBRATION 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_PLL_CAL_IP_DET_FREF_SET_CALIBRATION_MASK 0x10
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_PLL_CAL_IP_VCO_RST_SET_MASK 0x0020
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_PLL_CAL_IP_VCO_RST_SET_POS  5
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_PLL_CAL_IP_VCO_RST_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_PLL_CAL_IP_VCO_RST_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_PLL_CAL_IP_VCO_RST_SET_CALIBRATION 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_PLL_CAL_IP_VCO_RST_SET_CALIBRATION_MASK 0x20
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_PLL_CAL_DIV_SET_MASK 0x0040
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_PLL_CAL_DIV_SET_POS  6
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_PLL_CAL_DIV_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_PLL_CAL_DIV_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_PLL_CAL_DIV_SET_CALIBRATION 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_PLL_CAL_DIV_SET_CALIBRATION_MASK 0x40
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_cal_enable : 1;
    unsigned int pll_cal_ip_aac_fref_set : 1;
    unsigned int pll_cal_ip_aafc_enable : 1;
    unsigned int pll_cal_ip_afc_fref_set : 1;
    unsigned int pll_cal_ip_det_fref_set : 1;
    unsigned int pll_cal_ip_vco_rst_set : 1;
    unsigned int pll_cal_div_set : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_cal_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_RST 0x7f
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_SRC_SEL_ADDR  0x4001d3ac


/* pll_cal_d2r_if_pol_invert_en register */
/*----------------------*/
/* PLL calibration RF interface : polarity invert control */
/* pll_cal_enable : Polarity invert control for pll_cal_enable */
/* pll_cal_ip_aac_fref_set : Polarity invert control for pll_cal_ip_aac_fref_set */
/* pll_cal_ip_aafc_enable : Polarity invert control for pll_cal_ip_aafc_enable */
/* pll_cal_ip_afc_fref_set : Polarity invert control for pll_cal_ip_afc_fref_set */
/* pll_cal_ip_det_fref_set : Polarity invert control for pll_cal_ip_det_fref_set */
/* pll_cal_ip_test_enable : Polarity invert control for pll_cal_ip_test_enable */
/* pll_cal_ip_vco_rst_set : Polarity invert control for pll_cal_ip_vco_rst_set */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_PLL_CAL_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_PLL_CAL_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_PLL_CAL_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_PLL_CAL_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_PLL_CAL_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_PLL_CAL_ENABLE_EN_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_PLL_CAL_IP_AAC_FREF_SET_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_PLL_CAL_IP_AAC_FREF_SET_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_PLL_CAL_IP_AAC_FREF_SET_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_PLL_CAL_IP_AAC_FREF_SET_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_PLL_CAL_IP_AAC_FREF_SET_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_PLL_CAL_IP_AAC_FREF_SET_EN_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_PLL_CAL_IP_AAFC_ENABLE_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_PLL_CAL_IP_AAFC_ENABLE_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_PLL_CAL_IP_AAFC_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_PLL_CAL_IP_AAFC_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_PLL_CAL_IP_AAFC_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_PLL_CAL_IP_AAFC_ENABLE_EN_MASK 0x4
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_PLL_CAL_IP_AFC_FREF_SET_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_PLL_CAL_IP_AFC_FREF_SET_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_PLL_CAL_IP_AFC_FREF_SET_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_PLL_CAL_IP_AFC_FREF_SET_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_PLL_CAL_IP_AFC_FREF_SET_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_PLL_CAL_IP_AFC_FREF_SET_EN_MASK 0x8
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_PLL_CAL_IP_DET_FREF_SET_MASK 0x0010
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_PLL_CAL_IP_DET_FREF_SET_POS  4
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_PLL_CAL_IP_DET_FREF_SET_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_PLL_CAL_IP_DET_FREF_SET_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_PLL_CAL_IP_DET_FREF_SET_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_PLL_CAL_IP_DET_FREF_SET_EN_MASK 0x10
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_PLL_CAL_IP_TEST_ENABLE_MASK 0x0020
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_PLL_CAL_IP_TEST_ENABLE_POS  5
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_PLL_CAL_IP_TEST_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_PLL_CAL_IP_TEST_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_PLL_CAL_IP_TEST_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_PLL_CAL_IP_TEST_ENABLE_EN_MASK 0x20
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_PLL_CAL_IP_VCO_RST_SET_MASK 0x0040
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_PLL_CAL_IP_VCO_RST_SET_POS  6
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_PLL_CAL_IP_VCO_RST_SET_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_PLL_CAL_IP_VCO_RST_SET_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_PLL_CAL_IP_VCO_RST_SET_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_PLL_CAL_IP_VCO_RST_SET_EN_MASK 0x40
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_cal_enable : 1;
    unsigned int pll_cal_ip_aac_fref_set : 1;
    unsigned int pll_cal_ip_aafc_enable : 1;
    unsigned int pll_cal_ip_afc_fref_set : 1;
    unsigned int pll_cal_ip_det_fref_set : 1;
    unsigned int pll_cal_ip_test_enable : 1;
    unsigned int pll_cal_ip_vco_rst_set : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_cal_d2r_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_D2R_IF_POL_INVERT_EN_ADDR  0x4001d3b0


/* pll_cal_0_r2d_if_val register */
/*----------------------*/
/* PLL calibration RF interface : regfile value */
/* pll_cal_op_det_toggle : DET (out of range) toggle */
/* pll_cal_op_det_m : DET (out of range) counter value */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_0_R2D_IF_VAL_PLL_CAL_OP_DET_TOGGLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_0_R2D_IF_VAL_PLL_CAL_OP_DET_TOGGLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_0_R2D_IF_VAL_PLL_CAL_OP_DET_M_MASK 0x03fe
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_0_R2D_IF_VAL_PLL_CAL_OP_DET_M_POS  1
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_cal_op_det_toggle : 1;
    unsigned int pll_cal_op_det_m : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_cal_0_r2d_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_0_R2D_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_0_R2D_IF_VAL_DYNAMIC true
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_0_R2D_IF_VAL_SNAPCLOCK 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_0_R2D_IF_VAL_ADDR  0x4001d3b4


/* pll_cal_0_r2d_if_pol_invert_en register */
/*----------------------*/
/* PLL calibration RF interface : polarity invert control */
/* pll_cal_op_det_toggle : Polarity invert control for pll_cal_op_det_toggle */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_0_R2D_IF_POL_INVERT_EN_PLL_CAL_OP_DET_TOGGLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_0_R2D_IF_POL_INVERT_EN_PLL_CAL_OP_DET_TOGGLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_0_R2D_IF_POL_INVERT_EN_PLL_CAL_OP_DET_TOGGLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_0_R2D_IF_POL_INVERT_EN_PLL_CAL_OP_DET_TOGGLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_0_R2D_IF_POL_INVERT_EN_PLL_CAL_OP_DET_TOGGLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_0_R2D_IF_POL_INVERT_EN_PLL_CAL_OP_DET_TOGGLE_EN_MASK 0x1
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_cal_op_det_toggle : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_cal_0_r2d_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_0_R2D_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_0_R2D_IF_POL_INVERT_EN_ADDR  0x4001d3b8


/* pll_cal_1_r2d_if_val register */
/*----------------------*/
/* PLL calibration RF interface : regfile value */
/* pll_cal_op_afc_m : AFC counter value */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_1_R2D_IF_VAL_PLL_CAL_OP_AFC_M_MASK 0x0fff
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_1_R2D_IF_VAL_PLL_CAL_OP_AFC_M_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_cal_op_afc_m : 12;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_cal_1_r2d_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_1_R2D_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_1_R2D_IF_VAL_DYNAMIC true
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_1_R2D_IF_VAL_SNAPCLOCK 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CAL_1_R2D_IF_VAL_ADDR  0x4001d3bc


/* various_d2r_if_val register */
/*----------------------*/
/* Various RF interface : regfile value */
/* pll_vsw_delay_set : Delay settings switch LF. NXP to detail. */
/* pll_vsw_enable : Enable signal for switch LF */
/* rx_pacal_set : Drives multiplexor at input of I_aaf filter ot select mixer output */
/* xo16m_to_rfp_enable : Enable the 16MHz clock to RFP */
/* rx_iqswap_ipath_set : Invert pn on ipath */
/* rx_iqswap_qpath_set : Invert pn on qpath */
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_VAL_PLL_VSW_DELAY_SET_MASK 0x0003
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_VAL_PLL_VSW_DELAY_SET_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_VAL_PLL_VSW_ENABLE_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_VAL_PLL_VSW_ENABLE_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_VAL_RX_PACAL_SET_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_VAL_RX_PACAL_SET_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_VAL_RX_PACAL_SET_LOW 0
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_VAL_RX_PACAL_SET_LOW_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_VAL_RX_PACAL_SET_HIGH 1
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_VAL_RX_PACAL_SET_HIGH_MASK 0x8
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_VAL_XO16M_TO_RFP_ENABLE_MASK 0x0010
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_VAL_XO16M_TO_RFP_ENABLE_POS  4
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_VAL_RX_IQSWAP_IPATH_SET_MASK 0x0020
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_VAL_RX_IQSWAP_IPATH_SET_POS  5
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_VAL_RX_IQSWAP_QPATH_SET_MASK 0x0040
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_VAL_RX_IQSWAP_QPATH_SET_POS  6
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_vsw_delay_set : 2;
    unsigned int pll_vsw_enable : 1;
    unsigned int rx_pacal_set : 1;
    unsigned int xo16m_to_rfp_enable : 1;
    unsigned int rx_iqswap_ipath_set : 1;
    unsigned int rx_iqswap_qpath_set : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_various_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_VAL_ADDR  0x4001d3c0


/* various_d2r_if_src_sel register */
/*----------------------*/
/* Various RF interface : source selection */
/* pll_vsw_delay_set : Source selection for pll_vsw_delay */
/* pll_vsw_enable : Source selection for pll_vsw_enable */
/* rx_pacal_set : Source selection for rx_pacal_set */
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_SRC_SEL_PLL_VSW_DELAY_SET_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_SRC_SEL_PLL_VSW_DELAY_SET_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_SRC_SEL_PLL_VSW_DELAY_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_SRC_SEL_PLL_VSW_DELAY_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_SRC_SEL_PLL_VSW_DELAY_SET_CALIBRATION 1
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_SRC_SEL_PLL_VSW_DELAY_SET_CALIBRATION_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_SRC_SEL_PLL_VSW_ENABLE_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_SRC_SEL_PLL_VSW_ENABLE_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_SRC_SEL_PLL_VSW_ENABLE_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_SRC_SEL_PLL_VSW_ENABLE_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_SRC_SEL_PLL_VSW_ENABLE_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_SRC_SEL_PLL_VSW_ENABLE_TMU_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_SRC_SEL_RX_PACAL_SET_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_SRC_SEL_RX_PACAL_SET_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_SRC_SEL_RX_PACAL_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_SRC_SEL_RX_PACAL_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_SRC_SEL_RX_PACAL_SET_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_SRC_SEL_RX_PACAL_SET_TMU_MASK 0x4
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_vsw_delay_set : 1;
    unsigned int pll_vsw_enable : 1;
    unsigned int rx_pacal_set : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_various_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_SRC_SEL_RST 0x6
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_SRC_SEL_ADDR  0x4001d3c4


/* various_d2r_if_pol_invert_en register */
/*----------------------*/
/* Various RF interface : polarity invert control */
/* pll_vsw_enable : Polarity invert control for pll_vsw_enable */
/* rx_pacal_set : Polarity invert control for rx_pacal_set */
/* xo16m_to_rfp_enable : Polarity invert control for xo16m_to_rfp_enable */
/* rx_iqswap_ipath_set : Polarity invert control for rx_iqswap_ipath_set */
/* rx_iqswap_qpath_set : Polarity invert control for rx_iqswap_qpath_set */
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_POL_INVERT_EN_PLL_VSW_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_POL_INVERT_EN_PLL_VSW_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_POL_INVERT_EN_PLL_VSW_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_POL_INVERT_EN_PLL_VSW_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_POL_INVERT_EN_PLL_VSW_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_POL_INVERT_EN_PLL_VSW_ENABLE_EN_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_POL_INVERT_EN_RX_PACAL_SET_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_POL_INVERT_EN_RX_PACAL_SET_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_POL_INVERT_EN_RX_PACAL_SET_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_POL_INVERT_EN_RX_PACAL_SET_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_POL_INVERT_EN_RX_PACAL_SET_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_POL_INVERT_EN_RX_PACAL_SET_EN_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_POL_INVERT_EN_XO16M_TO_RFP_ENABLE_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_POL_INVERT_EN_XO16M_TO_RFP_ENABLE_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_POL_INVERT_EN_XO16M_TO_RFP_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_POL_INVERT_EN_XO16M_TO_RFP_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_POL_INVERT_EN_XO16M_TO_RFP_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_POL_INVERT_EN_XO16M_TO_RFP_ENABLE_EN_MASK 0x4
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_POL_INVERT_EN_RX_IQSWAP_IPATH_SET_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_POL_INVERT_EN_RX_IQSWAP_IPATH_SET_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_POL_INVERT_EN_RX_IQSWAP_IPATH_SET_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_POL_INVERT_EN_RX_IQSWAP_IPATH_SET_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_POL_INVERT_EN_RX_IQSWAP_IPATH_SET_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_POL_INVERT_EN_RX_IQSWAP_IPATH_SET_EN_MASK 0x8
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_POL_INVERT_EN_RX_IQSWAP_QPATH_SET_MASK 0x0010
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_POL_INVERT_EN_RX_IQSWAP_QPATH_SET_POS  4
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_POL_INVERT_EN_RX_IQSWAP_QPATH_SET_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_POL_INVERT_EN_RX_IQSWAP_QPATH_SET_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_POL_INVERT_EN_RX_IQSWAP_QPATH_SET_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_POL_INVERT_EN_RX_IQSWAP_QPATH_SET_EN_MASK 0x10
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_vsw_enable : 1;
    unsigned int rx_pacal_set : 1;
    unsigned int xo16m_to_rfp_enable : 1;
    unsigned int rx_iqswap_ipath_set : 1;
    unsigned int rx_iqswap_qpath_set : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_various_d2r_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_VARIOUS_D2R_IF_POL_INVERT_EN_ADDR  0x4001d3c8


/* radio_ctrl_d2r_if_val register */
/*----------------------*/
/* Radio Control RF interface : regfile value */
/* ref_div2_enable : Reference divider control */
#define EXTAPB_REGFILE_TRANSCEIVER_RADIO_CTRL_D2R_IF_VAL_REF_DIV2_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_RADIO_CTRL_D2R_IF_VAL_REF_DIV2_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_RADIO_CTRL_D2R_IF_VAL_REF_DIV2_ENABLE_LOW 0
#define EXTAPB_REGFILE_TRANSCEIVER_RADIO_CTRL_D2R_IF_VAL_REF_DIV2_ENABLE_LOW_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_RADIO_CTRL_D2R_IF_VAL_REF_DIV2_ENABLE_HIGH 1
#define EXTAPB_REGFILE_TRANSCEIVER_RADIO_CTRL_D2R_IF_VAL_REF_DIV2_ENABLE_HIGH_MASK 0x1
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int ref_div2_enable : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_radio_ctrl_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_RADIO_CTRL_D2R_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_RADIO_CTRL_D2R_IF_VAL_ADDR  0x4001d3cc


/* r_rc_cal_d2r_if_val register */
/*----------------------*/
/* R and RC Calibration RF interface : regfile value */
/* rx_r_cal_enable : R calibration enable */
/* rx_rccal_enable : RC calibration enable */
/* rx_r_cal_trimr_halflsb_set : R cal 1 percent resistance control bit. */
/* rx_rccal_trig : RC transient release trigger */
/* trimr_set : R Calibration trim value */
/* trimc_set : RC calibration trim value */
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_VAL_RX_R_CAL_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_VAL_RX_R_CAL_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_VAL_RX_R_CAL_ENABLE_LOW 0
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_VAL_RX_R_CAL_ENABLE_LOW_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_VAL_RX_R_CAL_ENABLE_HIGH 1
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_VAL_RX_R_CAL_ENABLE_HIGH_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_VAL_RX_RCCAL_ENABLE_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_VAL_RX_RCCAL_ENABLE_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_VAL_RX_RCCAL_ENABLE_LOW 0
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_VAL_RX_RCCAL_ENABLE_LOW_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_VAL_RX_RCCAL_ENABLE_HIGH 1
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_VAL_RX_RCCAL_ENABLE_HIGH_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_VAL_RX_R_CAL_TRIMR_HALFLSB_SET_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_VAL_RX_R_CAL_TRIMR_HALFLSB_SET_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_VAL_RX_RCCAL_TRIG_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_VAL_RX_RCCAL_TRIG_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_VAL_RX_RCCAL_TRIG_LOW 0
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_VAL_RX_RCCAL_TRIG_LOW_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_VAL_RX_RCCAL_TRIG_HIGH 1
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_VAL_RX_RCCAL_TRIG_HIGH_MASK 0x8
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_VAL_TRIMR_SET_MASK 0x01f0
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_VAL_TRIMR_SET_POS  4
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_VAL_TRIMC_SET_MASK 0x0e00
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_VAL_TRIMC_SET_POS  9
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rx_r_cal_enable : 1;
    unsigned int rx_rccal_enable : 1;
    unsigned int rx_r_cal_trimr_halflsb_set : 1;
    unsigned int rx_rccal_trig : 1;
    unsigned int trimr_set : 5;
    unsigned int trimc_set : 3;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_r_rc_cal_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_VAL_RST 0x6a0
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_VAL_ADDR  0x4001d3d0


/* r_rc_cal_d2r_if_src_sel register */
/*----------------------*/
/* R and RC Calibration RF interface : source selection */
/* rx_r_cal_enable : Source selection for rx_r_cal_enable */
/* rx_rccal_enable : Source selection for rx_rccal_enable */
/* rx_r_cal_trimr_halflsb_set : Source selection for rx_r_cal_trimr_halflsb_set */
/* rx_rccal_trig : Source selection for rx_rccal_trig */
/* trimr_set : Source selection for rx_trimr_set */
/* trimc_set : Source selection for rx_trimc_set */
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_SRC_SEL_RX_R_CAL_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_SRC_SEL_RX_R_CAL_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_SRC_SEL_RX_R_CAL_ENABLE_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_SRC_SEL_RX_R_CAL_ENABLE_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_SRC_SEL_RX_R_CAL_ENABLE_CALIBRATION 1
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_SRC_SEL_RX_R_CAL_ENABLE_CALIBRATION_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_SRC_SEL_RX_RCCAL_ENABLE_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_SRC_SEL_RX_RCCAL_ENABLE_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_SRC_SEL_RX_RCCAL_ENABLE_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_SRC_SEL_RX_RCCAL_ENABLE_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_SRC_SEL_RX_RCCAL_ENABLE_CALIBRATION 1
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_SRC_SEL_RX_RCCAL_ENABLE_CALIBRATION_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_SRC_SEL_RX_R_CAL_TRIMR_HALFLSB_SET_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_SRC_SEL_RX_R_CAL_TRIMR_HALFLSB_SET_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_SRC_SEL_RX_R_CAL_TRIMR_HALFLSB_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_SRC_SEL_RX_R_CAL_TRIMR_HALFLSB_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_SRC_SEL_RX_R_CAL_TRIMR_HALFLSB_SET_CALIBRATION 1
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_SRC_SEL_RX_R_CAL_TRIMR_HALFLSB_SET_CALIBRATION_MASK 0x4
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_SRC_SEL_RX_RCCAL_TRIG_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_SRC_SEL_RX_RCCAL_TRIG_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_SRC_SEL_RX_RCCAL_TRIG_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_SRC_SEL_RX_RCCAL_TRIG_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_SRC_SEL_RX_RCCAL_TRIG_CALIBRATION 1
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_SRC_SEL_RX_RCCAL_TRIG_CALIBRATION_MASK 0x8
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_SRC_SEL_TRIMR_SET_MASK 0x0010
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_SRC_SEL_TRIMR_SET_POS  4
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_SRC_SEL_TRIMR_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_SRC_SEL_TRIMR_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_SRC_SEL_TRIMR_SET_CALIBRATION 1
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_SRC_SEL_TRIMR_SET_CALIBRATION_MASK 0x10
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_SRC_SEL_TRIMC_SET_MASK 0x0020
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_SRC_SEL_TRIMC_SET_POS  5
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_SRC_SEL_TRIMC_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_SRC_SEL_TRIMC_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_SRC_SEL_TRIMC_SET_CALIBRATION 1
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_SRC_SEL_TRIMC_SET_CALIBRATION_MASK 0x20
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rx_r_cal_enable : 1;
    unsigned int rx_rccal_enable : 1;
    unsigned int rx_r_cal_trimr_halflsb_set : 1;
    unsigned int rx_rccal_trig : 1;
    unsigned int trimr_set : 1;
    unsigned int trimc_set : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_r_rc_cal_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_SRC_SEL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_SRC_SEL_ADDR  0x4001d3d4


/* r_rc_cal_d2r_if_pol_invert_en register */
/*----------------------*/
/* R and RC Calibration RF interface : polarity invert control */
/* rx_r_cal_enable : Polarity invert control for rx_r_cal_enable */
/* rx_rccal_enable : Polarity invert control for rx_rccal_enable */
/* rx_r_cal_trimr_halflsb_set : Polarity invert control for rx_rx_cal_trimr_halflsb_set */
/* rx_rccal_trig : Polarity invert control for rx_rccal_trig */
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_POL_INVERT_EN_RX_R_CAL_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_POL_INVERT_EN_RX_R_CAL_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_POL_INVERT_EN_RX_R_CAL_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_POL_INVERT_EN_RX_R_CAL_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_POL_INVERT_EN_RX_R_CAL_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_POL_INVERT_EN_RX_R_CAL_ENABLE_EN_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_POL_INVERT_EN_RX_RCCAL_ENABLE_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_POL_INVERT_EN_RX_RCCAL_ENABLE_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_POL_INVERT_EN_RX_RCCAL_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_POL_INVERT_EN_RX_RCCAL_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_POL_INVERT_EN_RX_RCCAL_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_POL_INVERT_EN_RX_RCCAL_ENABLE_EN_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_POL_INVERT_EN_RX_R_CAL_TRIMR_HALFLSB_SET_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_POL_INVERT_EN_RX_R_CAL_TRIMR_HALFLSB_SET_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_POL_INVERT_EN_RX_R_CAL_TRIMR_HALFLSB_SET_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_POL_INVERT_EN_RX_R_CAL_TRIMR_HALFLSB_SET_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_POL_INVERT_EN_RX_R_CAL_TRIMR_HALFLSB_SET_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_POL_INVERT_EN_RX_R_CAL_TRIMR_HALFLSB_SET_EN_MASK 0x4
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_POL_INVERT_EN_RX_RCCAL_TRIG_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_POL_INVERT_EN_RX_RCCAL_TRIG_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_POL_INVERT_EN_RX_RCCAL_TRIG_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_POL_INVERT_EN_RX_RCCAL_TRIG_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_POL_INVERT_EN_RX_RCCAL_TRIG_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_POL_INVERT_EN_RX_RCCAL_TRIG_EN_MASK 0x8
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rx_r_cal_enable : 1;
    unsigned int rx_rccal_enable : 1;
    unsigned int rx_r_cal_trimr_halflsb_set : 1;
    unsigned int rx_rccal_trig : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_r_rc_cal_d2r_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_D2R_IF_POL_INVERT_EN_ADDR  0x4001d3d8


/* r_rc_cal_r2d_if_val register */
/*----------------------*/
/* R and RC calibration RF interface : regfile value */
/* rx_r_cal_fb : R cal buffered comparator output (0.8V) */
/* rx_rccal_fb : RC Cal buffere comparator output (0.8V) */
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_R2D_IF_VAL_RX_R_CAL_FB_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_R2D_IF_VAL_RX_R_CAL_FB_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_R2D_IF_VAL_RX_RCCAL_FB_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_R2D_IF_VAL_RX_RCCAL_FB_POS  1
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rx_r_cal_fb : 1;
    unsigned int rx_rccal_fb : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_r_rc_cal_r2d_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_R2D_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_R2D_IF_VAL_DYNAMIC true
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_R2D_IF_VAL_SNAPCLOCK 0
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_R2D_IF_VAL_ADDR  0x4001d3dc


/* r_rc_cal_r2d_if_pol_invert_en register */
/*----------------------*/
/* R and RC Calibration RF interface : polarity invert control */
/* rx_r_cal_fb : Polarity invert control for rx_r_cal_fb */
/* rx_rccal_fb : Polarity invert contro for rx_rccal_fb */
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_R2D_IF_POL_INVERT_EN_RX_R_CAL_FB_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_R2D_IF_POL_INVERT_EN_RX_R_CAL_FB_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_R2D_IF_POL_INVERT_EN_RX_R_CAL_FB_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_R2D_IF_POL_INVERT_EN_RX_R_CAL_FB_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_R2D_IF_POL_INVERT_EN_RX_R_CAL_FB_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_R2D_IF_POL_INVERT_EN_RX_R_CAL_FB_EN_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_R2D_IF_POL_INVERT_EN_RX_RCCAL_FB_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_R2D_IF_POL_INVERT_EN_RX_RCCAL_FB_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_R2D_IF_POL_INVERT_EN_RX_RCCAL_FB_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_R2D_IF_POL_INVERT_EN_RX_RCCAL_FB_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_R2D_IF_POL_INVERT_EN_RX_RCCAL_FB_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_R2D_IF_POL_INVERT_EN_RX_RCCAL_FB_EN_MASK 0x2
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rx_r_cal_fb : 1;
    unsigned int rx_rccal_fb : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_r_rc_cal_r2d_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_R2D_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_R_RC_CAL_R2D_IF_POL_INVERT_EN_ADDR  0x4001d3e0


/* dcoff_d2r_if_val register */
/*----------------------*/
/* DC offset RF interface : regfile value */
/* rx_dcoff_i_enable : DC Offset enable I channel */
/* rx_dcoff_q_enable : DC Offset enable Q channel */
/* rx_dcoff_i_set : Programmable offset current control word 4-bits. Positive offset creates negative voltage shift. */
/* rx_dcoff_q_set : Programmable offset current control word 4-bits. Positive offset creates negative voltage shift. */
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_VAL_RX_DCOFF_I_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_VAL_RX_DCOFF_I_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_VAL_RX_DCOFF_I_ENABLE_LOW 0
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_VAL_RX_DCOFF_I_ENABLE_LOW_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_VAL_RX_DCOFF_I_ENABLE_HIGH 1
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_VAL_RX_DCOFF_I_ENABLE_HIGH_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_VAL_RX_DCOFF_Q_ENABLE_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_VAL_RX_DCOFF_Q_ENABLE_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_VAL_RX_DCOFF_Q_ENABLE_LOW 0
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_VAL_RX_DCOFF_Q_ENABLE_LOW_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_VAL_RX_DCOFF_Q_ENABLE_HIGH 1
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_VAL_RX_DCOFF_Q_ENABLE_HIGH_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_VAL_RX_DCOFF_I_SET_MASK 0x003c
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_VAL_RX_DCOFF_I_SET_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_VAL_RX_DCOFF_Q_SET_MASK 0x03c0
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_VAL_RX_DCOFF_Q_SET_POS  6
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rx_dcoff_i_enable : 1;
    unsigned int rx_dcoff_q_enable : 1;
    unsigned int rx_dcoff_i_set : 4;
    unsigned int rx_dcoff_q_set : 4;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_dcoff_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_VAL_ADDR  0x4001d3e4


/* dcoff_d2r_if_src_sel register */
/*----------------------*/
/* DC Offset RF interface : source selection */
/* rx_dcoff_i_enable : Source selection for rx_dcoff_i_enable */
/* rx_dcoff_q_enable : Source selection for rx_dcoff_q_enable */
/* rx_dcoff_i_set : Source selection for rx_dcoff_i_set */
/* rx_dcoff_q_set : Source selection for rx_dcoff_q_set */
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_SRC_SEL_RX_DCOFF_I_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_SRC_SEL_RX_DCOFF_I_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_SRC_SEL_RX_DCOFF_I_ENABLE_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_SRC_SEL_RX_DCOFF_I_ENABLE_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_SRC_SEL_RX_DCOFF_I_ENABLE_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_SRC_SEL_RX_DCOFF_I_ENABLE_TMU_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_SRC_SEL_RX_DCOFF_Q_ENABLE_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_SRC_SEL_RX_DCOFF_Q_ENABLE_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_SRC_SEL_RX_DCOFF_Q_ENABLE_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_SRC_SEL_RX_DCOFF_Q_ENABLE_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_SRC_SEL_RX_DCOFF_Q_ENABLE_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_SRC_SEL_RX_DCOFF_Q_ENABLE_TMU_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_SRC_SEL_RX_DCOFF_I_SET_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_SRC_SEL_RX_DCOFF_I_SET_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_SRC_SEL_RX_DCOFF_I_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_SRC_SEL_RX_DCOFF_I_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_SRC_SEL_RX_DCOFF_I_SET_CALIBRATION 1
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_SRC_SEL_RX_DCOFF_I_SET_CALIBRATION_MASK 0x4
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_SRC_SEL_RX_DCOFF_Q_SET_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_SRC_SEL_RX_DCOFF_Q_SET_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_SRC_SEL_RX_DCOFF_Q_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_SRC_SEL_RX_DCOFF_Q_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_SRC_SEL_RX_DCOFF_Q_SET_CALIBRATION 1
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_SRC_SEL_RX_DCOFF_Q_SET_CALIBRATION_MASK 0x8
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rx_dcoff_i_enable : 1;
    unsigned int rx_dcoff_q_enable : 1;
    unsigned int rx_dcoff_i_set : 1;
    unsigned int rx_dcoff_q_set : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_dcoff_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_SRC_SEL_RST 0x3
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_SRC_SEL_ADDR  0x4001d3e8


/* dcoff_d2r_if_pol_invert_en register */
/*----------------------*/
/* DC Offset RF interface : polarity invert control */
/* rx_dcoff_i_enable : Polarity invert control for rx_dcoff_i_enable */
/* rx_dcoff_q_enable : Polarity invert control for rx_dcoff_q_enable */
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_POL_INVERT_EN_RX_DCOFF_I_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_POL_INVERT_EN_RX_DCOFF_I_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_POL_INVERT_EN_RX_DCOFF_I_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_POL_INVERT_EN_RX_DCOFF_I_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_POL_INVERT_EN_RX_DCOFF_I_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_POL_INVERT_EN_RX_DCOFF_I_ENABLE_EN_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_POL_INVERT_EN_RX_DCOFF_Q_ENABLE_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_POL_INVERT_EN_RX_DCOFF_Q_ENABLE_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_POL_INVERT_EN_RX_DCOFF_Q_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_POL_INVERT_EN_RX_DCOFF_Q_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_POL_INVERT_EN_RX_DCOFF_Q_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_POL_INVERT_EN_RX_DCOFF_Q_ENABLE_EN_MASK 0x2
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rx_dcoff_i_enable : 1;
    unsigned int rx_dcoff_q_enable : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_dcoff_d2r_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_DCOFF_D2R_IF_POL_INVERT_EN_ADDR  0x4001d3ec


/* dummy_output_d2r_if_val register */
/*----------------------*/
/* Reserved outputs RF interface : regfile value */
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
/* dummy_output : Reserved outputs */
#define EXTAPB_REGFILE_TRANSCEIVER_DUMMY_OUTPUT_D2R_IF_VAL_DUMMY_OUTPUT_MASK 0xffff
#define EXTAPB_REGFILE_TRANSCEIVER_DUMMY_OUTPUT_D2R_IF_VAL_DUMMY_OUTPUT_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int dummy_output : 16;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_dummy_output_d2r_if_val;
#else
/* pll_lf_rlf2_set_1v1_set : Programmable Post Filter cut-off frequency (ES1 last minute change) - Allows Trade-Off Between PLL Phase Margin and Spurs ans SDM Noise Rejection - Trimm the Rlf2 resistor value of this RC Low-pass filter (constant 4.81pF capacitor value) Rlf2 = 21k + 21k * rlf2_set<0> + 42k * rlf2_set<1> with rlf2_set<1:0>=0 default */
/* rx_dcoffset_dac_dis_1v1_set : DC-offset compensation DAC disabling (ES2 change) - 0: DC-offset compensation DAC enabled (default) -1: DC-offset compensation DAC disabled */
/* pll_xoflag_dcy_1v1_set : Selection of the XO flag input triggering duty cycle range (ES2 change) - 0x01 (default): [0.25, 0.75] duty cycle range for flag output rising edge, [0.17, 0.83] duty cycle range for flag output falling edge. */
/* vco_gain_adj : Coarse trimming of the VCO gain in analog domain (ES2 change) 0x00: Nominal value (default), 0x01: +30%, 0x11: -30% */
/* pre_const_len_tie : drives the bit [7:5] of the setting tx_datapath.pre_const_len, since they are not driven by the original register now.(expected to be set to 0) */
/* ll_agc_rssi_ready_ignore : When set AGC_RSSI_READY is ignored during link layer state machine radio switch off */
/* ad_double_zero_detect : Antenna diversity false ?0? symbols detection improvement enable - 0: Antenna switching stopped after one ?0? symbol detected - 1: Antenna switching stopped after two ?0? symbols detected */
/* ad_timer_only : disable antenna diversity rssi_valid - 0: Switching will be based on rssi_valid signal [ES2 behaviour] - 1: Switching will be based on a timer only */
/* g1_grp_forced : Radio group G1 is forced on when this bit is set */
/* g2_grp_forced : Radio group G2 is forced on when this bit is set. */
/* pll_grp_forced : Radio group PLL is forced on when this bit is set. */
#define EXTAPB_REGFILE_TRANSCEIVER_DUMMY_OUTPUT_D2R_IF_VAL_PLL_LF_RLF2_SET_1V1_SET_MASK 0x0003
#define EXTAPB_REGFILE_TRANSCEIVER_DUMMY_OUTPUT_D2R_IF_VAL_PLL_LF_RLF2_SET_1V1_SET_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_DUMMY_OUTPUT_D2R_IF_VAL_RX_DCOFFSET_DAC_DIS_1V1_SET_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_DUMMY_OUTPUT_D2R_IF_VAL_RX_DCOFFSET_DAC_DIS_1V1_SET_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_DUMMY_OUTPUT_D2R_IF_VAL_PLL_XOFLAG_DCY_1V1_SET_MASK 0x0018
#define EXTAPB_REGFILE_TRANSCEIVER_DUMMY_OUTPUT_D2R_IF_VAL_PLL_XOFLAG_DCY_1V1_SET_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_DUMMY_OUTPUT_D2R_IF_VAL_VCO_GAIN_ADJ_MASK 0x0060
#define EXTAPB_REGFILE_TRANSCEIVER_DUMMY_OUTPUT_D2R_IF_VAL_VCO_GAIN_ADJ_POS  5
#define EXTAPB_REGFILE_TRANSCEIVER_DUMMY_OUTPUT_D2R_IF_VAL_PRE_CONST_LEN_TIE_MASK 0x0100
#define EXTAPB_REGFILE_TRANSCEIVER_DUMMY_OUTPUT_D2R_IF_VAL_PRE_CONST_LEN_TIE_POS  8
#define EXTAPB_REGFILE_TRANSCEIVER_DUMMY_OUTPUT_D2R_IF_VAL_LL_AGC_RSSI_READY_IGNORE_MASK 0x0200
#define EXTAPB_REGFILE_TRANSCEIVER_DUMMY_OUTPUT_D2R_IF_VAL_LL_AGC_RSSI_READY_IGNORE_POS  9
#define EXTAPB_REGFILE_TRANSCEIVER_DUMMY_OUTPUT_D2R_IF_VAL_AD_DOUBLE_ZERO_DETECT_MASK 0x0400
#define EXTAPB_REGFILE_TRANSCEIVER_DUMMY_OUTPUT_D2R_IF_VAL_AD_DOUBLE_ZERO_DETECT_POS  10
#define EXTAPB_REGFILE_TRANSCEIVER_DUMMY_OUTPUT_D2R_IF_VAL_AD_TIMER_ONLY_MASK 0x0800
#define EXTAPB_REGFILE_TRANSCEIVER_DUMMY_OUTPUT_D2R_IF_VAL_AD_TIMER_ONLY_POS  11
#define EXTAPB_REGFILE_TRANSCEIVER_DUMMY_OUTPUT_D2R_IF_VAL_G1_GRP_FORCED_MASK 0x1000
#define EXTAPB_REGFILE_TRANSCEIVER_DUMMY_OUTPUT_D2R_IF_VAL_G1_GRP_FORCED_POS  12
#define EXTAPB_REGFILE_TRANSCEIVER_DUMMY_OUTPUT_D2R_IF_VAL_G2_GRP_FORCED_MASK 0x2000
#define EXTAPB_REGFILE_TRANSCEIVER_DUMMY_OUTPUT_D2R_IF_VAL_G2_GRP_FORCED_POS  13
#define EXTAPB_REGFILE_TRANSCEIVER_DUMMY_OUTPUT_D2R_IF_VAL_PLL_GRP_FORCED_MASK 0x4000
#define EXTAPB_REGFILE_TRANSCEIVER_DUMMY_OUTPUT_D2R_IF_VAL_PLL_GRP_FORCED_POS  14
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_lf_rlf2_set_1v1_set : 2;
    unsigned int rx_dcoffset_dac_dis_1v1_set : 1;
    unsigned int pll_xoflag_dcy_1v1_set : 2;
    unsigned int vco_gain_adj : 2;
    unsigned int : 1;
    unsigned int pre_const_len_tie : 1;
    unsigned int ll_agc_rssi_ready_ignore : 1;
    unsigned int ad_double_zero_detect : 1;
    unsigned int ad_timer_only : 1;
    unsigned int g1_grp_forced : 1;
    unsigned int g2_grp_forced : 1;
    unsigned int pll_grp_forced : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_dummy_output_d2r_if_val;
#endif
#define EXTAPB_REGFILE_TRANSCEIVER_DUMMY_OUTPUT_D2R_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_DUMMY_OUTPUT_D2R_IF_VAL_ADDR  0x4001d3f0


/* dummy_input_r2d_if_val register */
/*----------------------*/
/* Reserved inputs RF interface : regfile value */
/* dummy_input : Reserved inputs */
#define EXTAPB_REGFILE_TRANSCEIVER_DUMMY_INPUT_R2D_IF_VAL_DUMMY_INPUT_MASK 0x00ff
#define EXTAPB_REGFILE_TRANSCEIVER_DUMMY_INPUT_R2D_IF_VAL_DUMMY_INPUT_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int dummy_input : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_dummy_input_r2d_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_DUMMY_INPUT_R2D_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_DUMMY_INPUT_R2D_IF_VAL_DYNAMIC true
#define EXTAPB_REGFILE_TRANSCEIVER_DUMMY_INPUT_R2D_IF_VAL_SNAPCLOCK 0
#define EXTAPB_REGFILE_TRANSCEIVER_DUMMY_INPUT_R2D_IF_VAL_ADDR  0x4001d3f4


/* tmu_grp_g_d2r_if_val register */
/*----------------------*/
/* TMU Global Power Sequencing RF interface : regfile value */
/* tmu_grp_g1_sig_0_out : TMU Global Power Sequencing G1 wire 0 value */
/* tmu_grp_g1_sig_1_out : TMU Global Power Sequencing G1 wire 1 value */
/* tmu_grp_g1_sig_2_out : TMU Global Power Sequencing G1 wire 2 value */
/* tmu_grp_g1_sig_3_out : TMU Global Power Sequencing G1 wire 3 value */
/* tmu_grp_g2_sig_0_out : TMU Global Power Sequencing G2 wire 0 value */
/* tmu_grp_g2_sig_1_out : TMU Global Power Sequencing G2 wire 1 value */
/* tmu_grp_g2_sig_2_out : TMU Global Power Sequencing G2 wire 2 value */
/* tmu_grp_g2_sig_3_out : TMU Global Power Sequencing G2 wire 3 value */
/* tmu_grp_pll_sig_out : TMU Global Power Sequencing PLL wire value */
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G1_SIG_0_OUT_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G1_SIG_0_OUT_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G1_SIG_0_OUT_LOW 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G1_SIG_0_OUT_LOW_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G1_SIG_0_OUT_HIGH 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G1_SIG_0_OUT_HIGH_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G1_SIG_1_OUT_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G1_SIG_1_OUT_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G1_SIG_1_OUT_LOW 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G1_SIG_1_OUT_LOW_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G1_SIG_1_OUT_HIGH 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G1_SIG_1_OUT_HIGH_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G1_SIG_2_OUT_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G1_SIG_2_OUT_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G1_SIG_2_OUT_LOW 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G1_SIG_2_OUT_LOW_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G1_SIG_2_OUT_HIGH 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G1_SIG_2_OUT_HIGH_MASK 0x4
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G1_SIG_3_OUT_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G1_SIG_3_OUT_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G1_SIG_3_OUT_LOW 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G1_SIG_3_OUT_LOW_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G1_SIG_3_OUT_HIGH 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G1_SIG_3_OUT_HIGH_MASK 0x8
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G2_SIG_0_OUT_MASK 0x0010
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G2_SIG_0_OUT_POS  4
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G2_SIG_0_OUT_LOW 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G2_SIG_0_OUT_LOW_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G2_SIG_0_OUT_HIGH 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G2_SIG_0_OUT_HIGH_MASK 0x10
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G2_SIG_1_OUT_MASK 0x0020
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G2_SIG_1_OUT_POS  5
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G2_SIG_1_OUT_LOW 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G2_SIG_1_OUT_LOW_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G2_SIG_1_OUT_HIGH 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G2_SIG_1_OUT_HIGH_MASK 0x20
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G2_SIG_2_OUT_MASK 0x0040
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G2_SIG_2_OUT_POS  6
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G2_SIG_2_OUT_LOW 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G2_SIG_2_OUT_LOW_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G2_SIG_2_OUT_HIGH 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G2_SIG_2_OUT_HIGH_MASK 0x40
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G2_SIG_3_OUT_MASK 0x0080
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G2_SIG_3_OUT_POS  7
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G2_SIG_3_OUT_LOW 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G2_SIG_3_OUT_LOW_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G2_SIG_3_OUT_HIGH 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_G2_SIG_3_OUT_HIGH_MASK 0x80
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_PLL_SIG_OUT_MASK 0x0100
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_PLL_SIG_OUT_POS  8
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_PLL_SIG_OUT_LOW 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_PLL_SIG_OUT_LOW_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_PLL_SIG_OUT_HIGH 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_TMU_GRP_PLL_SIG_OUT_HIGH_MASK 0x100
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int tmu_grp_g1_sig_0_out : 1;
    unsigned int tmu_grp_g1_sig_1_out : 1;
    unsigned int tmu_grp_g1_sig_2_out : 1;
    unsigned int tmu_grp_g1_sig_3_out : 1;
    unsigned int tmu_grp_g2_sig_0_out : 1;
    unsigned int tmu_grp_g2_sig_1_out : 1;
    unsigned int tmu_grp_g2_sig_2_out : 1;
    unsigned int tmu_grp_g2_sig_3_out : 1;
    unsigned int tmu_grp_pll_sig_out : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_tmu_grp_g_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_VAL_ADDR  0x4001d3f8


/* tmu_grp_g_d2r_if_src_sel register */
/*----------------------*/
/* TMU Global Power Sequencing RF Interface : source selection */
/* tmu_grp_g1_sig_0_out : Source selection for tmu_grp_g1_sig_0_out */
/* tmu_grp_g1_sig_1_out : Source selection for tmu_grp_g1_sig_1_out */
/* tmu_grp_g1_sig_2_out : Source selection for tmu_grp_g1_sig_2_out */
/* tmu_grp_g1_sig_3_out : Source selection for tmu_grp_g1_sig_3_out */
/* tmu_grp_g2_sig_0_out : Source selection for tmu_grp_g2_sig_0_out */
/* tmu_grp_g2_sig_1_out : Source selection for tmu_grp_g2_sig_1_out */
/* tmu_grp_g2_sig_2_out : Source selection for tmu_grp_g2_sig_2_out */
/* tmu_grp_g2_sig_3_out : Source selection for tmu_grp_g2_sig_3_out */
/* tmu_grp_pll_sig_out : Source selection for tmu_grp_pll_sig_out */
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G1_SIG_0_OUT_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G1_SIG_0_OUT_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G1_SIG_0_OUT_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G1_SIG_0_OUT_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G1_SIG_0_OUT_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G1_SIG_0_OUT_TMU_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G1_SIG_1_OUT_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G1_SIG_1_OUT_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G1_SIG_1_OUT_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G1_SIG_1_OUT_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G1_SIG_1_OUT_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G1_SIG_1_OUT_TMU_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G1_SIG_2_OUT_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G1_SIG_2_OUT_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G1_SIG_2_OUT_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G1_SIG_2_OUT_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G1_SIG_2_OUT_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G1_SIG_2_OUT_TMU_MASK 0x4
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G1_SIG_3_OUT_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G1_SIG_3_OUT_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G1_SIG_3_OUT_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G1_SIG_3_OUT_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G1_SIG_3_OUT_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G1_SIG_3_OUT_TMU_MASK 0x8
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G2_SIG_0_OUT_MASK 0x0010
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G2_SIG_0_OUT_POS  4
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G2_SIG_0_OUT_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G2_SIG_0_OUT_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G2_SIG_0_OUT_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G2_SIG_0_OUT_TMU_MASK 0x10
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G2_SIG_1_OUT_MASK 0x0020
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G2_SIG_1_OUT_POS  5
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G2_SIG_1_OUT_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G2_SIG_1_OUT_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G2_SIG_1_OUT_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G2_SIG_1_OUT_TMU_MASK 0x20
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G2_SIG_2_OUT_MASK 0x0040
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G2_SIG_2_OUT_POS  6
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G2_SIG_2_OUT_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G2_SIG_2_OUT_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G2_SIG_2_OUT_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G2_SIG_2_OUT_TMU_MASK 0x40
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G2_SIG_3_OUT_MASK 0x0080
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G2_SIG_3_OUT_POS  7
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G2_SIG_3_OUT_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G2_SIG_3_OUT_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G2_SIG_3_OUT_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_G2_SIG_3_OUT_TMU_MASK 0x80
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_PLL_SIG_OUT_MASK 0x0100
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_PLL_SIG_OUT_POS  8
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_PLL_SIG_OUT_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_PLL_SIG_OUT_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_PLL_SIG_OUT_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_TMU_GRP_PLL_SIG_OUT_TMU_MASK 0x100
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int tmu_grp_g1_sig_0_out : 1;
    unsigned int tmu_grp_g1_sig_1_out : 1;
    unsigned int tmu_grp_g1_sig_2_out : 1;
    unsigned int tmu_grp_g1_sig_3_out : 1;
    unsigned int tmu_grp_g2_sig_0_out : 1;
    unsigned int tmu_grp_g2_sig_1_out : 1;
    unsigned int tmu_grp_g2_sig_2_out : 1;
    unsigned int tmu_grp_g2_sig_3_out : 1;
    unsigned int tmu_grp_pll_sig_out : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_tmu_grp_g_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_RST 0x1ff
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_SRC_SEL_ADDR  0x4001d3fc


/* tmu_grp_g_d2r_if_pol_invert_en register */
/*----------------------*/
/* TMU Global Power Sequencing RF Interface : polarity invert control */
/* tmu_grp_g1_sig_0_out : Polarity invert control for tmu_grp_g1_sig_0_out */
/* tmu_grp_g1_sig_1_out : Polarity invert control for tmu_grp_g1_sig_1_out */
/* tmu_grp_g1_sig_2_out : Polarity invert control for tmu_grp_g1_sig_2_out */
/* tmu_grp_g1_sig_3_out : Polarity invert control for tmu_grp_g1_sig_3_out */
/* tmu_grp_g2_sig_0_out : Polarity invert control for tmu_grp_g2_sig_0_out */
/* tmu_grp_g2_sig_1_out : Polarity invert control for tmu_grp_g2_sig_1_out */
/* tmu_grp_g2_sig_2_out : Polarity invert control for tmu_grp_g2_sig_2_out */
/* tmu_grp_g2_sig_3_out : Polarity invert control for tmu_grp_g2_sig_3_out */
/* tmu_grp_pll_sig_out : Polarity invert control for tmu_grp_pll_sig_out */
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G1_SIG_0_OUT_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G1_SIG_0_OUT_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G1_SIG_0_OUT_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G1_SIG_0_OUT_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G1_SIG_0_OUT_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G1_SIG_0_OUT_EN_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G1_SIG_1_OUT_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G1_SIG_1_OUT_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G1_SIG_1_OUT_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G1_SIG_1_OUT_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G1_SIG_1_OUT_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G1_SIG_1_OUT_EN_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G1_SIG_2_OUT_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G1_SIG_2_OUT_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G1_SIG_2_OUT_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G1_SIG_2_OUT_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G1_SIG_2_OUT_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G1_SIG_2_OUT_EN_MASK 0x4
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G1_SIG_3_OUT_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G1_SIG_3_OUT_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G1_SIG_3_OUT_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G1_SIG_3_OUT_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G1_SIG_3_OUT_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G1_SIG_3_OUT_EN_MASK 0x8
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G2_SIG_0_OUT_MASK 0x0010
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G2_SIG_0_OUT_POS  4
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G2_SIG_0_OUT_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G2_SIG_0_OUT_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G2_SIG_0_OUT_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G2_SIG_0_OUT_EN_MASK 0x10
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G2_SIG_1_OUT_MASK 0x0020
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G2_SIG_1_OUT_POS  5
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G2_SIG_1_OUT_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G2_SIG_1_OUT_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G2_SIG_1_OUT_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G2_SIG_1_OUT_EN_MASK 0x20
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G2_SIG_2_OUT_MASK 0x0040
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G2_SIG_2_OUT_POS  6
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G2_SIG_2_OUT_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G2_SIG_2_OUT_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G2_SIG_2_OUT_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G2_SIG_2_OUT_EN_MASK 0x40
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G2_SIG_3_OUT_MASK 0x0080
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G2_SIG_3_OUT_POS  7
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G2_SIG_3_OUT_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G2_SIG_3_OUT_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G2_SIG_3_OUT_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_G2_SIG_3_OUT_EN_MASK 0x80
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_PLL_SIG_OUT_MASK 0x0100
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_PLL_SIG_OUT_POS  8
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_PLL_SIG_OUT_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_PLL_SIG_OUT_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_PLL_SIG_OUT_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_TMU_GRP_PLL_SIG_OUT_EN_MASK 0x100
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int tmu_grp_g1_sig_0_out : 1;
    unsigned int tmu_grp_g1_sig_1_out : 1;
    unsigned int tmu_grp_g1_sig_2_out : 1;
    unsigned int tmu_grp_g1_sig_3_out : 1;
    unsigned int tmu_grp_g2_sig_0_out : 1;
    unsigned int tmu_grp_g2_sig_1_out : 1;
    unsigned int tmu_grp_g2_sig_2_out : 1;
    unsigned int tmu_grp_g2_sig_3_out : 1;
    unsigned int tmu_grp_pll_sig_out : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_tmu_grp_g_d2r_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_G_D2R_IF_POL_INVERT_EN_ADDR  0x4001d400


/* tmu_grp_tx_d2r_if_val register */
/*----------------------*/
/* TMU TX Power Sequencing RF Interface : regfile value */
/* tmu_grp_tx1_sig_0_out : TMU Tx Power Sequencing TX1 wire 0 value */
/* tmu_grp_tx1_sig_1_out : TMU Tx Power Sequencing TX1 wire 1 value */
/* tmu_grp_tx1_sig_2_out : TMU Tx Power Sequencing TX1 wire 2 value */
/* tmu_grp_tx1_sig_3_out : TMU Tx Power Sequencing TX1 wire 3 value */
/* tmu_grp_tx2_sig_0_out : TMU Tx Power Sequencing TX2 wire 0 value */
/* tmu_grp_tx2_sig_1_out : TMU Tx Power Sequencing TX2 wire 1 value */
/* tmu_grp_tx2_sig_2_out : TMU Tx Power Sequencing TX2 wire 2 value */
/* tmu_grp_tx2_sig_3_out : TMU Tx Power Sequencing TX2 wire 3 value */
/* tmu_grp_tx3_sig_0_out : TMU Tx Power Sequencing TX3 wire 0 value */
/* tmu_grp_tx3_sig_1_out : TMU Tx Power Sequencing TX3 wire 1 value */
/* tmu_grp_tx3_sig_2_out : TMU Tx Power Sequencing TX3 wire 2 value */
/* tmu_grp_tx3_sig_3_out : TMU Tx Power Sequencing TX3 wire 3 value */
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX1_SIG_0_OUT_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX1_SIG_0_OUT_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX1_SIG_0_OUT_LOW 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX1_SIG_0_OUT_LOW_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX1_SIG_0_OUT_HIGH 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX1_SIG_0_OUT_HIGH_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX1_SIG_1_OUT_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX1_SIG_1_OUT_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX1_SIG_1_OUT_LOW 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX1_SIG_1_OUT_LOW_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX1_SIG_1_OUT_HIGH 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX1_SIG_1_OUT_HIGH_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX1_SIG_2_OUT_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX1_SIG_2_OUT_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX1_SIG_2_OUT_LOW 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX1_SIG_2_OUT_LOW_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX1_SIG_2_OUT_HIGH 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX1_SIG_2_OUT_HIGH_MASK 0x4
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX1_SIG_3_OUT_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX1_SIG_3_OUT_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX1_SIG_3_OUT_LOW 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX1_SIG_3_OUT_LOW_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX1_SIG_3_OUT_HIGH 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX1_SIG_3_OUT_HIGH_MASK 0x8
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX2_SIG_0_OUT_MASK 0x0010
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX2_SIG_0_OUT_POS  4
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX2_SIG_0_OUT_LOW 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX2_SIG_0_OUT_LOW_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX2_SIG_0_OUT_HIGH 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX2_SIG_0_OUT_HIGH_MASK 0x10
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX2_SIG_1_OUT_MASK 0x0020
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX2_SIG_1_OUT_POS  5
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX2_SIG_1_OUT_LOW 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX2_SIG_1_OUT_LOW_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX2_SIG_1_OUT_HIGH 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX2_SIG_1_OUT_HIGH_MASK 0x20
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX2_SIG_2_OUT_MASK 0x0040
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX2_SIG_2_OUT_POS  6
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX2_SIG_2_OUT_LOW 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX2_SIG_2_OUT_LOW_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX2_SIG_2_OUT_HIGH 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX2_SIG_2_OUT_HIGH_MASK 0x40
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX2_SIG_3_OUT_MASK 0x0080
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX2_SIG_3_OUT_POS  7
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX2_SIG_3_OUT_LOW 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX2_SIG_3_OUT_LOW_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX2_SIG_3_OUT_HIGH 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX2_SIG_3_OUT_HIGH_MASK 0x80
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX3_SIG_0_OUT_MASK 0x0100
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX3_SIG_0_OUT_POS  8
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX3_SIG_0_OUT_LOW 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX3_SIG_0_OUT_LOW_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX3_SIG_0_OUT_HIGH 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX3_SIG_0_OUT_HIGH_MASK 0x100
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX3_SIG_1_OUT_MASK 0x0200
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX3_SIG_1_OUT_POS  9
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX3_SIG_1_OUT_LOW 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX3_SIG_1_OUT_LOW_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX3_SIG_1_OUT_HIGH 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX3_SIG_1_OUT_HIGH_MASK 0x200
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX3_SIG_2_OUT_MASK 0x0400
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX3_SIG_2_OUT_POS  10
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX3_SIG_2_OUT_LOW 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX3_SIG_2_OUT_LOW_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX3_SIG_2_OUT_HIGH 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX3_SIG_2_OUT_HIGH_MASK 0x400
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX3_SIG_3_OUT_MASK 0x0800
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX3_SIG_3_OUT_POS  11
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX3_SIG_3_OUT_LOW 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX3_SIG_3_OUT_LOW_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX3_SIG_3_OUT_HIGH 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_TMU_GRP_TX3_SIG_3_OUT_HIGH_MASK 0x800
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int tmu_grp_tx1_sig_0_out : 1;
    unsigned int tmu_grp_tx1_sig_1_out : 1;
    unsigned int tmu_grp_tx1_sig_2_out : 1;
    unsigned int tmu_grp_tx1_sig_3_out : 1;
    unsigned int tmu_grp_tx2_sig_0_out : 1;
    unsigned int tmu_grp_tx2_sig_1_out : 1;
    unsigned int tmu_grp_tx2_sig_2_out : 1;
    unsigned int tmu_grp_tx2_sig_3_out : 1;
    unsigned int tmu_grp_tx3_sig_0_out : 1;
    unsigned int tmu_grp_tx3_sig_1_out : 1;
    unsigned int tmu_grp_tx3_sig_2_out : 1;
    unsigned int tmu_grp_tx3_sig_3_out : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_tmu_grp_tx_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_VAL_ADDR  0x4001d404


/* tmu_grp_tx_d2r_if_src_sel register */
/*----------------------*/
/* TMU TX Power sequencing RF interface : source selection */
/* tmu_grp_tx1_sig_0_out : Source selection for tmu_grp_tx1_sig_0_out */
/* tmu_grp_tx1_sig_1_out : Source selection for tmu_grp_tx1_sig_1_out */
/* tmu_grp_tx1_sig_2_out : Source selectoin for tmu_grp_tx1_sig_2_out */
/* tmu_grp_tx1_sig_3_out : Source selection for tmu_grp_tx1_sig_3_out */
/* tmu_grp_tx2_sig_0_out : Source selection for tmu_grp_tx2_sig_0_out */
/* tmu_grp_tx2_sig_1_out : Source selection for tmu_grp_tx2_sig_1_out */
/* tmu_grp_tx2_sig_2_out : Source selection for tmu_grp_tx2_sig_2_out */
/* tmu_grp_tx2_sig_3_out : Source selection for tmu_grp_tx2_sig_3_out */
/* tmu_grp_tx3_sig_0_out : Source selection for tmu_grp_tx3_sig_0_out */
/* tmu_grp_tx3_sig_1_out : Source selection for tmu_grp_tx3_sig_1_out */
/* tmu_grp_tx3_sig_2_out : Source selection for tmu_grp_tx3_sig_2_out */
/* tmu_grp_tx3_sig_3_out : Source selection for tmu_grp_tx3_sig_3_out */
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX1_SIG_0_OUT_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX1_SIG_0_OUT_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX1_SIG_0_OUT_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX1_SIG_0_OUT_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX1_SIG_0_OUT_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX1_SIG_0_OUT_TMU_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX1_SIG_1_OUT_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX1_SIG_1_OUT_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX1_SIG_1_OUT_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX1_SIG_1_OUT_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX1_SIG_1_OUT_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX1_SIG_1_OUT_TMU_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX1_SIG_2_OUT_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX1_SIG_2_OUT_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX1_SIG_2_OUT_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX1_SIG_2_OUT_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX1_SIG_2_OUT_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX1_SIG_2_OUT_TMU_MASK 0x4
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX1_SIG_3_OUT_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX1_SIG_3_OUT_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX1_SIG_3_OUT_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX1_SIG_3_OUT_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX1_SIG_3_OUT_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX1_SIG_3_OUT_TMU_MASK 0x8
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX2_SIG_0_OUT_MASK 0x0010
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX2_SIG_0_OUT_POS  4
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX2_SIG_0_OUT_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX2_SIG_0_OUT_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX2_SIG_0_OUT_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX2_SIG_0_OUT_TMU_MASK 0x10
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX2_SIG_1_OUT_MASK 0x0020
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX2_SIG_1_OUT_POS  5
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX2_SIG_1_OUT_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX2_SIG_1_OUT_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX2_SIG_1_OUT_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX2_SIG_1_OUT_TMU_MASK 0x20
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX2_SIG_2_OUT_MASK 0x0040
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX2_SIG_2_OUT_POS  6
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX2_SIG_2_OUT_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX2_SIG_2_OUT_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX2_SIG_2_OUT_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX2_SIG_2_OUT_TMU_MASK 0x40
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX2_SIG_3_OUT_MASK 0x0080
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX2_SIG_3_OUT_POS  7
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX2_SIG_3_OUT_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX2_SIG_3_OUT_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX2_SIG_3_OUT_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX2_SIG_3_OUT_TMU_MASK 0x80
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX3_SIG_0_OUT_MASK 0x0100
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX3_SIG_0_OUT_POS  8
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX3_SIG_0_OUT_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX3_SIG_0_OUT_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX3_SIG_0_OUT_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX3_SIG_0_OUT_TMU_MASK 0x100
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX3_SIG_1_OUT_MASK 0x0200
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX3_SIG_1_OUT_POS  9
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX3_SIG_1_OUT_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX3_SIG_1_OUT_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX3_SIG_1_OUT_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX3_SIG_1_OUT_TMU_MASK 0x200
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX3_SIG_2_OUT_MASK 0x0400
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX3_SIG_2_OUT_POS  10
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX3_SIG_2_OUT_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX3_SIG_2_OUT_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX3_SIG_2_OUT_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX3_SIG_2_OUT_TMU_MASK 0x400
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX3_SIG_3_OUT_MASK 0x0800
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX3_SIG_3_OUT_POS  11
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX3_SIG_3_OUT_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX3_SIG_3_OUT_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX3_SIG_3_OUT_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_TMU_GRP_TX3_SIG_3_OUT_TMU_MASK 0x800
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int tmu_grp_tx1_sig_0_out : 1;
    unsigned int tmu_grp_tx1_sig_1_out : 1;
    unsigned int tmu_grp_tx1_sig_2_out : 1;
    unsigned int tmu_grp_tx1_sig_3_out : 1;
    unsigned int tmu_grp_tx2_sig_0_out : 1;
    unsigned int tmu_grp_tx2_sig_1_out : 1;
    unsigned int tmu_grp_tx2_sig_2_out : 1;
    unsigned int tmu_grp_tx2_sig_3_out : 1;
    unsigned int tmu_grp_tx3_sig_0_out : 1;
    unsigned int tmu_grp_tx3_sig_1_out : 1;
    unsigned int tmu_grp_tx3_sig_2_out : 1;
    unsigned int tmu_grp_tx3_sig_3_out : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_tmu_grp_tx_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_RST 0xfff
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_SRC_SEL_ADDR  0x4001d408


/* tmu_grp_tx_d2r_if_pol_invert_en register */
/*----------------------*/
/* TMU Tx Power Sequencing RF Interface : polarity invert control */
/* tmu_grp_tx1_sig_0_out : Polarity invert control for tmu_grp_tx1_sig_0_out */
/* tmu_grp_tx1_sig_1_out : Polarity invert control for tmu_grp_tx1_sig_1_out */
/* tmu_grp_tx1_sig_2_out : Polarity invert control for tmu_grp_tx1_sig_2_out */
/* tmu_grp_tx1_sig_3_out : Polarity invert control for tmu_grp_tx1_sig_3_out */
/* tmu_grp_tx2_sig_0_out : Polarity invert control for tmu_grp_tx2_sig_0_out */
/* tmu_grp_tx2_sig_1_out : Polarity invert control for tmu_grp_tx2_sig_1_out */
/* tmu_grp_tx2_sig_2_out : Polarity invert control for tmu_grp_tx2_sig_2_out */
/* tmu_grp_tx2_sig_3_out : Polarity invert control for tmu_grp_tx2_sig_3_out */
/* tmu_grp_tx3_sig_0_out : Polarity invert control for tmu_grp_tx3_sig_0_out */
/* tmu_grp_tx3_sig_1_out : Polarity invert control for tmu_grp_tx3_sig_1_out */
/* tmu_grp_tx3_sig_2_out : Polarity invert control for tmu_grp_tx3_sig_2_out */
/* tmu_grp_tx3_sig_3_out : Polarity invert control for tmu_grp_tx3_sig_3_out */
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX1_SIG_0_OUT_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX1_SIG_0_OUT_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX1_SIG_0_OUT_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX1_SIG_0_OUT_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX1_SIG_0_OUT_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX1_SIG_0_OUT_EN_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX1_SIG_1_OUT_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX1_SIG_1_OUT_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX1_SIG_1_OUT_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX1_SIG_1_OUT_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX1_SIG_1_OUT_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX1_SIG_1_OUT_EN_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX1_SIG_2_OUT_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX1_SIG_2_OUT_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX1_SIG_2_OUT_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX1_SIG_2_OUT_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX1_SIG_2_OUT_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX1_SIG_2_OUT_EN_MASK 0x4
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX1_SIG_3_OUT_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX1_SIG_3_OUT_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX1_SIG_3_OUT_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX1_SIG_3_OUT_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX1_SIG_3_OUT_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX1_SIG_3_OUT_EN_MASK 0x8
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX2_SIG_0_OUT_MASK 0x0010
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX2_SIG_0_OUT_POS  4
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX2_SIG_0_OUT_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX2_SIG_0_OUT_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX2_SIG_0_OUT_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX2_SIG_0_OUT_EN_MASK 0x10
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX2_SIG_1_OUT_MASK 0x0020
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX2_SIG_1_OUT_POS  5
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX2_SIG_1_OUT_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX2_SIG_1_OUT_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX2_SIG_1_OUT_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX2_SIG_1_OUT_EN_MASK 0x20
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX2_SIG_2_OUT_MASK 0x0040
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX2_SIG_2_OUT_POS  6
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX2_SIG_2_OUT_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX2_SIG_2_OUT_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX2_SIG_2_OUT_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX2_SIG_2_OUT_EN_MASK 0x40
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX2_SIG_3_OUT_MASK 0x0080
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX2_SIG_3_OUT_POS  7
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX2_SIG_3_OUT_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX2_SIG_3_OUT_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX2_SIG_3_OUT_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX2_SIG_3_OUT_EN_MASK 0x80
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX3_SIG_0_OUT_MASK 0x0100
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX3_SIG_0_OUT_POS  8
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX3_SIG_0_OUT_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX3_SIG_0_OUT_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX3_SIG_0_OUT_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX3_SIG_0_OUT_EN_MASK 0x100
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX3_SIG_1_OUT_MASK 0x0200
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX3_SIG_1_OUT_POS  9
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX3_SIG_1_OUT_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX3_SIG_1_OUT_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX3_SIG_1_OUT_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX3_SIG_1_OUT_EN_MASK 0x200
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX3_SIG_2_OUT_MASK 0x0400
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX3_SIG_2_OUT_POS  10
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX3_SIG_2_OUT_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX3_SIG_2_OUT_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX3_SIG_2_OUT_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX3_SIG_2_OUT_EN_MASK 0x400
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX3_SIG_3_OUT_MASK 0x0800
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX3_SIG_3_OUT_POS  11
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX3_SIG_3_OUT_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX3_SIG_3_OUT_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX3_SIG_3_OUT_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_TMU_GRP_TX3_SIG_3_OUT_EN_MASK 0x800
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int tmu_grp_tx1_sig_0_out : 1;
    unsigned int tmu_grp_tx1_sig_1_out : 1;
    unsigned int tmu_grp_tx1_sig_2_out : 1;
    unsigned int tmu_grp_tx1_sig_3_out : 1;
    unsigned int tmu_grp_tx2_sig_0_out : 1;
    unsigned int tmu_grp_tx2_sig_1_out : 1;
    unsigned int tmu_grp_tx2_sig_2_out : 1;
    unsigned int tmu_grp_tx2_sig_3_out : 1;
    unsigned int tmu_grp_tx3_sig_0_out : 1;
    unsigned int tmu_grp_tx3_sig_1_out : 1;
    unsigned int tmu_grp_tx3_sig_2_out : 1;
    unsigned int tmu_grp_tx3_sig_3_out : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_tmu_grp_tx_d2r_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_TX_D2R_IF_POL_INVERT_EN_ADDR  0x4001d40c


/* tmu_grp_rx_d2r_if_val register */
/*----------------------*/
/* TMU RX Power sequencing RF interface : regfile value */
/* tmu_grp_rx1_sig_0_out : TMU Rx Power Sequencing RX1 wire 0 value */
/* tmu_grp_rx1_sig_1_out : TMU Rx Power Sequencing RX1 wire 1 value */
/* tmu_grp_rx1_sig_2_out : TMU Rx Power Sequencing RX1 wire 2 value */
/* tmu_grp_rx1_sig_3_out : TMU Rx Power Sequencing RX1 wire 3 value */
/* tmu_grp_rx2_sig_0_out : TMU Rx Power Sequencing RX2 wire 0 value */
/* tmu_grp_rx2_sig_1_out : TMU Rx Power sequencing RX2 wire 1 value */
/* tmu_grp_rx2_sig_2_out : TMU Rx Power Sequencing RX2 wire 2 value */
/* tmu_grp_rx2_sig_3_out : TMU Rx Power Sequencing RX2 wire 3 value */
/* tmu_grp_rx3_sig_0_out : TMU Rx Power Sequencing RX3 wire 0 value */
/* tmu_grp_rx3_sig_1_out : TMU Rx Power Sequencing RX3 wire 1 value */
/* tmu_grp_rx3_sig_2_out : TMU Rx Power Sequencing RX3 wire 2 value */
/* tmu_grp_rx3_sig_3_out : TMU Rx Power Sequencing RX3 wire 3 value */
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX1_SIG_0_OUT_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX1_SIG_0_OUT_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX1_SIG_0_OUT_LOW 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX1_SIG_0_OUT_LOW_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX1_SIG_0_OUT_HIGH 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX1_SIG_0_OUT_HIGH_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX1_SIG_1_OUT_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX1_SIG_1_OUT_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX1_SIG_1_OUT_LOW 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX1_SIG_1_OUT_LOW_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX1_SIG_1_OUT_HIGH 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX1_SIG_1_OUT_HIGH_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX1_SIG_2_OUT_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX1_SIG_2_OUT_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX1_SIG_2_OUT_LOW 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX1_SIG_2_OUT_LOW_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX1_SIG_2_OUT_HIGH 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX1_SIG_2_OUT_HIGH_MASK 0x4
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX1_SIG_3_OUT_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX1_SIG_3_OUT_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX1_SIG_3_OUT_LOW 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX1_SIG_3_OUT_LOW_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX1_SIG_3_OUT_HIGH 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX1_SIG_3_OUT_HIGH_MASK 0x8
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX2_SIG_0_OUT_MASK 0x0010
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX2_SIG_0_OUT_POS  4
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX2_SIG_0_OUT_LOW 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX2_SIG_0_OUT_LOW_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX2_SIG_0_OUT_HIGH 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX2_SIG_0_OUT_HIGH_MASK 0x10
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX2_SIG_1_OUT_MASK 0x0020
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX2_SIG_1_OUT_POS  5
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX2_SIG_1_OUT_LOW 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX2_SIG_1_OUT_LOW_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX2_SIG_1_OUT_HIGH 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX2_SIG_1_OUT_HIGH_MASK 0x20
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX2_SIG_2_OUT_MASK 0x0040
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX2_SIG_2_OUT_POS  6
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX2_SIG_2_OUT_LOW 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX2_SIG_2_OUT_LOW_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX2_SIG_2_OUT_HIGH 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX2_SIG_2_OUT_HIGH_MASK 0x40
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX2_SIG_3_OUT_MASK 0x0080
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX2_SIG_3_OUT_POS  7
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX2_SIG_3_OUT_LOW 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX2_SIG_3_OUT_LOW_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX2_SIG_3_OUT_HIGH 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX2_SIG_3_OUT_HIGH_MASK 0x80
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX3_SIG_0_OUT_MASK 0x0100
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX3_SIG_0_OUT_POS  8
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX3_SIG_0_OUT_LOW 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX3_SIG_0_OUT_LOW_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX3_SIG_0_OUT_HIGH 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX3_SIG_0_OUT_HIGH_MASK 0x100
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX3_SIG_1_OUT_MASK 0x0200
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX3_SIG_1_OUT_POS  9
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX3_SIG_1_OUT_LOW 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX3_SIG_1_OUT_LOW_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX3_SIG_1_OUT_HIGH 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX3_SIG_1_OUT_HIGH_MASK 0x200
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX3_SIG_2_OUT_MASK 0x0400
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX3_SIG_2_OUT_POS  10
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX3_SIG_2_OUT_LOW 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX3_SIG_2_OUT_LOW_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX3_SIG_2_OUT_HIGH 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX3_SIG_2_OUT_HIGH_MASK 0x400
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX3_SIG_3_OUT_MASK 0x0800
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX3_SIG_3_OUT_POS  11
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX3_SIG_3_OUT_LOW 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX3_SIG_3_OUT_LOW_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX3_SIG_3_OUT_HIGH 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_TMU_GRP_RX3_SIG_3_OUT_HIGH_MASK 0x800
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int tmu_grp_rx1_sig_0_out : 1;
    unsigned int tmu_grp_rx1_sig_1_out : 1;
    unsigned int tmu_grp_rx1_sig_2_out : 1;
    unsigned int tmu_grp_rx1_sig_3_out : 1;
    unsigned int tmu_grp_rx2_sig_0_out : 1;
    unsigned int tmu_grp_rx2_sig_1_out : 1;
    unsigned int tmu_grp_rx2_sig_2_out : 1;
    unsigned int tmu_grp_rx2_sig_3_out : 1;
    unsigned int tmu_grp_rx3_sig_0_out : 1;
    unsigned int tmu_grp_rx3_sig_1_out : 1;
    unsigned int tmu_grp_rx3_sig_2_out : 1;
    unsigned int tmu_grp_rx3_sig_3_out : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_tmu_grp_rx_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_VAL_ADDR  0x4001d410


/* tmu_grp_rx_d2r_if_src_sel register */
/*----------------------*/
/* TMU RX Power Sequencing RF Interface : source selection */
/* tmu_grp_rx1_sig_0_out : Source selection for tmu_grp_rx1_sig_0_out */
/* tmu_grp_rx1_sig_1_out : Source selection for tmu_grp_rx1_sig_1_out */
/* tmu_grp_rx1_sig_2_out : Source selection for tmu_grp_rx1_sig_2_out */
/* tmu_grp_rx1_sig_3_out : Source selection for tmu_grp_rx1_sig_3_out */
/* tmu_grp_rx2_sig_0_out : Source selection for tmu_grp_rx2_sig_0_out */
/* tmu_grp_rx2_sig_1_out : Source selection for tmu_grp_rx2_sig_1_out */
/* tmu_grp_rx2_sig_2_out : Source selection for tmu_grp_rx2_sig_2_out */
/* tmu_grp_rx2_sig_3_out : Source selection for tmu_grp_rx2_sig_3_out */
/* tmu_grp_rx3_sig_0_out : Source selection for tmu_grp_rx3_sig_0_out */
/* tmu_grp_rx3_sig_1_out : Source selection for tmu_grp_rx3_sig_1_out */
/* tmu_grp_rx3_sig_2_out : Source selection for tmu_grp_rx3_sig_2_out */
/* tmu_grp_rx3_sig_3_out : Source selection for tmu_grp_rx3_sig_3_out */
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX1_SIG_0_OUT_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX1_SIG_0_OUT_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX1_SIG_0_OUT_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX1_SIG_0_OUT_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX1_SIG_0_OUT_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX1_SIG_0_OUT_TMU_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX1_SIG_1_OUT_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX1_SIG_1_OUT_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX1_SIG_1_OUT_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX1_SIG_1_OUT_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX1_SIG_1_OUT_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX1_SIG_1_OUT_TMU_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX1_SIG_2_OUT_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX1_SIG_2_OUT_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX1_SIG_2_OUT_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX1_SIG_2_OUT_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX1_SIG_2_OUT_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX1_SIG_2_OUT_TMU_MASK 0x4
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX1_SIG_3_OUT_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX1_SIG_3_OUT_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX1_SIG_3_OUT_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX1_SIG_3_OUT_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX1_SIG_3_OUT_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX1_SIG_3_OUT_TMU_MASK 0x8
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX2_SIG_0_OUT_MASK 0x0010
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX2_SIG_0_OUT_POS  4
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX2_SIG_0_OUT_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX2_SIG_0_OUT_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX2_SIG_0_OUT_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX2_SIG_0_OUT_TMU_MASK 0x10
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX2_SIG_1_OUT_MASK 0x0020
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX2_SIG_1_OUT_POS  5
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX2_SIG_1_OUT_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX2_SIG_1_OUT_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX2_SIG_1_OUT_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX2_SIG_1_OUT_TMU_MASK 0x20
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX2_SIG_2_OUT_MASK 0x0040
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX2_SIG_2_OUT_POS  6
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX2_SIG_2_OUT_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX2_SIG_2_OUT_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX2_SIG_2_OUT_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX2_SIG_2_OUT_TMU_MASK 0x40
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX2_SIG_3_OUT_MASK 0x0080
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX2_SIG_3_OUT_POS  7
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX2_SIG_3_OUT_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX2_SIG_3_OUT_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX2_SIG_3_OUT_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX2_SIG_3_OUT_TMU_MASK 0x80
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX3_SIG_0_OUT_MASK 0x0100
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX3_SIG_0_OUT_POS  8
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX3_SIG_0_OUT_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX3_SIG_0_OUT_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX3_SIG_0_OUT_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX3_SIG_0_OUT_TMU_MASK 0x100
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX3_SIG_1_OUT_MASK 0x0200
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX3_SIG_1_OUT_POS  9
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX3_SIG_1_OUT_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX3_SIG_1_OUT_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX3_SIG_1_OUT_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX3_SIG_1_OUT_TMU_MASK 0x200
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX3_SIG_2_OUT_MASK 0x0400
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX3_SIG_2_OUT_POS  10
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX3_SIG_2_OUT_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX3_SIG_2_OUT_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX3_SIG_2_OUT_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX3_SIG_2_OUT_TMU_MASK 0x400
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX3_SIG_3_OUT_MASK 0x0800
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX3_SIG_3_OUT_POS  11
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX3_SIG_3_OUT_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX3_SIG_3_OUT_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX3_SIG_3_OUT_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_TMU_GRP_RX3_SIG_3_OUT_TMU_MASK 0x800
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int tmu_grp_rx1_sig_0_out : 1;
    unsigned int tmu_grp_rx1_sig_1_out : 1;
    unsigned int tmu_grp_rx1_sig_2_out : 1;
    unsigned int tmu_grp_rx1_sig_3_out : 1;
    unsigned int tmu_grp_rx2_sig_0_out : 1;
    unsigned int tmu_grp_rx2_sig_1_out : 1;
    unsigned int tmu_grp_rx2_sig_2_out : 1;
    unsigned int tmu_grp_rx2_sig_3_out : 1;
    unsigned int tmu_grp_rx3_sig_0_out : 1;
    unsigned int tmu_grp_rx3_sig_1_out : 1;
    unsigned int tmu_grp_rx3_sig_2_out : 1;
    unsigned int tmu_grp_rx3_sig_3_out : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_tmu_grp_rx_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_RST 0xfff
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_SRC_SEL_ADDR  0x4001d414


/* tmu_grp_rx_d2r_if_pol_invert_en register */
/*----------------------*/
/* TMU Rx Power sequencing RX interface : polarity invert control */
/* tmu_grp_rx1_sig_0_out : Polarity invert control for tmu_grp_rx1_sig_0_out */
/* tmu_grp_rx1_sig_1_out : Polarity invert control for tmu_grp_rx1_sig_1_out */
/* tmu_grp_rx1_sig_2_out : Polarity invert control for tmu_grp_rx1_sig_2_out */
/* tmu_grp_rx1_sig_3_out : Polarity invert control for tmu_grp_rx1_sig_3_out */
/* tmu_grp_rx2_sig_0_out : Polarity invert control for tmu_grp_rx2_sig_0_out */
/* tmu_grp_rx2_sig_1_out : Polarity invert control for tmu_grp_rx2_sig_1_out */
/* tmu_grp_rx2_sig_2_out : Polarity invert control for tmu_grp_rx2_sig_2_out */
/* tmu_grp_rx2_sig_3_out : Polarity invert control for tmu_grp_rx2_sig_3_out */
/* tmu_grp_rx3_sig_0_out : Polarity invert control for tmu_grp_rx3_sig_0_out */
/* tmu_grp_rx3_sig_1_out : Polarity invert control for tmu_grp_rx3_sig_1_out */
/* tmu_grp_rx3_sig_2_out : Polarity invert control for tmu_grp_rx3_sig_2_out */
/* tmu_grp_rx3_sig_3_out : Polarity invert control for tmu_grp_rx3_sig_3_out */
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX1_SIG_0_OUT_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX1_SIG_0_OUT_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX1_SIG_0_OUT_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX1_SIG_0_OUT_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX1_SIG_0_OUT_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX1_SIG_0_OUT_EN_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX1_SIG_1_OUT_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX1_SIG_1_OUT_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX1_SIG_1_OUT_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX1_SIG_1_OUT_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX1_SIG_1_OUT_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX1_SIG_1_OUT_EN_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX1_SIG_2_OUT_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX1_SIG_2_OUT_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX1_SIG_2_OUT_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX1_SIG_2_OUT_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX1_SIG_2_OUT_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX1_SIG_2_OUT_EN_MASK 0x4
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX1_SIG_3_OUT_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX1_SIG_3_OUT_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX1_SIG_3_OUT_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX1_SIG_3_OUT_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX1_SIG_3_OUT_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX1_SIG_3_OUT_EN_MASK 0x8
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX2_SIG_0_OUT_MASK 0x0010
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX2_SIG_0_OUT_POS  4
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX2_SIG_0_OUT_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX2_SIG_0_OUT_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX2_SIG_0_OUT_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX2_SIG_0_OUT_EN_MASK 0x10
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX2_SIG_1_OUT_MASK 0x0020
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX2_SIG_1_OUT_POS  5
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX2_SIG_1_OUT_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX2_SIG_1_OUT_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX2_SIG_1_OUT_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX2_SIG_1_OUT_EN_MASK 0x20
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX2_SIG_2_OUT_MASK 0x0040
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX2_SIG_2_OUT_POS  6
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX2_SIG_2_OUT_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX2_SIG_2_OUT_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX2_SIG_2_OUT_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX2_SIG_2_OUT_EN_MASK 0x40
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX2_SIG_3_OUT_MASK 0x0080
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX2_SIG_3_OUT_POS  7
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX2_SIG_3_OUT_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX2_SIG_3_OUT_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX2_SIG_3_OUT_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX2_SIG_3_OUT_EN_MASK 0x80
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX3_SIG_0_OUT_MASK 0x0100
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX3_SIG_0_OUT_POS  8
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX3_SIG_0_OUT_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX3_SIG_0_OUT_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX3_SIG_0_OUT_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX3_SIG_0_OUT_EN_MASK 0x100
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX3_SIG_1_OUT_MASK 0x0200
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX3_SIG_1_OUT_POS  9
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX3_SIG_1_OUT_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX3_SIG_1_OUT_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX3_SIG_1_OUT_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX3_SIG_1_OUT_EN_MASK 0x200
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX3_SIG_2_OUT_MASK 0x0400
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX3_SIG_2_OUT_POS  10
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX3_SIG_2_OUT_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX3_SIG_2_OUT_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX3_SIG_2_OUT_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX3_SIG_2_OUT_EN_MASK 0x400
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX3_SIG_3_OUT_MASK 0x0800
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX3_SIG_3_OUT_POS  11
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX3_SIG_3_OUT_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX3_SIG_3_OUT_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX3_SIG_3_OUT_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_TMU_GRP_RX3_SIG_3_OUT_EN_MASK 0x800
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int tmu_grp_rx1_sig_0_out : 1;
    unsigned int tmu_grp_rx1_sig_1_out : 1;
    unsigned int tmu_grp_rx1_sig_2_out : 1;
    unsigned int tmu_grp_rx1_sig_3_out : 1;
    unsigned int tmu_grp_rx2_sig_0_out : 1;
    unsigned int tmu_grp_rx2_sig_1_out : 1;
    unsigned int tmu_grp_rx2_sig_2_out : 1;
    unsigned int tmu_grp_rx2_sig_3_out : 1;
    unsigned int tmu_grp_rx3_sig_0_out : 1;
    unsigned int tmu_grp_rx3_sig_1_out : 1;
    unsigned int tmu_grp_rx3_sig_2_out : 1;
    unsigned int tmu_grp_rx3_sig_3_out : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_tmu_grp_rx_d2r_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TMU_GRP_RX_D2R_IF_POL_INVERT_EN_ADDR  0x4001d418


/* rx_ldo_d2r_if_val register */
/*----------------------*/
/* Rx LDO RF interface : regfile value */
/* rx_ldo_adc_enable : LDO adc enable */
/* rx_ldo_adc_pass_set : Set to 1 to enable bypass mode */
/* rx_ldo_adc_fbres_set : NXP to detail */
/* rx_ldo_control_0v8_pass : Set to 1 to enable bypass mode */
/* rx_ldo_control_0v8_ref_sel : Selects between PMU and RF bandgap reference */
/* rx_ldo_1v4_enable : LDO_1v4 enable */
/* rx_ldo_1v4_pass_set : Set to 1 to enable bypass mode */
/* rx_ldo_1v2_vout_set : Flexibility to change the 1.2V output from 1V to 1.2V */
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_VAL_RX_LDO_ADC_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_VAL_RX_LDO_ADC_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_VAL_RX_LDO_ADC_PASS_SET_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_VAL_RX_LDO_ADC_PASS_SET_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_VAL_RX_LDO_ADC_FBRES_SET_MASK 0x007c
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_VAL_RX_LDO_ADC_FBRES_SET_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_VAL_RX_LDO_CONTROL_0V8_PASS_MASK 0x0080
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_VAL_RX_LDO_CONTROL_0V8_PASS_POS  7
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_VAL_RX_LDO_CONTROL_0V8_REF_SEL_MASK 0x0100
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_VAL_RX_LDO_CONTROL_0V8_REF_SEL_POS  8
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_VAL_RX_LDO_1V4_ENABLE_MASK 0x0200
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_VAL_RX_LDO_1V4_ENABLE_POS  9
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_VAL_RX_LDO_1V4_PASS_SET_MASK 0x0400
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_VAL_RX_LDO_1V4_PASS_SET_POS  10
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_VAL_RX_LDO_1V2_VOUT_SET_MASK 0x3800
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_VAL_RX_LDO_1V2_VOUT_SET_POS  11
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rx_ldo_adc_enable : 1;
    unsigned int rx_ldo_adc_pass_set : 1;
    unsigned int rx_ldo_adc_fbres_set : 5;
    unsigned int rx_ldo_control_0v8_pass : 1;
    unsigned int rx_ldo_control_0v8_ref_sel : 1;
    unsigned int rx_ldo_1v4_enable : 1;
    unsigned int rx_ldo_1v4_pass_set : 1;
    unsigned int rx_ldo_1v2_vout_set : 3;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_rx_ldo_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_VAL_ADDR  0x4001d41c


/* rx_ldo_d2r_if_src_sel register */
/*----------------------*/
/* Rx LDO RF interace : source selection */
/* rx_ldo_adc_enable : Source selection for rx_ldo_adc_enable */
/* rx_ldo_1v4_enable : Source selection for rx_ldo_1v4_enable */
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_SRC_SEL_RX_LDO_ADC_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_SRC_SEL_RX_LDO_ADC_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_SRC_SEL_RX_LDO_ADC_ENABLE_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_SRC_SEL_RX_LDO_ADC_ENABLE_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_SRC_SEL_RX_LDO_ADC_ENABLE_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_SRC_SEL_RX_LDO_ADC_ENABLE_TMU_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_SRC_SEL_RX_LDO_1V4_ENABLE_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_SRC_SEL_RX_LDO_1V4_ENABLE_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_SRC_SEL_RX_LDO_1V4_ENABLE_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_SRC_SEL_RX_LDO_1V4_ENABLE_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_SRC_SEL_RX_LDO_1V4_ENABLE_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_SRC_SEL_RX_LDO_1V4_ENABLE_TMU_MASK 0x2
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rx_ldo_adc_enable : 1;
    unsigned int rx_ldo_1v4_enable : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_rx_ldo_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_SRC_SEL_RST 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_SRC_SEL_ADDR  0x4001d420


/* rx_ldo_d2r_if_pol_invert_en register */
/*----------------------*/
/* Rx LDO RF Interface : polarity invert control */
/* rx_ldo_adc_enable : Polarity invert control for rx_ldo_adc_enable */
/* rx_ldo_adc_pass_set : Polarity invert control for rx_ldo_adc_pass_set */
/* rx_ldo_control_0v8_pass : Polarity invert ocntrol for rx_ldo_control_0v8_pass */
/* rx_ldo_control_0v8_ref_sel : Polarity invert control for rx_ldo_control_0v8_ref_sel */
/* rx_ldo_1v4_enable : Polarity invert control for rx_ldo_1v4_enable */
/* rx_ldo_1v4_pass_set : Polarity invert control for rx_ldo_1v4_pass_set */
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_POL_INVERT_EN_RX_LDO_ADC_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_POL_INVERT_EN_RX_LDO_ADC_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_POL_INVERT_EN_RX_LDO_ADC_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_POL_INVERT_EN_RX_LDO_ADC_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_POL_INVERT_EN_RX_LDO_ADC_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_POL_INVERT_EN_RX_LDO_ADC_ENABLE_EN_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_POL_INVERT_EN_RX_LDO_ADC_PASS_SET_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_POL_INVERT_EN_RX_LDO_ADC_PASS_SET_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_POL_INVERT_EN_RX_LDO_ADC_PASS_SET_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_POL_INVERT_EN_RX_LDO_ADC_PASS_SET_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_POL_INVERT_EN_RX_LDO_ADC_PASS_SET_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_POL_INVERT_EN_RX_LDO_ADC_PASS_SET_EN_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_POL_INVERT_EN_RX_LDO_CONTROL_0V8_PASS_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_POL_INVERT_EN_RX_LDO_CONTROL_0V8_PASS_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_POL_INVERT_EN_RX_LDO_CONTROL_0V8_PASS_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_POL_INVERT_EN_RX_LDO_CONTROL_0V8_PASS_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_POL_INVERT_EN_RX_LDO_CONTROL_0V8_PASS_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_POL_INVERT_EN_RX_LDO_CONTROL_0V8_PASS_EN_MASK 0x4
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_POL_INVERT_EN_RX_LDO_CONTROL_0V8_REF_SEL_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_POL_INVERT_EN_RX_LDO_CONTROL_0V8_REF_SEL_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_POL_INVERT_EN_RX_LDO_CONTROL_0V8_REF_SEL_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_POL_INVERT_EN_RX_LDO_CONTROL_0V8_REF_SEL_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_POL_INVERT_EN_RX_LDO_CONTROL_0V8_REF_SEL_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_POL_INVERT_EN_RX_LDO_CONTROL_0V8_REF_SEL_EN_MASK 0x8
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_POL_INVERT_EN_RX_LDO_1V4_ENABLE_MASK 0x0010
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_POL_INVERT_EN_RX_LDO_1V4_ENABLE_POS  4
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_POL_INVERT_EN_RX_LDO_1V4_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_POL_INVERT_EN_RX_LDO_1V4_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_POL_INVERT_EN_RX_LDO_1V4_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_POL_INVERT_EN_RX_LDO_1V4_ENABLE_EN_MASK 0x10
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_POL_INVERT_EN_RX_LDO_1V4_PASS_SET_MASK 0x0020
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_POL_INVERT_EN_RX_LDO_1V4_PASS_SET_POS  5
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_POL_INVERT_EN_RX_LDO_1V4_PASS_SET_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_POL_INVERT_EN_RX_LDO_1V4_PASS_SET_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_POL_INVERT_EN_RX_LDO_1V4_PASS_SET_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_POL_INVERT_EN_RX_LDO_1V4_PASS_SET_EN_MASK 0x20
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rx_ldo_adc_enable : 1;
    unsigned int rx_ldo_adc_pass_set : 1;
    unsigned int rx_ldo_control_0v8_pass : 1;
    unsigned int rx_ldo_control_0v8_ref_sel : 1;
    unsigned int rx_ldo_1v4_enable : 1;
    unsigned int rx_ldo_1v4_pass_set : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_rx_ldo_d2r_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_LDO_D2R_IF_POL_INVERT_EN_ADDR  0x4001d424


/* rx_iftest_d2r_if_val register */
/*----------------------*/
/* Rx IFtest RF interface : regfile value */
/* rx_iftest_enable : To be done */
/* rx_iftest_1_set : Select signal on ACB wire 1 */
/* rx_iftest_2_set : Select signal on ACB wire 2 */
#define EXTAPB_REGFILE_TRANSCEIVER_RX_IFTEST_D2R_IF_VAL_RX_IFTEST_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_RX_IFTEST_D2R_IF_VAL_RX_IFTEST_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_IFTEST_D2R_IF_VAL_RX_IFTEST_1_SET_MASK 0x000e
#define EXTAPB_REGFILE_TRANSCEIVER_RX_IFTEST_D2R_IF_VAL_RX_IFTEST_1_SET_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_RX_IFTEST_D2R_IF_VAL_RX_IFTEST_2_SET_MASK 0x0070
#define EXTAPB_REGFILE_TRANSCEIVER_RX_IFTEST_D2R_IF_VAL_RX_IFTEST_2_SET_POS  4
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rx_iftest_enable : 1;
    unsigned int rx_iftest_1_set : 3;
    unsigned int rx_iftest_2_set : 3;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_rx_iftest_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_RX_IFTEST_D2R_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_IFTEST_D2R_IF_VAL_ADDR  0x4001d428


/* rx_ifbuf_d2r_if_val register */
/*----------------------*/
/* RX IFbuf RF interface : regfile value */
/* rx_ifbuf_rz_set : Set to 0 in case of large load capacitance (20 pF). 1 in case of small load capacitance (2 pF). */
/* rx_ifbuf_enable : IF buffer enable */
/* rx_ifbuf_pass_set : Set to 1 to enable bypass mode */
#define EXTAPB_REGFILE_TRANSCEIVER_RX_IFBUF_D2R_IF_VAL_RX_IFBUF_RZ_SET_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_RX_IFBUF_D2R_IF_VAL_RX_IFBUF_RZ_SET_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_IFBUF_D2R_IF_VAL_RX_IFBUF_ENABLE_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_RX_IFBUF_D2R_IF_VAL_RX_IFBUF_ENABLE_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_RX_IFBUF_D2R_IF_VAL_RX_IFBUF_PASS_SET_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_RX_IFBUF_D2R_IF_VAL_RX_IFBUF_PASS_SET_POS  2
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rx_ifbuf_rz_set : 1;
    unsigned int rx_ifbuf_enable : 1;
    unsigned int rx_ifbuf_pass_set : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_rx_ifbuf_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_RX_IFBUF_D2R_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_IFBUF_D2R_IF_VAL_ADDR  0x4001d42c


/* pll_vco_boost_d2r_if_val register */
/*----------------------*/
/* PLL VCO boost interface : regfile value */
/* pll_vco_boost_en_rx : Boost settings VCO */
/* pll_vco_boost_en_tx : Boost settings VCO */
/* pll_vco_boost_set : Boost VCO tail current */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_BOOST_D2R_IF_VAL_PLL_VCO_BOOST_EN_RX_MASK 0x0007
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_BOOST_D2R_IF_VAL_PLL_VCO_BOOST_EN_RX_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_BOOST_D2R_IF_VAL_PLL_VCO_BOOST_EN_TX_MASK 0x0038
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_BOOST_D2R_IF_VAL_PLL_VCO_BOOST_EN_TX_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_BOOST_D2R_IF_VAL_PLL_VCO_BOOST_SET_MASK 0x01c0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_BOOST_D2R_IF_VAL_PLL_VCO_BOOST_SET_POS  6
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_vco_boost_en_rx : 3;
    unsigned int pll_vco_boost_en_tx : 3;
    unsigned int pll_vco_boost_set : 3;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_vco_boost_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_BOOST_D2R_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_BOOST_D2R_IF_VAL_ADDR  0x4001d430


/* pll_vco_boost_d2r_if_src_sel register */
/*----------------------*/
/* PLL VCO boost interface : source selection */
/* pll_vco_boost_set : Source selection for pll_vco_boost_set */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_BOOST_D2R_IF_SRC_SEL_PLL_VCO_BOOST_SET_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_BOOST_D2R_IF_SRC_SEL_PLL_VCO_BOOST_SET_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_BOOST_D2R_IF_SRC_SEL_PLL_VCO_BOOST_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_BOOST_D2R_IF_SRC_SEL_PLL_VCO_BOOST_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_BOOST_D2R_IF_SRC_SEL_PLL_VCO_BOOST_SET_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_BOOST_D2R_IF_SRC_SEL_PLL_VCO_BOOST_SET_TMU_MASK 0x1
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_vco_boost_set : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_vco_boost_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_BOOST_D2R_IF_SRC_SEL_RST 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_VCO_BOOST_D2R_IF_SRC_SEL_ADDR  0x4001d434


/* pa_0_d2r_if_val register */
/*----------------------*/
/* PA interface : regfile value (part 0) */
/* pa_core_enable_1v1 : TBD */
/* pa_powerstage_enable_1v1 : TBD */
/* pa_slices_i_1v1_set : TBD */
#define EXTAPB_REGFILE_TRANSCEIVER_PA_0_D2R_IF_VAL_PA_CORE_ENABLE_1V1_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PA_0_D2R_IF_VAL_PA_CORE_ENABLE_1V1_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_PA_0_D2R_IF_VAL_PA_POWERSTAGE_ENABLE_1V1_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_PA_0_D2R_IF_VAL_PA_POWERSTAGE_ENABLE_1V1_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_PA_0_D2R_IF_VAL_PA_SLICES_I_1V1_SET_MASK 0x07fc
#define EXTAPB_REGFILE_TRANSCEIVER_PA_0_D2R_IF_VAL_PA_SLICES_I_1V1_SET_POS  2
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pa_core_enable_1v1 : 1;
    unsigned int pa_powerstage_enable_1v1 : 1;
    unsigned int pa_slices_i_1v1_set : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pa_0_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_PA_0_D2R_IF_VAL_RST 0x3fc
#define EXTAPB_REGFILE_TRANSCEIVER_PA_0_D2R_IF_VAL_ADDR  0x4001d438


/* pa_0_d2r_if_src_sel register */
/*----------------------*/
/* PA interface : source selection (part0) */
/* pa_core_enable_1v1 : Source selection for pa_core_enable_1v1 */
/* pa_powerstage_enable_1v1 : Source selection for pa_core_enable_1v1 */
/* pa_slices_i_1v1_set : Source selection for pa_core_enable_1v1 */
#define EXTAPB_REGFILE_TRANSCEIVER_PA_0_D2R_IF_SRC_SEL_PA_CORE_ENABLE_1V1_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PA_0_D2R_IF_SRC_SEL_PA_CORE_ENABLE_1V1_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_PA_0_D2R_IF_SRC_SEL_PA_CORE_ENABLE_1V1_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_PA_0_D2R_IF_SRC_SEL_PA_CORE_ENABLE_1V1_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PA_0_D2R_IF_SRC_SEL_PA_CORE_ENABLE_1V1_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_PA_0_D2R_IF_SRC_SEL_PA_CORE_ENABLE_1V1_TMU_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_PA_0_D2R_IF_SRC_SEL_PA_POWERSTAGE_ENABLE_1V1_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_PA_0_D2R_IF_SRC_SEL_PA_POWERSTAGE_ENABLE_1V1_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_PA_0_D2R_IF_SRC_SEL_PA_POWERSTAGE_ENABLE_1V1_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_PA_0_D2R_IF_SRC_SEL_PA_POWERSTAGE_ENABLE_1V1_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PA_0_D2R_IF_SRC_SEL_PA_POWERSTAGE_ENABLE_1V1_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_PA_0_D2R_IF_SRC_SEL_PA_POWERSTAGE_ENABLE_1V1_TMU_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_PA_0_D2R_IF_SRC_SEL_PA_SLICES_I_1V1_SET_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_PA_0_D2R_IF_SRC_SEL_PA_SLICES_I_1V1_SET_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_PA_0_D2R_IF_SRC_SEL_PA_SLICES_I_1V1_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_PA_0_D2R_IF_SRC_SEL_PA_SLICES_I_1V1_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PA_0_D2R_IF_SRC_SEL_PA_SLICES_I_1V1_SET_PA_CONTROL 1
#define EXTAPB_REGFILE_TRANSCEIVER_PA_0_D2R_IF_SRC_SEL_PA_SLICES_I_1V1_SET_PA_CONTROL_MASK 0x4
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pa_core_enable_1v1 : 1;
    unsigned int pa_powerstage_enable_1v1 : 1;
    unsigned int pa_slices_i_1v1_set : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pa_0_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_PA_0_D2R_IF_SRC_SEL_RST 0x7
#define EXTAPB_REGFILE_TRANSCEIVER_PA_0_D2R_IF_SRC_SEL_ADDR  0x4001d43c


/* pa_0_d2r_if_pol_invert_en register */
/*----------------------*/
/* PA interface : polarity invert control (part0) */
/* pa_core_enable_1v1 : Polarity invert control for pa_core_enable_1v1 */
/* pa_powerstage_enable_1v1 : Polarity invert control for pa_powerstage_enable_1v1 */
#define EXTAPB_REGFILE_TRANSCEIVER_PA_0_D2R_IF_POL_INVERT_EN_PA_CORE_ENABLE_1V1_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PA_0_D2R_IF_POL_INVERT_EN_PA_CORE_ENABLE_1V1_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_PA_0_D2R_IF_POL_INVERT_EN_PA_CORE_ENABLE_1V1_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_PA_0_D2R_IF_POL_INVERT_EN_PA_CORE_ENABLE_1V1_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PA_0_D2R_IF_POL_INVERT_EN_PA_CORE_ENABLE_1V1_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_PA_0_D2R_IF_POL_INVERT_EN_PA_CORE_ENABLE_1V1_EN_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_PA_0_D2R_IF_POL_INVERT_EN_PA_POWERSTAGE_ENABLE_1V1_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_PA_0_D2R_IF_POL_INVERT_EN_PA_POWERSTAGE_ENABLE_1V1_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_PA_0_D2R_IF_POL_INVERT_EN_PA_POWERSTAGE_ENABLE_1V1_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_PA_0_D2R_IF_POL_INVERT_EN_PA_POWERSTAGE_ENABLE_1V1_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PA_0_D2R_IF_POL_INVERT_EN_PA_POWERSTAGE_ENABLE_1V1_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_PA_0_D2R_IF_POL_INVERT_EN_PA_POWERSTAGE_ENABLE_1V1_EN_MASK 0x2
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pa_core_enable_1v1 : 1;
    unsigned int pa_powerstage_enable_1v1 : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pa_0_d2r_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_PA_0_D2R_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PA_0_D2R_IF_POL_INVERT_EN_ADDR  0x4001d440


/* pa_1_d2r_if_val register */
/*----------------------*/
/* PA interface : regfile value (part 1) */
/* pa_nmosgate_i_1v1_set : TBD */
/* pa_pmosgate_i_1v1_set : TBD */
/* pa_dcc_i_1v1_set : TBD */
#define EXTAPB_REGFILE_TRANSCEIVER_PA_1_D2R_IF_VAL_PA_NMOSGATE_I_1V1_SET_MASK 0x0007
#define EXTAPB_REGFILE_TRANSCEIVER_PA_1_D2R_IF_VAL_PA_NMOSGATE_I_1V1_SET_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_PA_1_D2R_IF_VAL_PA_PMOSGATE_I_1V1_SET_MASK 0x0038
#define EXTAPB_REGFILE_TRANSCEIVER_PA_1_D2R_IF_VAL_PA_PMOSGATE_I_1V1_SET_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_PA_1_D2R_IF_VAL_PA_DCC_I_1V1_SET_MASK 0x03c0
#define EXTAPB_REGFILE_TRANSCEIVER_PA_1_D2R_IF_VAL_PA_DCC_I_1V1_SET_POS  6
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pa_nmosgate_i_1v1_set : 3;
    unsigned int pa_pmosgate_i_1v1_set : 3;
    unsigned int pa_dcc_i_1v1_set : 4;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pa_1_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_PA_1_D2R_IF_VAL_RST 0x124
#define EXTAPB_REGFILE_TRANSCEIVER_PA_1_D2R_IF_VAL_ADDR  0x4001d444


/* transfo_d2r_if_val register */
/*----------------------*/
/* transfo interface: regfile value */
/* transfo_cap_sec_tx_i_1v1_set : TBD */
/* transfo_cap_prim_tune_i_1v1_set : TBD */
/* transfo_cap_filter_tune_i_1v1_set : TBD */
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_D2R_IF_VAL_TRANSFO_CAP_SEC_TX_I_1V1_SET_MASK 0x0007
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_D2R_IF_VAL_TRANSFO_CAP_SEC_TX_I_1V1_SET_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_D2R_IF_VAL_TRANSFO_CAP_PRIM_TUNE_I_1V1_SET_MASK 0x0038
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_D2R_IF_VAL_TRANSFO_CAP_PRIM_TUNE_I_1V1_SET_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_D2R_IF_VAL_TRANSFO_CAP_FILTER_TUNE_I_1V1_SET_MASK 0x01c0
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_D2R_IF_VAL_TRANSFO_CAP_FILTER_TUNE_I_1V1_SET_POS  6
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int transfo_cap_sec_tx_i_1v1_set : 3;
    unsigned int transfo_cap_prim_tune_i_1v1_set : 3;
    unsigned int transfo_cap_filter_tune_i_1v1_set : 3;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_transfo_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_D2R_IF_VAL_RST 0x124
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_D2R_IF_VAL_ADDR  0x4001d448


/* transfo_d2r_if_src_sel register */
/*----------------------*/
/* transfo interface : source selection */
/* transfo_cap_sec_tx_i_1v1_set : TBD */
/* transfo_cap_prim_tune_i_1v1_set : TBD */
/* transfo_cap_filter_tune_i_1v1_set : TBD */
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_D2R_IF_SRC_SEL_TRANSFO_CAP_SEC_TX_I_1V1_SET_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_D2R_IF_SRC_SEL_TRANSFO_CAP_SEC_TX_I_1V1_SET_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_D2R_IF_SRC_SEL_TRANSFO_CAP_SEC_TX_I_1V1_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_D2R_IF_SRC_SEL_TRANSFO_CAP_SEC_TX_I_1V1_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_D2R_IF_SRC_SEL_TRANSFO_CAP_SEC_TX_I_1V1_SET_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_D2R_IF_SRC_SEL_TRANSFO_CAP_SEC_TX_I_1V1_SET_TMU_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_D2R_IF_SRC_SEL_TRANSFO_CAP_PRIM_TUNE_I_1V1_SET_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_D2R_IF_SRC_SEL_TRANSFO_CAP_PRIM_TUNE_I_1V1_SET_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_D2R_IF_SRC_SEL_TRANSFO_CAP_PRIM_TUNE_I_1V1_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_D2R_IF_SRC_SEL_TRANSFO_CAP_PRIM_TUNE_I_1V1_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_D2R_IF_SRC_SEL_TRANSFO_CAP_PRIM_TUNE_I_1V1_SET_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_D2R_IF_SRC_SEL_TRANSFO_CAP_PRIM_TUNE_I_1V1_SET_TMU_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_D2R_IF_SRC_SEL_TRANSFO_CAP_FILTER_TUNE_I_1V1_SET_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_D2R_IF_SRC_SEL_TRANSFO_CAP_FILTER_TUNE_I_1V1_SET_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_D2R_IF_SRC_SEL_TRANSFO_CAP_FILTER_TUNE_I_1V1_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_D2R_IF_SRC_SEL_TRANSFO_CAP_FILTER_TUNE_I_1V1_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_D2R_IF_SRC_SEL_TRANSFO_CAP_FILTER_TUNE_I_1V1_SET_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_D2R_IF_SRC_SEL_TRANSFO_CAP_FILTER_TUNE_I_1V1_SET_TMU_MASK 0x4
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int transfo_cap_sec_tx_i_1v1_set : 1;
    unsigned int transfo_cap_prim_tune_i_1v1_set : 1;
    unsigned int transfo_cap_filter_tune_i_1v1_set : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_transfo_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_D2R_IF_SRC_SEL_RST 0x7
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_D2R_IF_SRC_SEL_ADDR  0x4001d44c


/* transfo_rx_d2r_if_val register */
/*----------------------*/
/* transfo interface : regfile RX value */
/* transfo_cap_sec_tx_i_1v1_set : TBD */
/* transfo_cap_prim_tune_i_1v1_set : TBD */
/* transfo_cap_filter_tune_i_1v1_set : TBD */
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_RX_D2R_IF_VAL_TRANSFO_CAP_SEC_TX_I_1V1_SET_MASK 0x0007
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_RX_D2R_IF_VAL_TRANSFO_CAP_SEC_TX_I_1V1_SET_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_RX_D2R_IF_VAL_TRANSFO_CAP_PRIM_TUNE_I_1V1_SET_MASK 0x0038
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_RX_D2R_IF_VAL_TRANSFO_CAP_PRIM_TUNE_I_1V1_SET_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_RX_D2R_IF_VAL_TRANSFO_CAP_FILTER_TUNE_I_1V1_SET_MASK 0x01c0
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_RX_D2R_IF_VAL_TRANSFO_CAP_FILTER_TUNE_I_1V1_SET_POS  6
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int transfo_cap_sec_tx_i_1v1_set : 3;
    unsigned int transfo_cap_prim_tune_i_1v1_set : 3;
    unsigned int transfo_cap_filter_tune_i_1v1_set : 3;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_transfo_rx_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_RX_D2R_IF_VAL_RST 0x124
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_RX_D2R_IF_VAL_ADDR  0x4001d450


/* transfo_tx_d2r_if_val register */
/*----------------------*/
/* transfo interface : regfile TX value */
/* transfo_cap_sec_tx_i_1v1_set : TBD */
/* transfo_cap_prim_tune_i_1v1_set : TBD */
/* transfo_cap_filter_tune_i_1v1_set : TBD */
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_TX_D2R_IF_VAL_TRANSFO_CAP_SEC_TX_I_1V1_SET_MASK 0x0007
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_TX_D2R_IF_VAL_TRANSFO_CAP_SEC_TX_I_1V1_SET_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_TX_D2R_IF_VAL_TRANSFO_CAP_PRIM_TUNE_I_1V1_SET_MASK 0x0038
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_TX_D2R_IF_VAL_TRANSFO_CAP_PRIM_TUNE_I_1V1_SET_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_TX_D2R_IF_VAL_TRANSFO_CAP_FILTER_TUNE_I_1V1_SET_MASK 0x01c0
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_TX_D2R_IF_VAL_TRANSFO_CAP_FILTER_TUNE_I_1V1_SET_POS  6
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int transfo_cap_sec_tx_i_1v1_set : 3;
    unsigned int transfo_cap_prim_tune_i_1v1_set : 3;
    unsigned int transfo_cap_filter_tune_i_1v1_set : 3;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_transfo_tx_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_TX_D2R_IF_VAL_RST 0x124
#define EXTAPB_REGFILE_TRANSCEIVER_TRANSFO_TX_D2R_IF_VAL_ADDR  0x4001d454


/* lo_d2r_if_val register */
/*----------------------*/
/* LO interface: regfile value */
/* rx_enable_1v1 : TBD */
/* tx_enable_1v1 : TBD */
#define EXTAPB_REGFILE_TRANSCEIVER_LO_D2R_IF_VAL_RX_ENABLE_1V1_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_LO_D2R_IF_VAL_RX_ENABLE_1V1_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_LO_D2R_IF_VAL_TX_ENABLE_1V1_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_LO_D2R_IF_VAL_TX_ENABLE_1V1_POS  1
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rx_enable_1v1 : 1;
    unsigned int tx_enable_1v1 : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_lo_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_LO_D2R_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LO_D2R_IF_VAL_ADDR  0x4001d458


/* lo_d2r_if_src_sel register */
/*----------------------*/
/* LO interface: source selection */
/* rx_enable_1v1 : Source selection for rx_enable_1v1 */
/* tx_enable_1v1 : Source selection for tx_enable_1v1 */
#define EXTAPB_REGFILE_TRANSCEIVER_LO_D2R_IF_SRC_SEL_RX_ENABLE_1V1_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_LO_D2R_IF_SRC_SEL_RX_ENABLE_1V1_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_LO_D2R_IF_SRC_SEL_RX_ENABLE_1V1_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_LO_D2R_IF_SRC_SEL_RX_ENABLE_1V1_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LO_D2R_IF_SRC_SEL_RX_ENABLE_1V1_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_LO_D2R_IF_SRC_SEL_RX_ENABLE_1V1_TMU_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_LO_D2R_IF_SRC_SEL_TX_ENABLE_1V1_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_LO_D2R_IF_SRC_SEL_TX_ENABLE_1V1_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_LO_D2R_IF_SRC_SEL_TX_ENABLE_1V1_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_LO_D2R_IF_SRC_SEL_TX_ENABLE_1V1_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LO_D2R_IF_SRC_SEL_TX_ENABLE_1V1_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_LO_D2R_IF_SRC_SEL_TX_ENABLE_1V1_TMU_MASK 0x2
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rx_enable_1v1 : 1;
    unsigned int tx_enable_1v1 : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_lo_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_LO_D2R_IF_SRC_SEL_RST 0x3
#define EXTAPB_REGFILE_TRANSCEIVER_LO_D2R_IF_SRC_SEL_ADDR  0x4001d45c


/* lo_d2r_if_pol_invert_en register */
/*----------------------*/
/* LO interface: polarity invert control */
/* rx_enable_1v1 : Polarity invert control for rx_enable_1v1 */
/* tx_enable_1v1 : Polarity invert control for tx_enable_1v1 */
#define EXTAPB_REGFILE_TRANSCEIVER_LO_D2R_IF_POL_INVERT_EN_RX_ENABLE_1V1_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_LO_D2R_IF_POL_INVERT_EN_RX_ENABLE_1V1_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_LO_D2R_IF_POL_INVERT_EN_RX_ENABLE_1V1_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_LO_D2R_IF_POL_INVERT_EN_RX_ENABLE_1V1_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LO_D2R_IF_POL_INVERT_EN_RX_ENABLE_1V1_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_LO_D2R_IF_POL_INVERT_EN_RX_ENABLE_1V1_EN_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_LO_D2R_IF_POL_INVERT_EN_TX_ENABLE_1V1_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_LO_D2R_IF_POL_INVERT_EN_TX_ENABLE_1V1_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_LO_D2R_IF_POL_INVERT_EN_TX_ENABLE_1V1_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_LO_D2R_IF_POL_INVERT_EN_TX_ENABLE_1V1_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LO_D2R_IF_POL_INVERT_EN_TX_ENABLE_1V1_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_LO_D2R_IF_POL_INVERT_EN_TX_ENABLE_1V1_EN_MASK 0x2
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rx_enable_1v1 : 1;
    unsigned int tx_enable_1v1 : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_lo_d2r_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_LO_D2R_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LO_D2R_IF_POL_INVERT_EN_ADDR  0x4001d460


/* ldo_pa_d2r_if_val register */
/*----------------------*/
/* LDO_PA interface: regfile value */
/* powerstage_enable_1v8 : Enable the Powerstage PA LDO output */
/* powerstage_vadj_i_1v8_set : Output Voltage adjustment for powerstage voltage */
/* powerstage_bypass_i_1v8_set : Activate LDO powerstage bypass */
/* powerstage_highz_i_1v8_set : Put the output in high impedance state */
/* powerstage_ibias_i_1v8_set : Adjust the biasing current */
/* powerstage_enable_1v8_rx : Enable the Powerstage PA LDO output (RX mode value) */
/* powerstage_enable_1v8_tx : Enable the Powerstage PA LDO output (TX mode value) */
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_VAL_POWERSTAGE_ENABLE_1V8_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_VAL_POWERSTAGE_ENABLE_1V8_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_VAL_POWERSTAGE_VADJ_I_1V8_SET_MASK 0x003e
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_VAL_POWERSTAGE_VADJ_I_1V8_SET_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_VAL_POWERSTAGE_BYPASS_I_1V8_SET_MASK 0x0040
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_VAL_POWERSTAGE_BYPASS_I_1V8_SET_POS  6
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_VAL_POWERSTAGE_HIGHZ_I_1V8_SET_MASK 0x0080
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_VAL_POWERSTAGE_HIGHZ_I_1V8_SET_POS  7
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_VAL_POWERSTAGE_IBIAS_I_1V8_SET_MASK 0x0300
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_VAL_POWERSTAGE_IBIAS_I_1V8_SET_POS  8
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_VAL_POWERSTAGE_ENABLE_1V8_RX_MASK 0x0400
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_VAL_POWERSTAGE_ENABLE_1V8_RX_POS  10
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_VAL_POWERSTAGE_ENABLE_1V8_TX_MASK 0x0800
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_VAL_POWERSTAGE_ENABLE_1V8_TX_POS  11
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int powerstage_enable_1v8 : 1;
    unsigned int powerstage_vadj_i_1v8_set : 5;
    unsigned int powerstage_bypass_i_1v8_set : 1;
    unsigned int powerstage_highz_i_1v8_set : 1;
    unsigned int powerstage_ibias_i_1v8_set : 2;
    unsigned int powerstage_enable_1v8_rx : 1;
    unsigned int powerstage_enable_1v8_tx : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_ldo_pa_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_VAL_RST 0x16
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_VAL_ADDR  0x4001d464


/* ldo_pa_d2r_if_src_sel register */
/*----------------------*/
/* LDO_PA interface: source selection */
/* powerstage_enable_1v8 : Source selection for powerstage_enable_1v8 */
/* powerstage_enable_1v8_rx : Source selection for powerstage_enable_1v8_rx */
/* powerstage_enable_1v8_tx : Source selection for powerstage_enable_1v8_tx */
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_SRC_SEL_POWERSTAGE_ENABLE_1V8_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_SRC_SEL_POWERSTAGE_ENABLE_1V8_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_SRC_SEL_POWERSTAGE_ENABLE_1V8_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_SRC_SEL_POWERSTAGE_ENABLE_1V8_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_SRC_SEL_POWERSTAGE_ENABLE_1V8_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_SRC_SEL_POWERSTAGE_ENABLE_1V8_TMU_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_SRC_SEL_POWERSTAGE_ENABLE_1V8_RX_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_SRC_SEL_POWERSTAGE_ENABLE_1V8_RX_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_SRC_SEL_POWERSTAGE_ENABLE_1V8_RX_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_SRC_SEL_POWERSTAGE_ENABLE_1V8_RX_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_SRC_SEL_POWERSTAGE_ENABLE_1V8_RX_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_SRC_SEL_POWERSTAGE_ENABLE_1V8_RX_TMU_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_SRC_SEL_POWERSTAGE_ENABLE_1V8_TX_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_SRC_SEL_POWERSTAGE_ENABLE_1V8_TX_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_SRC_SEL_POWERSTAGE_ENABLE_1V8_TX_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_SRC_SEL_POWERSTAGE_ENABLE_1V8_TX_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_SRC_SEL_POWERSTAGE_ENABLE_1V8_TX_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_SRC_SEL_POWERSTAGE_ENABLE_1V8_TX_TMU_MASK 0x4
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int powerstage_enable_1v8 : 1;
    unsigned int powerstage_enable_1v8_rx : 1;
    unsigned int powerstage_enable_1v8_tx : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_ldo_pa_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_SRC_SEL_RST 0x5
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_SRC_SEL_ADDR  0x4001d468


/* ldo_pa_d2r_if_pol_invert_en register */
/*----------------------*/
/* LDO_PA interface: polarity invert control */
/* powerstage_enable_1v8 : Polarity invert control for powerstage_enable_1v8 */
/* powerstage_bypass_i_1v8_set : Polarity invert control for powerstage_bypass_i_1v8_pass */
/* powerstage_highz_i_1v8_set : Polarity invert control for powerstage_highz_i_1v8_set */
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_POL_INVERT_EN_POWERSTAGE_ENABLE_1V8_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_POL_INVERT_EN_POWERSTAGE_ENABLE_1V8_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_POL_INVERT_EN_POWERSTAGE_ENABLE_1V8_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_POL_INVERT_EN_POWERSTAGE_ENABLE_1V8_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_POL_INVERT_EN_POWERSTAGE_ENABLE_1V8_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_POL_INVERT_EN_POWERSTAGE_ENABLE_1V8_EN_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_POL_INVERT_EN_POWERSTAGE_BYPASS_I_1V8_SET_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_POL_INVERT_EN_POWERSTAGE_BYPASS_I_1V8_SET_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_POL_INVERT_EN_POWERSTAGE_BYPASS_I_1V8_SET_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_POL_INVERT_EN_POWERSTAGE_BYPASS_I_1V8_SET_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_POL_INVERT_EN_POWERSTAGE_BYPASS_I_1V8_SET_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_POL_INVERT_EN_POWERSTAGE_BYPASS_I_1V8_SET_EN_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_POL_INVERT_EN_POWERSTAGE_HIGHZ_I_1V8_SET_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_POL_INVERT_EN_POWERSTAGE_HIGHZ_I_1V8_SET_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_POL_INVERT_EN_POWERSTAGE_HIGHZ_I_1V8_SET_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_POL_INVERT_EN_POWERSTAGE_HIGHZ_I_1V8_SET_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_POL_INVERT_EN_POWERSTAGE_HIGHZ_I_1V8_SET_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_POL_INVERT_EN_POWERSTAGE_HIGHZ_I_1V8_SET_EN_MASK 0x4
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int powerstage_enable_1v8 : 1;
    unsigned int powerstage_bypass_i_1v8_set : 1;
    unsigned int powerstage_highz_i_1v8_set : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_ldo_pa_d2r_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_PA_D2R_IF_POL_INVERT_EN_ADDR  0x4001d46c


/* ldo_if_d2r_if_val register */
/*----------------------*/
/* LDO_IF interface: regfile value */
/* bypass_i_1v8_set : TBD */
/* enable_1v8 : TBD */
/* highz_i_1v8_set : TBD */
/* vout_i_1v8_set : TBD */
/* ibias_i_1v8_set : TBD */
/* stabmode_i_1v8_set : TBD */
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_IF_D2R_IF_VAL_BYPASS_I_1V8_SET_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_IF_D2R_IF_VAL_BYPASS_I_1V8_SET_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_IF_D2R_IF_VAL_ENABLE_1V8_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_IF_D2R_IF_VAL_ENABLE_1V8_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_IF_D2R_IF_VAL_HIGHZ_I_1V8_SET_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_IF_D2R_IF_VAL_HIGHZ_I_1V8_SET_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_IF_D2R_IF_VAL_VOUT_I_1V8_SET_MASK 0x0038
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_IF_D2R_IF_VAL_VOUT_I_1V8_SET_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_IF_D2R_IF_VAL_IBIAS_I_1V8_SET_MASK 0x00c0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_IF_D2R_IF_VAL_IBIAS_I_1V8_SET_POS  6
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_IF_D2R_IF_VAL_STABMODE_I_1V8_SET_MASK 0x0300
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_IF_D2R_IF_VAL_STABMODE_I_1V8_SET_POS  8
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int bypass_i_1v8_set : 1;
    unsigned int enable_1v8 : 1;
    unsigned int highz_i_1v8_set : 1;
    unsigned int vout_i_1v8_set : 3;
    unsigned int ibias_i_1v8_set : 2;
    unsigned int stabmode_i_1v8_set : 2;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_ldo_if_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_IF_D2R_IF_VAL_RST 0x168
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_IF_D2R_IF_VAL_ADDR  0x4001d470


/* ldo_if_d2r_if_src_sel register */
/*----------------------*/
/* LDO_IF interface: source selection */
/* enable_1v8 : Source selection for enable_1v8 */
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_IF_D2R_IF_SRC_SEL_ENABLE_1V8_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_IF_D2R_IF_SRC_SEL_ENABLE_1V8_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_IF_D2R_IF_SRC_SEL_ENABLE_1V8_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_IF_D2R_IF_SRC_SEL_ENABLE_1V8_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_IF_D2R_IF_SRC_SEL_ENABLE_1V8_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_IF_D2R_IF_SRC_SEL_ENABLE_1V8_TMU_MASK 0x1
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int enable_1v8 : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_ldo_if_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_IF_D2R_IF_SRC_SEL_RST 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_IF_D2R_IF_SRC_SEL_ADDR  0x4001d474


/* ldo_if_d2r_if_pol_invert_en register */
/*----------------------*/
/* LDO_IF interface: polarity invert control */
/* bypass_i_1v8_set : Polarity invert control for bypass_i_1v8_set */
/* enable_1v8 : Polarity invert control for enable_1v8 */
/* highz_i_1v8_set : Polarity invert control for highz_i_1v8_set */
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_IF_D2R_IF_POL_INVERT_EN_BYPASS_I_1V8_SET_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_IF_D2R_IF_POL_INVERT_EN_BYPASS_I_1V8_SET_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_IF_D2R_IF_POL_INVERT_EN_BYPASS_I_1V8_SET_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_IF_D2R_IF_POL_INVERT_EN_BYPASS_I_1V8_SET_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_IF_D2R_IF_POL_INVERT_EN_BYPASS_I_1V8_SET_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_IF_D2R_IF_POL_INVERT_EN_BYPASS_I_1V8_SET_EN_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_IF_D2R_IF_POL_INVERT_EN_ENABLE_1V8_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_IF_D2R_IF_POL_INVERT_EN_ENABLE_1V8_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_IF_D2R_IF_POL_INVERT_EN_ENABLE_1V8_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_IF_D2R_IF_POL_INVERT_EN_ENABLE_1V8_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_IF_D2R_IF_POL_INVERT_EN_ENABLE_1V8_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_IF_D2R_IF_POL_INVERT_EN_ENABLE_1V8_EN_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_IF_D2R_IF_POL_INVERT_EN_HIGHZ_I_1V8_SET_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_IF_D2R_IF_POL_INVERT_EN_HIGHZ_I_1V8_SET_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_IF_D2R_IF_POL_INVERT_EN_HIGHZ_I_1V8_SET_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_IF_D2R_IF_POL_INVERT_EN_HIGHZ_I_1V8_SET_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_IF_D2R_IF_POL_INVERT_EN_HIGHZ_I_1V8_SET_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_IF_D2R_IF_POL_INVERT_EN_HIGHZ_I_1V8_SET_EN_MASK 0x4
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int bypass_i_1v8_set : 1;
    unsigned int enable_1v8 : 1;
    unsigned int highz_i_1v8_set : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_ldo_if_d2r_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_IF_D2R_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_IF_D2R_IF_POL_INVERT_EN_ADDR  0x4001d478


/* ldo_synth_d2r_if_val register */
/*----------------------*/
/* LDO_synth interface: regfile value */
/* bypass_i_1v8_set : TBD */
/* enable_1v8 : TBD */
/* highz_i_1v8_set : TBD */
/* vout_i_1v8_set : TBD */
/* ibias_i_1v8_set : TBD */
/* stabmode_i_1v8_set : TBD */
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_SYNTH_D2R_IF_VAL_BYPASS_I_1V8_SET_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_SYNTH_D2R_IF_VAL_BYPASS_I_1V8_SET_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_SYNTH_D2R_IF_VAL_ENABLE_1V8_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_SYNTH_D2R_IF_VAL_ENABLE_1V8_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_SYNTH_D2R_IF_VAL_HIGHZ_I_1V8_SET_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_SYNTH_D2R_IF_VAL_HIGHZ_I_1V8_SET_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_SYNTH_D2R_IF_VAL_VOUT_I_1V8_SET_MASK 0x0038
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_SYNTH_D2R_IF_VAL_VOUT_I_1V8_SET_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_SYNTH_D2R_IF_VAL_IBIAS_I_1V8_SET_MASK 0x00c0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_SYNTH_D2R_IF_VAL_IBIAS_I_1V8_SET_POS  6
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_SYNTH_D2R_IF_VAL_STABMODE_I_1V8_SET_MASK 0x0300
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_SYNTH_D2R_IF_VAL_STABMODE_I_1V8_SET_POS  8
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int bypass_i_1v8_set : 1;
    unsigned int enable_1v8 : 1;
    unsigned int highz_i_1v8_set : 1;
    unsigned int vout_i_1v8_set : 3;
    unsigned int ibias_i_1v8_set : 2;
    unsigned int stabmode_i_1v8_set : 2;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_ldo_synth_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_SYNTH_D2R_IF_VAL_RST 0x168
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_SYNTH_D2R_IF_VAL_ADDR  0x4001d47c


/* ldo_synth_d2r_if_src_sel register */
/*----------------------*/
/* LDO_synth interface: source selection */
/* enable_1v8 : Source selection for enable_1v8 */
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_SYNTH_D2R_IF_SRC_SEL_ENABLE_1V8_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_SYNTH_D2R_IF_SRC_SEL_ENABLE_1V8_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_SYNTH_D2R_IF_SRC_SEL_ENABLE_1V8_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_SYNTH_D2R_IF_SRC_SEL_ENABLE_1V8_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_SYNTH_D2R_IF_SRC_SEL_ENABLE_1V8_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_SYNTH_D2R_IF_SRC_SEL_ENABLE_1V8_TMU_MASK 0x1
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int enable_1v8 : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_ldo_synth_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_SYNTH_D2R_IF_SRC_SEL_RST 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_SYNTH_D2R_IF_SRC_SEL_ADDR  0x4001d480


/* ldo_synth_d2r_if_pol_invert_en register */
/*----------------------*/
/* LDO_synth interface: polarity invert control */
/* bypass_i_1v8_set : Polarity invert control for bypass_i_1v8_set */
/* enable_1v8 : Polarity invert control for enable_1v8 */
/* highz_i_1v8_set : Polarity invert control for highz_i_1v8_set */
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_SYNTH_D2R_IF_POL_INVERT_EN_BYPASS_I_1V8_SET_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_SYNTH_D2R_IF_POL_INVERT_EN_BYPASS_I_1V8_SET_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_SYNTH_D2R_IF_POL_INVERT_EN_BYPASS_I_1V8_SET_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_SYNTH_D2R_IF_POL_INVERT_EN_BYPASS_I_1V8_SET_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_SYNTH_D2R_IF_POL_INVERT_EN_BYPASS_I_1V8_SET_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_SYNTH_D2R_IF_POL_INVERT_EN_BYPASS_I_1V8_SET_EN_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_SYNTH_D2R_IF_POL_INVERT_EN_ENABLE_1V8_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_SYNTH_D2R_IF_POL_INVERT_EN_ENABLE_1V8_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_SYNTH_D2R_IF_POL_INVERT_EN_ENABLE_1V8_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_SYNTH_D2R_IF_POL_INVERT_EN_ENABLE_1V8_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_SYNTH_D2R_IF_POL_INVERT_EN_ENABLE_1V8_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_SYNTH_D2R_IF_POL_INVERT_EN_ENABLE_1V8_EN_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_SYNTH_D2R_IF_POL_INVERT_EN_HIGHZ_I_1V8_SET_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_SYNTH_D2R_IF_POL_INVERT_EN_HIGHZ_I_1V8_SET_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_SYNTH_D2R_IF_POL_INVERT_EN_HIGHZ_I_1V8_SET_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_SYNTH_D2R_IF_POL_INVERT_EN_HIGHZ_I_1V8_SET_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_SYNTH_D2R_IF_POL_INVERT_EN_HIGHZ_I_1V8_SET_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_SYNTH_D2R_IF_POL_INVERT_EN_HIGHZ_I_1V8_SET_EN_MASK 0x4
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int bypass_i_1v8_set : 1;
    unsigned int enable_1v8 : 1;
    unsigned int highz_i_1v8_set : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_ldo_synth_d2r_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_SYNTH_D2R_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_SYNTH_D2R_IF_POL_INVERT_EN_ADDR  0x4001d484


/* ldo_vco_d2r_if_val register */
/*----------------------*/
/* LDO_PLL interface: regfile value */
/* bypass_i_1v8_set : TBD */
/* enable_1v8 : TBD */
/* highz_i_1v8_set : TBD */
/* vout_i_1v8_set : TBD */
/* ibias_i_1v8_set : TBD */
/* stabmode_i_1v8_set : TBD */
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_VCO_D2R_IF_VAL_BYPASS_I_1V8_SET_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_VCO_D2R_IF_VAL_BYPASS_I_1V8_SET_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_VCO_D2R_IF_VAL_ENABLE_1V8_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_VCO_D2R_IF_VAL_ENABLE_1V8_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_VCO_D2R_IF_VAL_HIGHZ_I_1V8_SET_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_VCO_D2R_IF_VAL_HIGHZ_I_1V8_SET_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_VCO_D2R_IF_VAL_VOUT_I_1V8_SET_MASK 0x0038
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_VCO_D2R_IF_VAL_VOUT_I_1V8_SET_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_VCO_D2R_IF_VAL_IBIAS_I_1V8_SET_MASK 0x00c0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_VCO_D2R_IF_VAL_IBIAS_I_1V8_SET_POS  6
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_VCO_D2R_IF_VAL_STABMODE_I_1V8_SET_MASK 0x0300
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_VCO_D2R_IF_VAL_STABMODE_I_1V8_SET_POS  8
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int bypass_i_1v8_set : 1;
    unsigned int enable_1v8 : 1;
    unsigned int highz_i_1v8_set : 1;
    unsigned int vout_i_1v8_set : 3;
    unsigned int ibias_i_1v8_set : 2;
    unsigned int stabmode_i_1v8_set : 2;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_ldo_vco_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_VCO_D2R_IF_VAL_RST 0x168
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_VCO_D2R_IF_VAL_ADDR  0x4001d488


/* ldo_vco_d2r_if_src_sel register */
/*----------------------*/
/* LDO_PLL interface: source selection */
/* enable_1v8 : Source selection for enable_1v8 */
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_VCO_D2R_IF_SRC_SEL_ENABLE_1V8_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_VCO_D2R_IF_SRC_SEL_ENABLE_1V8_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_VCO_D2R_IF_SRC_SEL_ENABLE_1V8_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_VCO_D2R_IF_SRC_SEL_ENABLE_1V8_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_VCO_D2R_IF_SRC_SEL_ENABLE_1V8_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_VCO_D2R_IF_SRC_SEL_ENABLE_1V8_TMU_MASK 0x1
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int enable_1v8 : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_ldo_vco_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_VCO_D2R_IF_SRC_SEL_RST 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_VCO_D2R_IF_SRC_SEL_ADDR  0x4001d48c


/* ldo_vco_d2r_if_pol_invert_en register */
/*----------------------*/
/* LDO_PLL interface: polarity invert control */
/* bypass_i_1v8_set : Polarity invert control for bypass_i_1v8_set */
/* enable_1v8 : Polarity invert control for enable_1v8 */
/* highz_i_1v8_set : Polarity invert control for highz_i_1v8_set */
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_VCO_D2R_IF_POL_INVERT_EN_BYPASS_I_1V8_SET_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_VCO_D2R_IF_POL_INVERT_EN_BYPASS_I_1V8_SET_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_VCO_D2R_IF_POL_INVERT_EN_BYPASS_I_1V8_SET_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_VCO_D2R_IF_POL_INVERT_EN_BYPASS_I_1V8_SET_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_VCO_D2R_IF_POL_INVERT_EN_BYPASS_I_1V8_SET_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_VCO_D2R_IF_POL_INVERT_EN_BYPASS_I_1V8_SET_EN_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_VCO_D2R_IF_POL_INVERT_EN_ENABLE_1V8_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_VCO_D2R_IF_POL_INVERT_EN_ENABLE_1V8_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_VCO_D2R_IF_POL_INVERT_EN_ENABLE_1V8_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_VCO_D2R_IF_POL_INVERT_EN_ENABLE_1V8_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_VCO_D2R_IF_POL_INVERT_EN_ENABLE_1V8_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_VCO_D2R_IF_POL_INVERT_EN_ENABLE_1V8_EN_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_VCO_D2R_IF_POL_INVERT_EN_HIGHZ_I_1V8_SET_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_VCO_D2R_IF_POL_INVERT_EN_HIGHZ_I_1V8_SET_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_VCO_D2R_IF_POL_INVERT_EN_HIGHZ_I_1V8_SET_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_VCO_D2R_IF_POL_INVERT_EN_HIGHZ_I_1V8_SET_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_VCO_D2R_IF_POL_INVERT_EN_HIGHZ_I_1V8_SET_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_VCO_D2R_IF_POL_INVERT_EN_HIGHZ_I_1V8_SET_EN_MASK 0x4
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int bypass_i_1v8_set : 1;
    unsigned int enable_1v8 : 1;
    unsigned int highz_i_1v8_set : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_ldo_vco_d2r_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_VCO_D2R_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_VCO_D2R_IF_POL_INVERT_EN_ADDR  0x4001d490


/* tone_pll_d2r_if_val register */
/*----------------------*/
/* Tone PLL interface: regfile value */
/* tone_pll_bypass_set : TBD */
/* tone_pll_ldo_enable : TBD */
/* tone_pll_ldo_fbres_set : TBD */
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_PLL_D2R_IF_VAL_TONE_PLL_BYPASS_SET_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_PLL_D2R_IF_VAL_TONE_PLL_BYPASS_SET_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_PLL_D2R_IF_VAL_TONE_PLL_LDO_ENABLE_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_PLL_D2R_IF_VAL_TONE_PLL_LDO_ENABLE_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_PLL_D2R_IF_VAL_TONE_PLL_LDO_FBRES_SET_MASK 0x007c
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_PLL_D2R_IF_VAL_TONE_PLL_LDO_FBRES_SET_POS  2
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int tone_pll_bypass_set : 1;
    unsigned int tone_pll_ldo_enable : 1;
    unsigned int tone_pll_ldo_fbres_set : 5;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_tone_pll_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_PLL_D2R_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_PLL_D2R_IF_VAL_ADDR  0x4001d494


/* tone_pll_d2r_if_src_sel register */
/*----------------------*/
/* Tone PLL interface : source selection */
/* tone_pll_ldo_enable : Source selection for tone_pll_ldo_enable */
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_PLL_D2R_IF_SRC_SEL_TONE_PLL_LDO_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_PLL_D2R_IF_SRC_SEL_TONE_PLL_LDO_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_PLL_D2R_IF_SRC_SEL_TONE_PLL_LDO_ENABLE_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_PLL_D2R_IF_SRC_SEL_TONE_PLL_LDO_ENABLE_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_PLL_D2R_IF_SRC_SEL_TONE_PLL_LDO_ENABLE_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_PLL_D2R_IF_SRC_SEL_TONE_PLL_LDO_ENABLE_TMU_MASK 0x1
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int tone_pll_ldo_enable : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_tone_pll_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_PLL_D2R_IF_SRC_SEL_RST 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_PLL_D2R_IF_SRC_SEL_ADDR  0x4001d498


/* tone_pll_d2r_if_pol_invert_en register */
/*----------------------*/
/* Tone PLL interface: polarity invert control */
/* tone_pll_bypass_set : Polarity invert control for tone_pll_bypass_set */
/* tone_pll_ldo_enable : Polarity invert control for tone_pll_ldo_enable */
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_PLL_D2R_IF_POL_INVERT_EN_TONE_PLL_BYPASS_SET_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_PLL_D2R_IF_POL_INVERT_EN_TONE_PLL_BYPASS_SET_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_PLL_D2R_IF_POL_INVERT_EN_TONE_PLL_BYPASS_SET_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_PLL_D2R_IF_POL_INVERT_EN_TONE_PLL_BYPASS_SET_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_PLL_D2R_IF_POL_INVERT_EN_TONE_PLL_BYPASS_SET_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_PLL_D2R_IF_POL_INVERT_EN_TONE_PLL_BYPASS_SET_EN_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_PLL_D2R_IF_POL_INVERT_EN_TONE_PLL_LDO_ENABLE_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_PLL_D2R_IF_POL_INVERT_EN_TONE_PLL_LDO_ENABLE_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_PLL_D2R_IF_POL_INVERT_EN_TONE_PLL_LDO_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_PLL_D2R_IF_POL_INVERT_EN_TONE_PLL_LDO_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_PLL_D2R_IF_POL_INVERT_EN_TONE_PLL_LDO_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_PLL_D2R_IF_POL_INVERT_EN_TONE_PLL_LDO_ENABLE_EN_MASK 0x2
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int tone_pll_bypass_set : 1;
    unsigned int tone_pll_ldo_enable : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_tone_pll_d2r_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_PLL_D2R_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TONE_PLL_D2R_IF_POL_INVERT_EN_ADDR  0x4001d49c


/* radio_id_r2d_if_val register */
/*----------------------*/
/* Radio ID interface: regfile value */
/* radio_id : Radio version ID */
#define EXTAPB_REGFILE_TRANSCEIVER_RADIO_ID_R2D_IF_VAL_RADIO_ID_MASK 0x003f
#define EXTAPB_REGFILE_TRANSCEIVER_RADIO_ID_R2D_IF_VAL_RADIO_ID_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int radio_id : 6;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_radio_id_r2d_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_RADIO_ID_R2D_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_RADIO_ID_R2D_IF_VAL_DYNAMIC true
#define EXTAPB_REGFILE_TRANSCEIVER_RADIO_ID_R2D_IF_VAL_SNAPCLOCK 0
#define EXTAPB_REGFILE_TRANSCEIVER_RADIO_ID_R2D_IF_VAL_ADDR  0x4001d4a0


/* pll_cur_mir_d2r_if_val register */
/*----------------------*/
/* PLL current mirror interface: regfile value */
/* pll_cur_mir_enable : Enable signal for current mirror */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CUR_MIR_D2R_IF_VAL_PLL_CUR_MIR_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CUR_MIR_D2R_IF_VAL_PLL_CUR_MIR_ENABLE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_cur_mir_enable : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_cur_mir_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CUR_MIR_D2R_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CUR_MIR_D2R_IF_VAL_ADDR  0x4001d4a4


/* pll_cur_mir_d2r_if_pol_invert_en register */
/*----------------------*/
/* PLL current mirror interface: polarity invert control */
/* pll_cur_mir_enable : Polarity invert control for pll_cur_mir_enable */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CUR_MIR_D2R_IF_POL_INVERT_EN_PLL_CUR_MIR_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CUR_MIR_D2R_IF_POL_INVERT_EN_PLL_CUR_MIR_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CUR_MIR_D2R_IF_POL_INVERT_EN_PLL_CUR_MIR_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CUR_MIR_D2R_IF_POL_INVERT_EN_PLL_CUR_MIR_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CUR_MIR_D2R_IF_POL_INVERT_EN_PLL_CUR_MIR_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CUR_MIR_D2R_IF_POL_INVERT_EN_PLL_CUR_MIR_ENABLE_EN_MASK 0x1
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_cur_mir_enable : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_cur_mir_d2r_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CUR_MIR_D2R_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_CUR_MIR_D2R_IF_POL_INVERT_EN_ADDR  0x4001d4a8


/* pll_divlo_d2r_if_val register */
/*----------------------*/
/* LO Divider interface: regfile value */
/* pll_divlo_divn_enable : Enable LO divider core */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVLO_D2R_IF_VAL_PLL_DIVLO_DIVN_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVLO_D2R_IF_VAL_PLL_DIVLO_DIVN_ENABLE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_divlo_divn_enable : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_divlo_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVLO_D2R_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVLO_D2R_IF_VAL_ADDR  0x4001d4ac


/* pll_divlo_d2r_if_src_sel register */
/*----------------------*/
/* LO Divider interface : source selection */
/* pll_divlo_divn_enable : Source selection for pll_divlo_divn_enable */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVLO_D2R_IF_SRC_SEL_PLL_DIVLO_DIVN_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVLO_D2R_IF_SRC_SEL_PLL_DIVLO_DIVN_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVLO_D2R_IF_SRC_SEL_PLL_DIVLO_DIVN_ENABLE_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVLO_D2R_IF_SRC_SEL_PLL_DIVLO_DIVN_ENABLE_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVLO_D2R_IF_SRC_SEL_PLL_DIVLO_DIVN_ENABLE_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVLO_D2R_IF_SRC_SEL_PLL_DIVLO_DIVN_ENABLE_TMU_MASK 0x1
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_divlo_divn_enable : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_divlo_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVLO_D2R_IF_SRC_SEL_RST 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVLO_D2R_IF_SRC_SEL_ADDR  0x4001d4b0


/* pll_divlo_d2r_if_pol_invert_en register */
/*----------------------*/
/* LO Divider interface: polarity invert control */
/* pll_divlo_divn_enable : Polarity invert control for pll_divlo_divn_enable */
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVLO_D2R_IF_POL_INVERT_EN_PLL_DIVLO_DIVN_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVLO_D2R_IF_POL_INVERT_EN_PLL_DIVLO_DIVN_ENABLE_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVLO_D2R_IF_POL_INVERT_EN_PLL_DIVLO_DIVN_ENABLE_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVLO_D2R_IF_POL_INVERT_EN_PLL_DIVLO_DIVN_ENABLE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVLO_D2R_IF_POL_INVERT_EN_PLL_DIVLO_DIVN_ENABLE_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVLO_D2R_IF_POL_INVERT_EN_PLL_DIVLO_DIVN_ENABLE_EN_MASK 0x1
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_divlo_divn_enable : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_pll_divlo_d2r_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVLO_D2R_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_PLL_DIVLO_D2R_IF_POL_INVERT_EN_ADDR  0x4001d4b4


/* ldo_rf_d2r_if_val register */
/*----------------------*/
/* LDO RF interface : regfile value */
/* core_enable_1v8 : Enable the Core PA LDO output */
/* core_vadj_i_1v8_set : Output Voltage adjustment for core voltage */
/* core_bypass_i_1v8_set : Activate LDO core bypass */
/* core_highz_i_1v8_set : Put the output in high impedance state */
/* core_ibias_i_1v8_set : Adjust the biasing current */
/* core_vadj_i_1v8_set_rx : Rx output voltage adjustment for core voltage */
/* core_vadj_i_1v8_set_tx : TX output voltage adjustment for core voltage */
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_VAL_CORE_ENABLE_1V8_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_VAL_CORE_ENABLE_1V8_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_VAL_CORE_VADJ_I_1V8_SET_MASK 0x000e
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_VAL_CORE_VADJ_I_1V8_SET_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_VAL_CORE_BYPASS_I_1V8_SET_MASK 0x0010
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_VAL_CORE_BYPASS_I_1V8_SET_POS  4
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_VAL_CORE_HIGHZ_I_1V8_SET_MASK 0x0020
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_VAL_CORE_HIGHZ_I_1V8_SET_POS  5
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_VAL_CORE_IBIAS_I_1V8_SET_MASK 0x00c0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_VAL_CORE_IBIAS_I_1V8_SET_POS  6
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_VAL_CORE_VADJ_I_1V8_SET_RX_MASK 0x0700
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_VAL_CORE_VADJ_I_1V8_SET_RX_POS  8
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_VAL_CORE_VADJ_I_1V8_SET_TX_MASK 0x3800
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_VAL_CORE_VADJ_I_1V8_SET_TX_POS  11
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int core_enable_1v8 : 1;
    unsigned int core_vadj_i_1v8_set : 3;
    unsigned int core_bypass_i_1v8_set : 1;
    unsigned int core_highz_i_1v8_set : 1;
    unsigned int core_ibias_i_1v8_set : 2;
    unsigned int core_vadj_i_1v8_set_rx : 3;
    unsigned int core_vadj_i_1v8_set_tx : 3;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_ldo_rf_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_VAL_ADDR  0x4001d4b8


/* ldo_rf_d2r_if_src_sel register */
/*----------------------*/
/* LDO RF interface : source selection */
/* core_enable_1v8 : Source selection for core_enable_1v8 */
/* core_vadj_i_1v8_set : Source selection for core_vadj_i_1v8_set */
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_SRC_SEL_CORE_ENABLE_1V8_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_SRC_SEL_CORE_ENABLE_1V8_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_SRC_SEL_CORE_ENABLE_1V8_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_SRC_SEL_CORE_ENABLE_1V8_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_SRC_SEL_CORE_ENABLE_1V8_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_SRC_SEL_CORE_ENABLE_1V8_TMU_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_SRC_SEL_CORE_VADJ_I_1V8_SET_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_SRC_SEL_CORE_VADJ_I_1V8_SET_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_SRC_SEL_CORE_VADJ_I_1V8_SET_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_SRC_SEL_CORE_VADJ_I_1V8_SET_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_SRC_SEL_CORE_VADJ_I_1V8_SET_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_SRC_SEL_CORE_VADJ_I_1V8_SET_TMU_MASK 0x2
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int core_enable_1v8 : 1;
    unsigned int core_vadj_i_1v8_set : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_ldo_rf_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_SRC_SEL_RST 0x3
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_SRC_SEL_ADDR  0x4001d4bc


/* ldo_rf_d2r_if_pol_invert_en register */
/*----------------------*/
/* LDO RF interface : polarity invert control */
/* core_enable_1v8 : Polarity invert control for core_enable_1v8 */
/* core_bypass_i_1v8_set : Polarity invert control for core_bypass_i_1v8_set */
/* core_highz_i_1v8_set : Polarity invert control for core_highz_i_1v8_set */
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_POL_INVERT_EN_CORE_ENABLE_1V8_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_POL_INVERT_EN_CORE_ENABLE_1V8_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_POL_INVERT_EN_CORE_ENABLE_1V8_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_POL_INVERT_EN_CORE_ENABLE_1V8_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_POL_INVERT_EN_CORE_ENABLE_1V8_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_POL_INVERT_EN_CORE_ENABLE_1V8_EN_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_POL_INVERT_EN_CORE_BYPASS_I_1V8_SET_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_POL_INVERT_EN_CORE_BYPASS_I_1V8_SET_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_POL_INVERT_EN_CORE_BYPASS_I_1V8_SET_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_POL_INVERT_EN_CORE_BYPASS_I_1V8_SET_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_POL_INVERT_EN_CORE_BYPASS_I_1V8_SET_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_POL_INVERT_EN_CORE_BYPASS_I_1V8_SET_EN_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_POL_INVERT_EN_CORE_HIGHZ_I_1V8_SET_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_POL_INVERT_EN_CORE_HIGHZ_I_1V8_SET_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_POL_INVERT_EN_CORE_HIGHZ_I_1V8_SET_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_POL_INVERT_EN_CORE_HIGHZ_I_1V8_SET_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_POL_INVERT_EN_CORE_HIGHZ_I_1V8_SET_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_POL_INVERT_EN_CORE_HIGHZ_I_1V8_SET_EN_MASK 0x4
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int core_enable_1v8 : 1;
    unsigned int core_bypass_i_1v8_set : 1;
    unsigned int core_highz_i_1v8_set : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_ldo_rf_d2r_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_LDO_RF_D2R_IF_POL_INVERT_EN_ADDR  0x4001d4c0


/* global_spare_d2r_if_val register */
/*----------------------*/
/* Global group sequence spare : regfile value */
/* g1_spare_0 : G1 group sequence spare */
/* g1_spare_1 : G1 group sequence spare */
/* g2_spare_0 : G2 group sequence spare */
/* g2_spare_1 : G2 group sequence spare */
/* pll_spare_0 : PLL group sequence spare */
/* pll_spare_1 : PLL group sequence spare */
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_VAL_G1_SPARE_0_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_VAL_G1_SPARE_0_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_VAL_G1_SPARE_1_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_VAL_G1_SPARE_1_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_VAL_G2_SPARE_0_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_VAL_G2_SPARE_0_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_VAL_G2_SPARE_1_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_VAL_G2_SPARE_1_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_VAL_PLL_SPARE_0_MASK 0x0010
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_VAL_PLL_SPARE_0_POS  4
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_VAL_PLL_SPARE_1_MASK 0x0020
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_VAL_PLL_SPARE_1_POS  5
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int g1_spare_0 : 1;
    unsigned int g1_spare_1 : 1;
    unsigned int g2_spare_0 : 1;
    unsigned int g2_spare_1 : 1;
    unsigned int pll_spare_0 : 1;
    unsigned int pll_spare_1 : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_global_spare_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_VAL_ADDR  0x4001d4c4


/* global_spare_d2r_if_src_sel register */
/*----------------------*/
/* Global group sequence spare : source selection */
/* g1_spare_0 : Source selection for g1_spare_0 */
/* g1_spare_1 : Source selection for g1_spare_1 */
/* g2_spare_0 : Source selection for g2_spare_0 */
/* g2_spare_1 : Source selection for g2_spare_1 */
/* pll_spare_0 : Source selection for pll_spare_0 */
/* pll_spare_1 : Source selection for pll_spare_1 */
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_SRC_SEL_G1_SPARE_0_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_SRC_SEL_G1_SPARE_0_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_SRC_SEL_G1_SPARE_0_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_SRC_SEL_G1_SPARE_0_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_SRC_SEL_G1_SPARE_0_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_SRC_SEL_G1_SPARE_0_TMU_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_SRC_SEL_G1_SPARE_1_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_SRC_SEL_G1_SPARE_1_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_SRC_SEL_G1_SPARE_1_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_SRC_SEL_G1_SPARE_1_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_SRC_SEL_G1_SPARE_1_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_SRC_SEL_G1_SPARE_1_TMU_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_SRC_SEL_G2_SPARE_0_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_SRC_SEL_G2_SPARE_0_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_SRC_SEL_G2_SPARE_0_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_SRC_SEL_G2_SPARE_0_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_SRC_SEL_G2_SPARE_0_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_SRC_SEL_G2_SPARE_0_TMU_MASK 0x4
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_SRC_SEL_G2_SPARE_1_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_SRC_SEL_G2_SPARE_1_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_SRC_SEL_G2_SPARE_1_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_SRC_SEL_G2_SPARE_1_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_SRC_SEL_G2_SPARE_1_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_SRC_SEL_G2_SPARE_1_TMU_MASK 0x8
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_SRC_SEL_PLL_SPARE_0_MASK 0x0010
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_SRC_SEL_PLL_SPARE_0_POS  4
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_SRC_SEL_PLL_SPARE_0_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_SRC_SEL_PLL_SPARE_0_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_SRC_SEL_PLL_SPARE_0_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_SRC_SEL_PLL_SPARE_0_TMU_MASK 0x10
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_SRC_SEL_PLL_SPARE_1_MASK 0x0020
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_SRC_SEL_PLL_SPARE_1_POS  5
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_SRC_SEL_PLL_SPARE_1_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_SRC_SEL_PLL_SPARE_1_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_SRC_SEL_PLL_SPARE_1_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_SRC_SEL_PLL_SPARE_1_TMU_MASK 0x20
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int g1_spare_0 : 1;
    unsigned int g1_spare_1 : 1;
    unsigned int g2_spare_0 : 1;
    unsigned int g2_spare_1 : 1;
    unsigned int pll_spare_0 : 1;
    unsigned int pll_spare_1 : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_global_spare_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_SRC_SEL_RST 0x3f
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_SRC_SEL_ADDR  0x4001d4c8


/* global_spare_d2r_if_pol_invert_en register */
/*----------------------*/
/* Global group sequence spare : polarity invert control */
/* g1_spare_0 : Polarity invert control for g1_spare_0 */
/* g1_spare_1 : Polarity invert control for g1_spare_1 */
/* g2_spare_0 : Polarity invert control for g2_spare_0 */
/* g2_spare_1 : Polarity invert control for g2_spare_1 */
/* pll_spare_0 : Polarity invert control for pll_spare_0 */
/* pll_spare_1 : Polarity invert control for pll_spare_1 */
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_POL_INVERT_EN_G1_SPARE_0_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_POL_INVERT_EN_G1_SPARE_0_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_POL_INVERT_EN_G1_SPARE_0_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_POL_INVERT_EN_G1_SPARE_0_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_POL_INVERT_EN_G1_SPARE_0_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_POL_INVERT_EN_G1_SPARE_0_EN_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_POL_INVERT_EN_G1_SPARE_1_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_POL_INVERT_EN_G1_SPARE_1_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_POL_INVERT_EN_G1_SPARE_1_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_POL_INVERT_EN_G1_SPARE_1_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_POL_INVERT_EN_G1_SPARE_1_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_POL_INVERT_EN_G1_SPARE_1_EN_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_POL_INVERT_EN_G2_SPARE_0_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_POL_INVERT_EN_G2_SPARE_0_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_POL_INVERT_EN_G2_SPARE_0_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_POL_INVERT_EN_G2_SPARE_0_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_POL_INVERT_EN_G2_SPARE_0_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_POL_INVERT_EN_G2_SPARE_0_EN_MASK 0x4
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_POL_INVERT_EN_G2_SPARE_1_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_POL_INVERT_EN_G2_SPARE_1_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_POL_INVERT_EN_G2_SPARE_1_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_POL_INVERT_EN_G2_SPARE_1_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_POL_INVERT_EN_G2_SPARE_1_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_POL_INVERT_EN_G2_SPARE_1_EN_MASK 0x8
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_POL_INVERT_EN_PLL_SPARE_0_MASK 0x0010
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_POL_INVERT_EN_PLL_SPARE_0_POS  4
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_POL_INVERT_EN_PLL_SPARE_0_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_POL_INVERT_EN_PLL_SPARE_0_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_POL_INVERT_EN_PLL_SPARE_0_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_POL_INVERT_EN_PLL_SPARE_0_EN_MASK 0x10
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_POL_INVERT_EN_PLL_SPARE_1_MASK 0x0020
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_POL_INVERT_EN_PLL_SPARE_1_POS  5
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_POL_INVERT_EN_PLL_SPARE_1_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_POL_INVERT_EN_PLL_SPARE_1_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_POL_INVERT_EN_PLL_SPARE_1_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_POL_INVERT_EN_PLL_SPARE_1_EN_MASK 0x20
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int g1_spare_0 : 1;
    unsigned int g1_spare_1 : 1;
    unsigned int g2_spare_0 : 1;
    unsigned int g2_spare_1 : 1;
    unsigned int pll_spare_0 : 1;
    unsigned int pll_spare_1 : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_global_spare_d2r_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_GLOBAL_SPARE_D2R_IF_POL_INVERT_EN_ADDR  0x4001d4cc


/* rx_spare_d2r_if_val register */
/*----------------------*/
/* Rx group sequence spare : regfile value */
/* rx1_spare_0 : RX1 group sequence spare */
/* rx1_spare_1 : RX1 group sequence spare */
/* rx2_spare_0 : RX2 group sequence spare */
/* rx2_spare_1 : RX2 group sequence spare */
/* rx3_spare_0 : RX3 group sequence spare */
/* rx3_spare_1 : RX3 group sequence spare */
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_VAL_RX1_SPARE_0_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_VAL_RX1_SPARE_0_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_VAL_RX1_SPARE_1_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_VAL_RX1_SPARE_1_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_VAL_RX2_SPARE_0_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_VAL_RX2_SPARE_0_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_VAL_RX2_SPARE_1_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_VAL_RX2_SPARE_1_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_VAL_RX3_SPARE_0_MASK 0x0010
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_VAL_RX3_SPARE_0_POS  4
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_VAL_RX3_SPARE_1_MASK 0x0020
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_VAL_RX3_SPARE_1_POS  5
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rx1_spare_0 : 1;
    unsigned int rx1_spare_1 : 1;
    unsigned int rx2_spare_0 : 1;
    unsigned int rx2_spare_1 : 1;
    unsigned int rx3_spare_0 : 1;
    unsigned int rx3_spare_1 : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_rx_spare_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_VAL_ADDR  0x4001d4d0


/* rx_spare_d2r_if_src_sel register */
/*----------------------*/
/* Rx group sequence spare : source selection */
/* rx1_spare_0 : Source selection for rx1_spare_0 */
/* rx1_spare_1 : Source selection for rx1_spare_1 */
/* rx2_spare_0 : Source selection for rx2_spare_0 */
/* rx2_spare_1 : Source selection for rx2_spare_1 */
/* rx3_spare_0 : Source selection for rx3_spare_0 */
/* rx3_spare_1 : Source selection for rx3_spare_1 */
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_SRC_SEL_RX1_SPARE_0_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_SRC_SEL_RX1_SPARE_0_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_SRC_SEL_RX1_SPARE_0_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_SRC_SEL_RX1_SPARE_0_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_SRC_SEL_RX1_SPARE_0_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_SRC_SEL_RX1_SPARE_0_TMU_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_SRC_SEL_RX1_SPARE_1_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_SRC_SEL_RX1_SPARE_1_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_SRC_SEL_RX1_SPARE_1_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_SRC_SEL_RX1_SPARE_1_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_SRC_SEL_RX1_SPARE_1_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_SRC_SEL_RX1_SPARE_1_TMU_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_SRC_SEL_RX2_SPARE_0_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_SRC_SEL_RX2_SPARE_0_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_SRC_SEL_RX2_SPARE_0_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_SRC_SEL_RX2_SPARE_0_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_SRC_SEL_RX2_SPARE_0_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_SRC_SEL_RX2_SPARE_0_TMU_MASK 0x4
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_SRC_SEL_RX2_SPARE_1_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_SRC_SEL_RX2_SPARE_1_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_SRC_SEL_RX2_SPARE_1_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_SRC_SEL_RX2_SPARE_1_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_SRC_SEL_RX2_SPARE_1_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_SRC_SEL_RX2_SPARE_1_TMU_MASK 0x8
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_SRC_SEL_RX3_SPARE_0_MASK 0x0010
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_SRC_SEL_RX3_SPARE_0_POS  4
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_SRC_SEL_RX3_SPARE_0_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_SRC_SEL_RX3_SPARE_0_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_SRC_SEL_RX3_SPARE_0_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_SRC_SEL_RX3_SPARE_0_TMU_MASK 0x10
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_SRC_SEL_RX3_SPARE_1_MASK 0x0020
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_SRC_SEL_RX3_SPARE_1_POS  5
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_SRC_SEL_RX3_SPARE_1_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_SRC_SEL_RX3_SPARE_1_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_SRC_SEL_RX3_SPARE_1_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_SRC_SEL_RX3_SPARE_1_TMU_MASK 0x20
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rx1_spare_0 : 1;
    unsigned int rx1_spare_1 : 1;
    unsigned int rx2_spare_0 : 1;
    unsigned int rx2_spare_1 : 1;
    unsigned int rx3_spare_0 : 1;
    unsigned int rx3_spare_1 : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_rx_spare_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_SRC_SEL_RST 0x3f
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_SRC_SEL_ADDR  0x4001d4d4


/* rx_spare_d2r_if_pol_invert_en register */
/*----------------------*/
/* Rx group sequence spare : polarity invert control */
/* rx1_spare_0 : Polarity invert control for rx1_spare_0 */
/* rx1_spare_1 : Polarity invert control for rx1_spare_1 */
/* rx2_spare_0 : Polarity invert control for rx2_spare_0 */
/* rx2_spare_1 : Polarity invert control for rx2_spare_1 */
/* rx3_spare_0 : Polarity invert control for rx3_spare_0 */
/* rx3_spare_1 : Polarity invert control for rx3_spare_1 */
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_POL_INVERT_EN_RX1_SPARE_0_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_POL_INVERT_EN_RX1_SPARE_0_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_POL_INVERT_EN_RX1_SPARE_0_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_POL_INVERT_EN_RX1_SPARE_0_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_POL_INVERT_EN_RX1_SPARE_0_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_POL_INVERT_EN_RX1_SPARE_0_EN_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_POL_INVERT_EN_RX1_SPARE_1_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_POL_INVERT_EN_RX1_SPARE_1_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_POL_INVERT_EN_RX1_SPARE_1_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_POL_INVERT_EN_RX1_SPARE_1_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_POL_INVERT_EN_RX1_SPARE_1_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_POL_INVERT_EN_RX1_SPARE_1_EN_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_POL_INVERT_EN_RX2_SPARE_0_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_POL_INVERT_EN_RX2_SPARE_0_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_POL_INVERT_EN_RX2_SPARE_0_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_POL_INVERT_EN_RX2_SPARE_0_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_POL_INVERT_EN_RX2_SPARE_0_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_POL_INVERT_EN_RX2_SPARE_0_EN_MASK 0x4
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_POL_INVERT_EN_RX2_SPARE_1_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_POL_INVERT_EN_RX2_SPARE_1_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_POL_INVERT_EN_RX2_SPARE_1_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_POL_INVERT_EN_RX2_SPARE_1_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_POL_INVERT_EN_RX2_SPARE_1_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_POL_INVERT_EN_RX2_SPARE_1_EN_MASK 0x8
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_POL_INVERT_EN_RX3_SPARE_0_MASK 0x0010
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_POL_INVERT_EN_RX3_SPARE_0_POS  4
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_POL_INVERT_EN_RX3_SPARE_0_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_POL_INVERT_EN_RX3_SPARE_0_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_POL_INVERT_EN_RX3_SPARE_0_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_POL_INVERT_EN_RX3_SPARE_0_EN_MASK 0x10
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_POL_INVERT_EN_RX3_SPARE_1_MASK 0x0020
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_POL_INVERT_EN_RX3_SPARE_1_POS  5
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_POL_INVERT_EN_RX3_SPARE_1_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_POL_INVERT_EN_RX3_SPARE_1_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_POL_INVERT_EN_RX3_SPARE_1_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_POL_INVERT_EN_RX3_SPARE_1_EN_MASK 0x20
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rx1_spare_0 : 1;
    unsigned int rx1_spare_1 : 1;
    unsigned int rx2_spare_0 : 1;
    unsigned int rx2_spare_1 : 1;
    unsigned int rx3_spare_0 : 1;
    unsigned int rx3_spare_1 : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_rx_spare_d2r_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_RX_SPARE_D2R_IF_POL_INVERT_EN_ADDR  0x4001d4d8


/* tx_spare_d2r_if_val register */
/*----------------------*/
/* Tx group sequence spare : regfile value */
/* tx1_spare_0 : TX1 group sequence spare */
/* tx1_spare_1 : TX1 group sequence spare */
/* tx2_spare_0 : TX2 group sequence spare */
/* tx2_spare_1 : TX2 group sequence spare */
/* tx3_spare_0 : TX3 group sequence spare */
/* tx3_spare_1 : TX3 group sequence spare */
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_VAL_TX1_SPARE_0_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_VAL_TX1_SPARE_0_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_VAL_TX1_SPARE_1_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_VAL_TX1_SPARE_1_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_VAL_TX2_SPARE_0_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_VAL_TX2_SPARE_0_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_VAL_TX2_SPARE_1_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_VAL_TX2_SPARE_1_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_VAL_TX3_SPARE_0_MASK 0x0010
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_VAL_TX3_SPARE_0_POS  4
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_VAL_TX3_SPARE_1_MASK 0x0020
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_VAL_TX3_SPARE_1_POS  5
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int tx1_spare_0 : 1;
    unsigned int tx1_spare_1 : 1;
    unsigned int tx2_spare_0 : 1;
    unsigned int tx2_spare_1 : 1;
    unsigned int tx3_spare_0 : 1;
    unsigned int tx3_spare_1 : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_tx_spare_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_VAL_ADDR  0x4001d4dc


/* tx_spare_d2r_if_src_sel register */
/*----------------------*/
/* Tx group sequence spare : source selection */
/* tx1_spare_0 : Source selection for tx1_spare_0 */
/* tx1_spare_1 : Source selection for tx1_spare_1 */
/* tx2_spare_0 : Source selection for tx2_spare_0 */
/* tx2_spare_1 : Source selection for tx2_spare_1 */
/* tx3_spare_0 : Source selection for tx3_spare_0 */
/* tx3_spare_1 : Source selection for tx3_spare_1 */
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_SRC_SEL_TX1_SPARE_0_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_SRC_SEL_TX1_SPARE_0_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_SRC_SEL_TX1_SPARE_0_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_SRC_SEL_TX1_SPARE_0_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_SRC_SEL_TX1_SPARE_0_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_SRC_SEL_TX1_SPARE_0_TMU_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_SRC_SEL_TX1_SPARE_1_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_SRC_SEL_TX1_SPARE_1_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_SRC_SEL_TX1_SPARE_1_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_SRC_SEL_TX1_SPARE_1_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_SRC_SEL_TX1_SPARE_1_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_SRC_SEL_TX1_SPARE_1_TMU_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_SRC_SEL_TX2_SPARE_0_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_SRC_SEL_TX2_SPARE_0_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_SRC_SEL_TX2_SPARE_0_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_SRC_SEL_TX2_SPARE_0_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_SRC_SEL_TX2_SPARE_0_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_SRC_SEL_TX2_SPARE_0_TMU_MASK 0x4
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_SRC_SEL_TX2_SPARE_1_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_SRC_SEL_TX2_SPARE_1_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_SRC_SEL_TX2_SPARE_1_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_SRC_SEL_TX2_SPARE_1_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_SRC_SEL_TX2_SPARE_1_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_SRC_SEL_TX2_SPARE_1_TMU_MASK 0x8
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_SRC_SEL_TX3_SPARE_0_MASK 0x0010
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_SRC_SEL_TX3_SPARE_0_POS  4
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_SRC_SEL_TX3_SPARE_0_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_SRC_SEL_TX3_SPARE_0_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_SRC_SEL_TX3_SPARE_0_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_SRC_SEL_TX3_SPARE_0_TMU_MASK 0x10
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_SRC_SEL_TX3_SPARE_1_MASK 0x0020
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_SRC_SEL_TX3_SPARE_1_POS  5
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_SRC_SEL_TX3_SPARE_1_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_SRC_SEL_TX3_SPARE_1_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_SRC_SEL_TX3_SPARE_1_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_SRC_SEL_TX3_SPARE_1_TMU_MASK 0x20
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int tx1_spare_0 : 1;
    unsigned int tx1_spare_1 : 1;
    unsigned int tx2_spare_0 : 1;
    unsigned int tx2_spare_1 : 1;
    unsigned int tx3_spare_0 : 1;
    unsigned int tx3_spare_1 : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_tx_spare_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_SRC_SEL_RST 0x3f
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_SRC_SEL_ADDR  0x4001d4e0


/* tx_spare_d2r_if_pol_invert_en register */
/*----------------------*/
/* Tx group sequence spare : polarity invert control */
/* tx1_spare_0 : Polarity invert control for tx1_spare_0 */
/* tx1_spare_1 : Polarity invert control for tx1_spare_1 */
/* tx2_spare_0 : Polarity invert control for tx2_spare_0 */
/* tx2_spare_1 : Polarity invert control for tx2_spare_1 */
/* tx3_spare_0 : Polarity invert control for tx3_spare_0 */
/* tx3_spare_1 : Polarity invert control for tx3_spare_1 */
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_POL_INVERT_EN_TX1_SPARE_0_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_POL_INVERT_EN_TX1_SPARE_0_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_POL_INVERT_EN_TX1_SPARE_0_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_POL_INVERT_EN_TX1_SPARE_0_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_POL_INVERT_EN_TX1_SPARE_0_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_POL_INVERT_EN_TX1_SPARE_0_EN_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_POL_INVERT_EN_TX1_SPARE_1_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_POL_INVERT_EN_TX1_SPARE_1_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_POL_INVERT_EN_TX1_SPARE_1_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_POL_INVERT_EN_TX1_SPARE_1_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_POL_INVERT_EN_TX1_SPARE_1_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_POL_INVERT_EN_TX1_SPARE_1_EN_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_POL_INVERT_EN_TX2_SPARE_0_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_POL_INVERT_EN_TX2_SPARE_0_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_POL_INVERT_EN_TX2_SPARE_0_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_POL_INVERT_EN_TX2_SPARE_0_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_POL_INVERT_EN_TX2_SPARE_0_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_POL_INVERT_EN_TX2_SPARE_0_EN_MASK 0x4
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_POL_INVERT_EN_TX2_SPARE_1_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_POL_INVERT_EN_TX2_SPARE_1_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_POL_INVERT_EN_TX2_SPARE_1_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_POL_INVERT_EN_TX2_SPARE_1_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_POL_INVERT_EN_TX2_SPARE_1_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_POL_INVERT_EN_TX2_SPARE_1_EN_MASK 0x8
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_POL_INVERT_EN_TX3_SPARE_0_MASK 0x0010
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_POL_INVERT_EN_TX3_SPARE_0_POS  4
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_POL_INVERT_EN_TX3_SPARE_0_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_POL_INVERT_EN_TX3_SPARE_0_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_POL_INVERT_EN_TX3_SPARE_0_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_POL_INVERT_EN_TX3_SPARE_0_EN_MASK 0x10
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_POL_INVERT_EN_TX3_SPARE_1_MASK 0x0020
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_POL_INVERT_EN_TX3_SPARE_1_POS  5
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_POL_INVERT_EN_TX3_SPARE_1_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_POL_INVERT_EN_TX3_SPARE_1_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_POL_INVERT_EN_TX3_SPARE_1_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_POL_INVERT_EN_TX3_SPARE_1_EN_MASK 0x20
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int tx1_spare_0 : 1;
    unsigned int tx1_spare_1 : 1;
    unsigned int tx2_spare_0 : 1;
    unsigned int tx2_spare_1 : 1;
    unsigned int tx3_spare_0 : 1;
    unsigned int tx3_spare_1 : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_tx_spare_d2r_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_TX_SPARE_D2R_IF_POL_INVERT_EN_ADDR  0x4001d4e4


/* rf_txrx_d2r_if_val register */
/*----------------------*/
/* High power module output enable : regfile value */
/* rfrx : High power module support enable for RX */
/* rftx : High power module support enable for TX */
/* flicker_rx : Flicker RX */
/* flicker_tx : Flicker TX */
/* flicker : Flicker */
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_VAL_RFRX_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_VAL_RFRX_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_VAL_RFTX_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_VAL_RFTX_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_VAL_FLICKER_RX_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_VAL_FLICKER_RX_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_VAL_FLICKER_TX_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_VAL_FLICKER_TX_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_VAL_FLICKER_MASK 0x0010
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_VAL_FLICKER_POS  4
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rfrx : 1;
    unsigned int rftx : 1;
    unsigned int flicker_rx : 1;
    unsigned int flicker_tx : 1;
    unsigned int flicker : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_rf_txrx_d2r_if_val;
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_VAL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_VAL_ADDR  0x4001d4e8


/* rf_txrx_d2r_if_src_sel register */
/*----------------------*/
/* High power module output enable : source selection */
/* rfrx : Source selection for rfrx */
/* rftx : Source selection for rftx */
/* flicker_rx : Source selection for flicker_rx */
/* flicker_tx : Source selection for flicker_tx */
/* flicker : Source selection for flicker */
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_SRC_SEL_RFRX_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_SRC_SEL_RFRX_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_SRC_SEL_RFRX_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_SRC_SEL_RFRX_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_SRC_SEL_RFRX_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_SRC_SEL_RFRX_TMU_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_SRC_SEL_RFTX_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_SRC_SEL_RFTX_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_SRC_SEL_RFTX_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_SRC_SEL_RFTX_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_SRC_SEL_RFTX_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_SRC_SEL_RFTX_TMU_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_SRC_SEL_FLICKER_RX_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_SRC_SEL_FLICKER_RX_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_SRC_SEL_FLICKER_RX_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_SRC_SEL_FLICKER_RX_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_SRC_SEL_FLICKER_RX_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_SRC_SEL_FLICKER_RX_TMU_MASK 0x4
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_SRC_SEL_FLICKER_TX_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_SRC_SEL_FLICKER_TX_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_SRC_SEL_FLICKER_TX_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_SRC_SEL_FLICKER_TX_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_SRC_SEL_FLICKER_TX_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_SRC_SEL_FLICKER_TX_TMU_MASK 0x8
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_SRC_SEL_FLICKER_MASK 0x0010
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_SRC_SEL_FLICKER_POS  4
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_SRC_SEL_FLICKER_REGFILE 0
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_SRC_SEL_FLICKER_REGFILE_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_SRC_SEL_FLICKER_TMU 1
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_SRC_SEL_FLICKER_TMU_MASK 0x10
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rfrx : 1;
    unsigned int rftx : 1;
    unsigned int flicker_rx : 1;
    unsigned int flicker_tx : 1;
    unsigned int flicker : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_rf_txrx_d2r_if_src_sel;
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_SRC_SEL_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_SRC_SEL_ADDR  0x4001d4ec


/* rf_txrx_d2r_if_pol_invert_en register */
/*----------------------*/
/* High power module output enable : polarity invert control */
/* rfrx : Polarity invert control for rfrx */
/* rftx : Polarity invert control for rftx */
/* flicker_rx : Polarity invert control for flicker_rx */
/* flicker_tx : Polarity invert control for flicker_tx */
/* flicker : Polarity invert control for flicker */
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_POL_INVERT_EN_RFRX_MASK 0x0001
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_POL_INVERT_EN_RFRX_POS  0
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_POL_INVERT_EN_RFRX_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_POL_INVERT_EN_RFRX_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_POL_INVERT_EN_RFRX_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_POL_INVERT_EN_RFRX_EN_MASK 0x1
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_POL_INVERT_EN_RFTX_MASK 0x0002
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_POL_INVERT_EN_RFTX_POS  1
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_POL_INVERT_EN_RFTX_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_POL_INVERT_EN_RFTX_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_POL_INVERT_EN_RFTX_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_POL_INVERT_EN_RFTX_EN_MASK 0x2
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_POL_INVERT_EN_FLICKER_RX_MASK 0x0004
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_POL_INVERT_EN_FLICKER_RX_POS  2
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_POL_INVERT_EN_FLICKER_RX_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_POL_INVERT_EN_FLICKER_RX_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_POL_INVERT_EN_FLICKER_RX_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_POL_INVERT_EN_FLICKER_RX_EN_MASK 0x4
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_POL_INVERT_EN_FLICKER_TX_MASK 0x0008
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_POL_INVERT_EN_FLICKER_TX_POS  3
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_POL_INVERT_EN_FLICKER_TX_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_POL_INVERT_EN_FLICKER_TX_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_POL_INVERT_EN_FLICKER_TX_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_POL_INVERT_EN_FLICKER_TX_EN_MASK 0x8
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_POL_INVERT_EN_FLICKER_MASK 0x0010
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_POL_INVERT_EN_FLICKER_POS  4
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_POL_INVERT_EN_FLICKER_DIS 0
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_POL_INVERT_EN_FLICKER_DIS_MASK 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_POL_INVERT_EN_FLICKER_EN 1
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_POL_INVERT_EN_FLICKER_EN_MASK 0x10
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rfrx : 1;
    unsigned int rftx : 1;
    unsigned int flicker_rx : 1;
    unsigned int flicker_tx : 1;
    unsigned int flicker : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_transceiver_rf_txrx_d2r_if_pol_invert_en;
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_POL_INVERT_EN_RST 0x0
#define EXTAPB_REGFILE_TRANSCEIVER_RF_TXRX_D2R_IF_POL_INVERT_EN_ADDR  0x4001d4f0


typedef struct{
    t_extapb_regfile_transceiver_clipdet_d2r_if_val  clipdet_d2r_if_val;
    t_extapb_regfile_transceiver_clipdet_d2r_if_src_sel  clipdet_d2r_if_src_sel;
    t_extapb_regfile_transceiver_clipdet_d2r_if_pol_invert_en  clipdet_d2r_if_pol_invert_en;
    t_extapb_regfile_transceiver_clipdet_r2d_if_val  clipdet_r2d_if_val;
    t_extapb_regfile_transceiver_clipdet_r2d_if_pol_invert_en  clipdet_r2d_if_pol_invert_en;
    t_extapb_regfile_transceiver_aaf_d2r_if_val  aaf_d2r_if_val;
    t_extapb_regfile_transceiver_aaf_d2r_if_src_sel  aaf_d2r_if_src_sel;
    t_extapb_regfile_transceiver_aaf_d2r_if_pol_invert_en  aaf_d2r_if_pol_invert_en;
    t_extapb_regfile_transceiver_aaf_1_d2r_if_val  aaf_1_d2r_if_val;
    t_extapb_regfile_transceiver_aaf_1_d2r_if_src_sel  aaf_1_d2r_if_src_sel;
    t_extapb_regfile_transceiver_ifamp_d2r_if_val  ifamp_d2r_if_val;
    t_extapb_regfile_transceiver_ifamp_d2r_if_src_sel  ifamp_d2r_if_src_sel;
    t_extapb_regfile_transceiver_ifamp_d2r_if_pol_invert_en  ifamp_d2r_if_pol_invert_en;
    t_extapb_regfile_transceiver_lna_d2r_if_val  lna_d2r_if_val;
    t_extapb_regfile_transceiver_lna_d2r_if_src_sel  lna_d2r_if_src_sel;
    t_extapb_regfile_transceiver_lna_d2r_if_pol_invert_en  lna_d2r_if_pol_invert_en;
    t_extapb_regfile_transceiver_pll_dac_0_d2r_if_val  pll_dac_0_d2r_if_val;
    t_extapb_regfile_transceiver_pll_dac_0_d2r_if_src_sel  pll_dac_0_d2r_if_src_sel;
    t_extapb_regfile_transceiver_pll_dac_0_d2r_if_pol_invert_en  pll_dac_0_d2r_if_pol_invert_en;
    t_extapb_regfile_transceiver_pll_dac_1_d2r_if_val  pll_dac_1_d2r_if_val;
    t_extapb_regfile_transceiver_adc_d2r_if_val  adc_d2r_if_val;
    t_extapb_regfile_transceiver_adc_d2r_if_src_sel  adc_d2r_if_src_sel;
    t_extapb_regfile_transceiver_adc_d2r_if_pol_invert_en  adc_d2r_if_pol_invert_en;
    t_extapb_regfile_transceiver_bgr_d2r_if_val  bgr_d2r_if_val;
    t_extapb_regfile_transceiver_bgr_d2r_if_src_sel  bgr_d2r_if_src_sel;
    t_extapb_regfile_transceiver_bgr_d2r_if_pol_invert_en  bgr_d2r_if_pol_invert_en;
    t_extapb_regfile_transceiver_bgr_r2d_if_val  bgr_r2d_if_val;
    t_extapb_regfile_transceiver_bgr_r2d_if_pol_invert_en  bgr_r2d_if_pol_invert_en;
    t_extapb_regfile_transceiver_mixer_d2r_if_val  mixer_d2r_if_val;
    t_extapb_regfile_transceiver_mixer_d2r_if_src_sel  mixer_d2r_if_src_sel;
    t_extapb_regfile_transceiver_mixer_d2r_if_pol_invert_en  mixer_d2r_if_pol_invert_en;
    t_extapb_regfile_transceiver_tone_0_d2r_if_val  tone_0_d2r_if_val;
    t_extapb_regfile_transceiver_tone_0_d2r_if_src_sel  tone_0_d2r_if_src_sel;
    t_extapb_regfile_transceiver_tone_1_d2r_if_val  tone_1_d2r_if_val;
    t_extapb_regfile_transceiver_tone_1_d2r_if_src_sel  tone_1_d2r_if_src_sel;
    t_extapb_regfile_transceiver_tone_0_d2r_if_pol_invert_en  tone_0_d2r_if_pol_invert_en;
    t_extapb_regfile_transceiver_tone_1_d2r_if_pol_invert_en  tone_1_d2r_if_pol_invert_en;
    t_extapb_regfile_transceiver_pll_cp_d2r_if_val  pll_cp_d2r_if_val;
    t_extapb_regfile_transceiver_pll_cp_d2r_if_src_sel  pll_cp_d2r_if_src_sel;
    t_extapb_regfile_transceiver_pll_cp_d2r_if_pol_invert_en  pll_cp_d2r_if_pol_invert_en;
    t_extapb_regfile_transceiver_pll_xo_d2r_if_val  pll_xo_d2r_if_val;
    t_extapb_regfile_transceiver_pll_xo_d2r_if_src_sel  pll_xo_d2r_if_src_sel;
    t_extapb_regfile_transceiver_pll_xo_d2r_if_pol_invert_en  pll_xo_d2r_if_pol_invert_en;
    t_extapb_regfile_transceiver_pll_xo_r2d_if_val  pll_xo_r2d_if_val;
    t_extapb_regfile_transceiver_pll_xo_r2d_if_pol_invert_en  pll_xo_r2d_if_pol_invert_en;
    t_extapb_regfile_transceiver_xo32k_d2r_if_val  xo32k_d2r_if_val;
    t_extapb_regfile_transceiver_xo32k_d2r_if_src_sel  xo32k_d2r_if_src_sel;
    t_extapb_regfile_transceiver_xo32k_d2r_if_pol_invert_en  xo32k_d2r_if_pol_invert_en;
    t_extapb_regfile_transceiver_xo32k_r2d_if_val  xo32k_r2d_if_val;
    t_extapb_regfile_transceiver_xo32k_r2d_if_pol_invert_en  xo32k_r2d_if_pol_invert_en;
    t_extapb_regfile_transceiver_ldo_lo_d2r_if_val  ldo_lo_d2r_if_val;
    t_extapb_regfile_transceiver_ldo_lo_d2r_if_src_sel  ldo_lo_d2r_if_src_sel;
    t_extapb_regfile_transceiver_ldo_lo_d2r_if_pol_invert_en  ldo_lo_d2r_if_pol_invert_en;
    t_extapb_regfile_transceiver_pll_pfd_d2r_if_val  pll_pfd_d2r_if_val;
    t_extapb_regfile_transceiver_pll_pfd_d2r_if_src_sel  pll_pfd_d2r_if_src_sel;
    t_extapb_regfile_transceiver_pll_pfd_d2r_if_pol_invert_en  pll_pfd_d2r_if_pol_invert_en;
    t_extapb_regfile_transceiver_pll_lock_d2r_if_val  pll_lock_d2r_if_val;
    t_extapb_regfile_transceiver_pll_lock_d2r_if_src_sel  pll_lock_d2r_if_src_sel;
    t_extapb_regfile_transceiver_pll_lock_d2r_if_pol_invert_en  pll_lock_d2r_if_pol_invert_en;
    t_extapb_regfile_transceiver_pll_lock_r2d_if_val  pll_lock_r2d_if_val;
    t_extapb_regfile_transceiver_pll_lock_r2d_if_pol_invert_en  pll_lock_r2d_if_pol_invert_en;
    t_extapb_regfile_transceiver_pll_vco_0_d2r_if_val  pll_vco_0_d2r_if_val;
    t_extapb_regfile_transceiver_pll_vco_0_d2r_if_src_sel  pll_vco_0_d2r_if_src_sel;
    t_extapb_regfile_transceiver_pll_vco_0_d2r_if_pol_invert_en  pll_vco_0_d2r_if_pol_invert_en;
    t_extapb_regfile_transceiver_pll_vco_1_d2r_if_val  pll_vco_1_d2r_if_val;
    t_extapb_regfile_transceiver_pll_vco_1_d2r_if_src_sel  pll_vco_1_d2r_if_src_sel;
    t_extapb_regfile_transceiver_pll_vco_curset_d2r_if_val  pll_vco_curset_d2r_if_val;
    t_extapb_regfile_transceiver_pll_vco_curset_d2r_if_src_sel  pll_vco_curset_d2r_if_src_sel;
    t_extapb_regfile_transceiver_pll_lf_d2r_if_val  pll_lf_d2r_if_val;
    t_extapb_regfile_transceiver_pll_lf_d2r_if_src_sel  pll_lf_d2r_if_src_sel;
    t_extapb_regfile_transceiver_pll_lf_d2r_if_pol_invert_en  pll_lf_d2r_if_pol_invert_en;
    t_extapb_regfile_transceiver_pll_divn_d2r_if_val  pll_divn_d2r_if_val;
    t_extapb_regfile_transceiver_pll_divn_d2r_if_src_sel  pll_divn_d2r_if_src_sel;
    t_extapb_regfile_transceiver_pll_divn_d2r_if_pol_invert_en  pll_divn_d2r_if_pol_invert_en;
    t_extapb_regfile_transceiver_pll_cal_d2r_if_val  pll_cal_d2r_if_val;
    t_extapb_regfile_transceiver_pll_cal_d2r_if_src_sel  pll_cal_d2r_if_src_sel;
    t_extapb_regfile_transceiver_pll_cal_d2r_if_pol_invert_en  pll_cal_d2r_if_pol_invert_en;
    t_extapb_regfile_transceiver_pll_cal_0_r2d_if_val  pll_cal_0_r2d_if_val;
    t_extapb_regfile_transceiver_pll_cal_0_r2d_if_pol_invert_en  pll_cal_0_r2d_if_pol_invert_en;
    t_extapb_regfile_transceiver_pll_cal_1_r2d_if_val  pll_cal_1_r2d_if_val;
    t_extapb_regfile_transceiver_various_d2r_if_val  various_d2r_if_val;
    t_extapb_regfile_transceiver_various_d2r_if_src_sel  various_d2r_if_src_sel;
    t_extapb_regfile_transceiver_various_d2r_if_pol_invert_en  various_d2r_if_pol_invert_en;
    t_extapb_regfile_transceiver_radio_ctrl_d2r_if_val  radio_ctrl_d2r_if_val;
    t_extapb_regfile_transceiver_r_rc_cal_d2r_if_val  r_rc_cal_d2r_if_val;
    t_extapb_regfile_transceiver_r_rc_cal_d2r_if_src_sel  r_rc_cal_d2r_if_src_sel;
    t_extapb_regfile_transceiver_r_rc_cal_d2r_if_pol_invert_en  r_rc_cal_d2r_if_pol_invert_en;
    t_extapb_regfile_transceiver_r_rc_cal_r2d_if_val  r_rc_cal_r2d_if_val;
    t_extapb_regfile_transceiver_r_rc_cal_r2d_if_pol_invert_en  r_rc_cal_r2d_if_pol_invert_en;
    t_extapb_regfile_transceiver_dcoff_d2r_if_val  dcoff_d2r_if_val;
    t_extapb_regfile_transceiver_dcoff_d2r_if_src_sel  dcoff_d2r_if_src_sel;
    t_extapb_regfile_transceiver_dcoff_d2r_if_pol_invert_en  dcoff_d2r_if_pol_invert_en;
    t_extapb_regfile_transceiver_dummy_output_d2r_if_val  dummy_output_d2r_if_val;
    t_extapb_regfile_transceiver_dummy_input_r2d_if_val  dummy_input_r2d_if_val;
    t_extapb_regfile_transceiver_tmu_grp_g_d2r_if_val  tmu_grp_g_d2r_if_val;
    t_extapb_regfile_transceiver_tmu_grp_g_d2r_if_src_sel  tmu_grp_g_d2r_if_src_sel;
    t_extapb_regfile_transceiver_tmu_grp_g_d2r_if_pol_invert_en  tmu_grp_g_d2r_if_pol_invert_en;
    t_extapb_regfile_transceiver_tmu_grp_tx_d2r_if_val  tmu_grp_tx_d2r_if_val;
    t_extapb_regfile_transceiver_tmu_grp_tx_d2r_if_src_sel  tmu_grp_tx_d2r_if_src_sel;
    t_extapb_regfile_transceiver_tmu_grp_tx_d2r_if_pol_invert_en  tmu_grp_tx_d2r_if_pol_invert_en;
    t_extapb_regfile_transceiver_tmu_grp_rx_d2r_if_val  tmu_grp_rx_d2r_if_val;
    t_extapb_regfile_transceiver_tmu_grp_rx_d2r_if_src_sel  tmu_grp_rx_d2r_if_src_sel;
    t_extapb_regfile_transceiver_tmu_grp_rx_d2r_if_pol_invert_en  tmu_grp_rx_d2r_if_pol_invert_en;
    t_extapb_regfile_transceiver_rx_ldo_d2r_if_val  rx_ldo_d2r_if_val;
    t_extapb_regfile_transceiver_rx_ldo_d2r_if_src_sel  rx_ldo_d2r_if_src_sel;
    t_extapb_regfile_transceiver_rx_ldo_d2r_if_pol_invert_en  rx_ldo_d2r_if_pol_invert_en;
    t_extapb_regfile_transceiver_rx_iftest_d2r_if_val  rx_iftest_d2r_if_val;
    t_extapb_regfile_transceiver_rx_ifbuf_d2r_if_val  rx_ifbuf_d2r_if_val;
    t_extapb_regfile_transceiver_pll_vco_boost_d2r_if_val  pll_vco_boost_d2r_if_val;
    t_extapb_regfile_transceiver_pll_vco_boost_d2r_if_src_sel  pll_vco_boost_d2r_if_src_sel;
    t_extapb_regfile_transceiver_pa_0_d2r_if_val  pa_0_d2r_if_val;
    t_extapb_regfile_transceiver_pa_0_d2r_if_src_sel  pa_0_d2r_if_src_sel;
    t_extapb_regfile_transceiver_pa_0_d2r_if_pol_invert_en  pa_0_d2r_if_pol_invert_en;
    t_extapb_regfile_transceiver_pa_1_d2r_if_val  pa_1_d2r_if_val;
    t_extapb_regfile_transceiver_transfo_d2r_if_val  transfo_d2r_if_val;
    t_extapb_regfile_transceiver_transfo_d2r_if_src_sel  transfo_d2r_if_src_sel;
    t_extapb_regfile_transceiver_transfo_rx_d2r_if_val  transfo_rx_d2r_if_val;
    t_extapb_regfile_transceiver_transfo_tx_d2r_if_val  transfo_tx_d2r_if_val;
    t_extapb_regfile_transceiver_lo_d2r_if_val  lo_d2r_if_val;
    t_extapb_regfile_transceiver_lo_d2r_if_src_sel  lo_d2r_if_src_sel;
    t_extapb_regfile_transceiver_lo_d2r_if_pol_invert_en  lo_d2r_if_pol_invert_en;
    t_extapb_regfile_transceiver_ldo_pa_d2r_if_val  ldo_pa_d2r_if_val;
    t_extapb_regfile_transceiver_ldo_pa_d2r_if_src_sel  ldo_pa_d2r_if_src_sel;
    t_extapb_regfile_transceiver_ldo_pa_d2r_if_pol_invert_en  ldo_pa_d2r_if_pol_invert_en;
    t_extapb_regfile_transceiver_ldo_if_d2r_if_val  ldo_if_d2r_if_val;
    t_extapb_regfile_transceiver_ldo_if_d2r_if_src_sel  ldo_if_d2r_if_src_sel;
    t_extapb_regfile_transceiver_ldo_if_d2r_if_pol_invert_en  ldo_if_d2r_if_pol_invert_en;
    t_extapb_regfile_transceiver_ldo_synth_d2r_if_val  ldo_synth_d2r_if_val;
    t_extapb_regfile_transceiver_ldo_synth_d2r_if_src_sel  ldo_synth_d2r_if_src_sel;
    t_extapb_regfile_transceiver_ldo_synth_d2r_if_pol_invert_en  ldo_synth_d2r_if_pol_invert_en;
    t_extapb_regfile_transceiver_ldo_vco_d2r_if_val  ldo_vco_d2r_if_val;
    t_extapb_regfile_transceiver_ldo_vco_d2r_if_src_sel  ldo_vco_d2r_if_src_sel;
    t_extapb_regfile_transceiver_ldo_vco_d2r_if_pol_invert_en  ldo_vco_d2r_if_pol_invert_en;
    t_extapb_regfile_transceiver_tone_pll_d2r_if_val  tone_pll_d2r_if_val;
    t_extapb_regfile_transceiver_tone_pll_d2r_if_src_sel  tone_pll_d2r_if_src_sel;
    t_extapb_regfile_transceiver_tone_pll_d2r_if_pol_invert_en  tone_pll_d2r_if_pol_invert_en;
    t_extapb_regfile_transceiver_radio_id_r2d_if_val  radio_id_r2d_if_val;
    t_extapb_regfile_transceiver_pll_cur_mir_d2r_if_val  pll_cur_mir_d2r_if_val;
    t_extapb_regfile_transceiver_pll_cur_mir_d2r_if_pol_invert_en  pll_cur_mir_d2r_if_pol_invert_en;
    t_extapb_regfile_transceiver_pll_divlo_d2r_if_val  pll_divlo_d2r_if_val;
    t_extapb_regfile_transceiver_pll_divlo_d2r_if_src_sel  pll_divlo_d2r_if_src_sel;
    t_extapb_regfile_transceiver_pll_divlo_d2r_if_pol_invert_en  pll_divlo_d2r_if_pol_invert_en;
    t_extapb_regfile_transceiver_ldo_rf_d2r_if_val  ldo_rf_d2r_if_val;
    t_extapb_regfile_transceiver_ldo_rf_d2r_if_src_sel  ldo_rf_d2r_if_src_sel;
    t_extapb_regfile_transceiver_ldo_rf_d2r_if_pol_invert_en  ldo_rf_d2r_if_pol_invert_en;
    t_extapb_regfile_transceiver_global_spare_d2r_if_val  global_spare_d2r_if_val;
    t_extapb_regfile_transceiver_global_spare_d2r_if_src_sel  global_spare_d2r_if_src_sel;
    t_extapb_regfile_transceiver_global_spare_d2r_if_pol_invert_en  global_spare_d2r_if_pol_invert_en;
    t_extapb_regfile_transceiver_rx_spare_d2r_if_val  rx_spare_d2r_if_val;
    t_extapb_regfile_transceiver_rx_spare_d2r_if_src_sel  rx_spare_d2r_if_src_sel;
    t_extapb_regfile_transceiver_rx_spare_d2r_if_pol_invert_en  rx_spare_d2r_if_pol_invert_en;
    t_extapb_regfile_transceiver_tx_spare_d2r_if_val  tx_spare_d2r_if_val;
    t_extapb_regfile_transceiver_tx_spare_d2r_if_src_sel  tx_spare_d2r_if_src_sel;
    t_extapb_regfile_transceiver_tx_spare_d2r_if_pol_invert_en  tx_spare_d2r_if_pol_invert_en;
    t_extapb_regfile_transceiver_rf_txrx_d2r_if_val  rf_txrx_d2r_if_val;
    t_extapb_regfile_transceiver_rf_txrx_d2r_if_src_sel  rf_txrx_d2r_if_src_sel;
    t_extapb_regfile_transceiver_rf_txrx_d2r_if_pol_invert_en  rf_txrx_d2r_if_pol_invert_en;
} t_extapb_regfile_transceiver;
#define EXTAPB_REGFILE_TRANSCEIVER_ADDR 0x4001d280
#define EXTAPB_REGFILE_TRANSCEIVER ((t_extapb_regfile_transceiver *)EXTAPB_REGFILE_TRANSCEIVER_ADDR)


/* calibration module */
/*-------------------------*/


/* vco_cal_afc_cfg0 register */
/*----------------------*/
/* VCO calibration : AFC configuration part 1 */
/* afc_mdes : Desired counter value M_afc=Fvco_div/Fref_afc (0-4095). (Fvco_div=Fvco/8 or Fvco/12 by means of fixed divider) */
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_CFG0_AFC_MDES_MASK 0x0fff
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_CFG0_AFC_MDES_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int afc_mdes : 12;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_vco_cal_afc_cfg0;
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_CFG0_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_CFG0_ADDR  0x4001d5c0


/* vco_cal_afc_cfg1 register */
/*----------------------*/
/* VCO calibration : AFC configuration part 2 */
/* afc_fref_sel : Divider ratio N_afc. Divide-by-2(0), 4(1), 8(2), 16(3), 32(4), 64(5), 128(6), 256(7). Frequeny measurement frequency Fref_afc=Fxo/N_afc */
/* afc_ki : Frequency gain integrator ki_f=0.5(7), 0.25(6), 0.125(5), 0.0625(4), 1/32(3)...etc */
/* afc_lock_ctrl1 : Lock criterion AFC-loop 1 */
/* afc_lock_ctrl2 : Lock criterion AFC-loop 2 */
/* afc_manual : Manual control AFC. Set frequency loop in manual mode afc_fsel_out = afc_init. The time needed to make afc_fsel_out=afc_init is equal to (N_afc+1)/Fxo, with N_afc=2,4,8,16,31,64,128,256 depending on afc_fref_fsel */
/* afc_skip_loop1 : When set to 1, the first AFC loop is skipped */
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_CFG1_AFC_FREF_SEL_MASK 0x0007
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_CFG1_AFC_FREF_SEL_POS  0
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_CFG1_AFC_KI_MASK 0x0038
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_CFG1_AFC_KI_POS  3
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_CFG1_AFC_LOCK_CTRL1_MASK 0x01c0
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_CFG1_AFC_LOCK_CTRL1_POS  6
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_CFG1_AFC_LOCK_CTRL2_MASK 0x0e00
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_CFG1_AFC_LOCK_CTRL2_POS  9
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_CFG1_AFC_MANUAL_MASK 0x1000
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_CFG1_AFC_MANUAL_POS  12
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_CFG1_AFC_SKIP_LOOP1_MASK 0x2000
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_CFG1_AFC_SKIP_LOOP1_POS  13
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int afc_fref_sel : 3;
    unsigned int afc_ki : 3;
    unsigned int afc_lock_ctrl1 : 3;
    unsigned int afc_lock_ctrl2 : 3;
    unsigned int afc_manual : 1;
    unsigned int afc_skip_loop1 : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_vco_cal_afc_cfg1;
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_CFG1_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_CFG1_ADDR  0x4001d5c4


/* vco_cal_afc_cfg2 register */
/*----------------------*/
/* VCO calibration : AFC configuration part 3 */
/* afc_fsel_init : Initial value for fsel (value on capacitor bank) during manual mode (0-255). 0 = maximum VCO frequency, 255 = minimum VCO frequency. Without using manual mode, the initial value of fsel=128 */
/* afc_fsel_min : Minimal value for fsel (value on capacitor bank) */
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_CFG2_AFC_FSEL_INIT_MASK 0x00ff
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_CFG2_AFC_FSEL_INIT_POS  0
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_CFG2_AFC_FSEL_MIN_MASK 0xff00
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_CFG2_AFC_FSEL_MIN_POS  8
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int afc_fsel_init : 8;
    unsigned int afc_fsel_min : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_vco_cal_afc_cfg2;
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_CFG2_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_CFG2_ADDR  0x4001d5c8


/* vco_cal_aac_cfg0 register */
/*----------------------*/
/* VCO calibration : AAC configuration part 1 */
/* aac_ades_in : Desired amplitude setting. Desired amplitude setting also depends on aac_iref_ctrl_in */
/* aac_ki : Amplitude gain integrator ki_a */
/* aac_lock_ctrl : Lock criterion */
/* aac_manual : Manual control AAC. Set amplitude loop in manual mode ( make aac_ictrl_out = aac_ictrl_init). The time needed to make aac_ictrl_out = aac_ictrl_init is equal to: 5/Fxo~0.19us. */
/* aac_ictrl_correction : Static correction value for aac_ictrl_out */
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AAC_CFG0_AAC_ADES_IN_MASK 0x001f
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AAC_CFG0_AAC_ADES_IN_POS  0
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AAC_CFG0_AAC_KI_MASK 0x00e0
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AAC_CFG0_AAC_KI_POS  5
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AAC_CFG0_AAC_LOCK_CTRL_MASK 0x0700
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AAC_CFG0_AAC_LOCK_CTRL_POS  8
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AAC_CFG0_AAC_MANUAL_MASK 0x0800
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AAC_CFG0_AAC_MANUAL_POS  11
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AAC_CFG0_AAC_ICTRL_CORRECTION_MASK 0x7000
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AAC_CFG0_AAC_ICTRL_CORRECTION_POS  12
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int aac_ades_in : 5;
    unsigned int aac_ki : 3;
    unsigned int aac_lock_ctrl : 3;
    unsigned int aac_manual : 1;
    unsigned int aac_ictrl_correction : 3;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_vco_cal_aac_cfg0;
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AAC_CFG0_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AAC_CFG0_ADDR  0x4001d5cc


/* vco_cal_aac_cfg1 register */
/*----------------------*/
/* VCO calibration : AAC configuration part 2 */
/* aac_ictrl_init : Initial value for VCO current (aac_ictrl_out) during manual mode. Initial VCO current ~ 45u*24+360u=1440uA Without manual mode the initial value is 31, to ensure fast startup. */
/* aac_ictrl_min : Minimum value for VCO current (aac_ictrl_out) Minimum current ~ 45u*0+360u=360uA */
/* aac_iref_ctrl_in : Reference current control input for the Amplitude Voltage Reference (in analog). */
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AAC_CFG1_AAC_ICTRL_INIT_MASK 0x001f
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AAC_CFG1_AAC_ICTRL_INIT_POS  0
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AAC_CFG1_AAC_ICTRL_MIN_MASK 0x03e0
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AAC_CFG1_AAC_ICTRL_MIN_POS  5
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AAC_CFG1_AAC_IREF_CTRL_IN_MASK 0x7c00
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AAC_CFG1_AAC_IREF_CTRL_IN_POS  10
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int aac_ictrl_init : 5;
    unsigned int aac_ictrl_min : 5;
    unsigned int aac_iref_ctrl_in : 5;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_vco_cal_aac_cfg1;
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AAC_CFG1_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AAC_CFG1_ADDR  0x4001d5d0


/* vco_cal_det_cfg0 register */
/*----------------------*/
/* VCO calibration : DET configuration part 1 */
/* det_kmin : Minimum counter value kmin */
/* det_kmin_runin : Minimum counter value during VCO run-in period kmin_runin */
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_DET_CFG0_DET_KMIN_MASK 0x00ff
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_DET_CFG0_DET_KMIN_POS  0
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_DET_CFG0_DET_KMIN_RUNIN_MASK 0xff00
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_DET_CFG0_DET_KMIN_RUNIN_POS  8
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int det_kmin : 8;
    unsigned int det_kmin_runin : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_vco_cal_det_cfg0;
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_DET_CFG0_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_DET_CFG0_ADDR  0x4001d5d4


/* vco_cal_det_cfg1 register */
/*----------------------*/
/* VCO calibration : DET configuration part 2 */
/* det_fref_sel : Divider ratio N_det �?�? divide-by-4(0), 8(1), 16(2), 32(3) �??Out-of-range�?� measurement frequency Fref_det=Fxo/N_det Oscillator frequency Fxo=27MHz */
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_DET_CFG1_DET_FREF_SEL_MASK 0x0003
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_DET_CFG1_DET_FREF_SEL_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int det_fref_sel : 2;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_vco_cal_det_cfg1;
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_DET_CFG1_RST 0x2
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_DET_CFG1_ADDR  0x4001d5d8


/* vco_cal_afc_stat0 register */
/*----------------------*/
/* VCO calibration AFC status 0 */
/* afc_m : Frequency counter value (for test purposes) */
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_STAT0_AFC_M_MASK 0x0fff
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_STAT0_AFC_M_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int afc_m : 12;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_vco_cal_afc_stat0;
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_STAT0_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_STAT0_DYNAMIC true
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_STAT0_SNAPCLOCK 0
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_STAT0_ADDR  0x4001d5dc


/* vco_cal_afc_stat1 register */
/*----------------------*/
/* VCO calibration AFC status 1 */
/* afc_fsel_out : Binary representation of value on capacitor bank (for test purposes) afc_fsel_out=128 (Fvco~3.5GHz) after de-asserting the reset. afc_fsel_out[7:4]= afc_fsel_bin. afc_fsel_out[3:0]~afc_fsel_therm */
/* afc_fsel_bin : Binary cap bank settings for vco. */
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_STAT1_AFC_FSEL_OUT_MASK 0x00ff
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_STAT1_AFC_FSEL_OUT_POS  0
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_STAT1_AFC_FSEL_BIN_MASK 0x0f00
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_STAT1_AFC_FSEL_BIN_POS  8
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int afc_fsel_out : 8;
    unsigned int afc_fsel_bin : 4;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_vco_cal_afc_stat1;
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_STAT1_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_STAT1_DYNAMIC true
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_STAT1_SNAPCLOCK 0
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_STAT1_ADDR  0x4001d5e0


/* vco_cal_afc_stat2 register */
/*----------------------*/
/* VCO calibration AFDCstatus 2 */
/* afc_fsel_therm : Thermo cap bank settings for vco. */
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_STAT2_AFC_FSEL_THERM_MASK 0x7fff
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_STAT2_AFC_FSEL_THERM_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int afc_fsel_therm : 15;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_vco_cal_afc_stat2;
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_STAT2_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_STAT2_DYNAMIC true
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_STAT2_SNAPCLOCK 0
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AFC_STAT2_ADDR  0x4001d5e4


/* vco_cal_aac_stat0 register */
/*----------------------*/
/* VCO calibration : AAC status part 1 */
/* aac_ades_out : Adjusted desired amplitude setting for the Amplitude Reference Circuit in analog.If the setting of aac_ades_in is not too low (see 2. Design of Out-Of-Range detector). Then aac_ades_out is equal to Ow5aac_ades_in. */
/* aac_toolarge_out : Just a feed through from I2aac_toolarge_in */
/* aac_icomp_ctrl : To activate the bias Current for Bang-Bang Amplitude Detektor (in analog) If ac_enable=1 and aac_lock=0 and IwAsyncReset_a=0 then Owaac_icomp_ctrl=1, else */
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AAC_STAT0_AAC_ADES_OUT_MASK 0x001f
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AAC_STAT0_AAC_ADES_OUT_POS  0
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AAC_STAT0_AAC_TOOLARGE_OUT_MASK 0x0020
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AAC_STAT0_AAC_TOOLARGE_OUT_POS  5
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AAC_STAT0_AAC_ICOMP_CTRL_MASK 0x0040
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AAC_STAT0_AAC_ICOMP_CTRL_POS  6
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int aac_ades_out : 5;
    unsigned int aac_toolarge_out : 1;
    unsigned int aac_icomp_ctrl : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_vco_cal_aac_stat0;
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AAC_STAT0_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AAC_STAT0_DYNAMIC true
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AAC_STAT0_SNAPCLOCK 0
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AAC_STAT0_ADDR  0x4001d5e8


/* vco_cal_aac_stat1 register */
/*----------------------*/
/* VCO calibration : AAC status part 2 */
/* aac_ictrl_out : Amplitude control for VCO */
/* aac_iref_ctrl_out : Reference current control output for the Amplitude Voltage Reference (in analog). To adjust the temperature coefficient of the amplitude. If aac_enable=1 and aac_lock=0 and IwAsyncReset_a=0 then aac_ictrl_out=aac_ictrl_in, else */
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AAC_STAT1_AAC_ICTRL_OUT_MASK 0x001f
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AAC_STAT1_AAC_ICTRL_OUT_POS  0
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AAC_STAT1_AAC_IREF_CTRL_OUT_MASK 0x03e0
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AAC_STAT1_AAC_IREF_CTRL_OUT_POS  5
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int aac_ictrl_out : 5;
    unsigned int aac_iref_ctrl_out : 5;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_vco_cal_aac_stat1;
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AAC_STAT1_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AAC_STAT1_DYNAMIC true
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AAC_STAT1_SNAPCLOCK 0
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_AAC_STAT1_ADDR  0x4001d5ec


/* vco_cal_lock_stat register */
/*----------------------*/
/* VCO calibration lock status */
/* afc_lock : Indication if the frequency loop is in lock. The condition to become in lock depends on the setting afc_lock_ctrl1, this setting determines the amount of samples that Fsel should be stable. An Fsel sample is seen as stable as: It did not change more than 1 compared to the previous value. If it is not equal to the maximum or minimum value. As the course part of Fsel does not changes (jump detector) */
/* aac_lock : Indication if the AAC-loop is in lock */
/* aafc_lock : Indication that the AAFC (frequency and amplitude) are in lock */
/* det_out_of_range : Indication if the frequency Fvco_div is out of the range Fvco_div smaller than Fvco_div_min_runin during run_in Fvco_div smaller than Fvco_div_min during calibration The out-of-range detection is active as long: (aafc_lock+afc_manual+aac_manual) =1 */
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_LOCK_STAT_AFC_LOCK_MASK 0x0001
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_LOCK_STAT_AFC_LOCK_POS  0
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_LOCK_STAT_AAC_LOCK_MASK 0x0002
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_LOCK_STAT_AAC_LOCK_POS  1
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_LOCK_STAT_AAFC_LOCK_MASK 0x0004
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_LOCK_STAT_AAFC_LOCK_POS  2
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_LOCK_STAT_DET_OUT_OF_RANGE_MASK 0x0008
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_LOCK_STAT_DET_OUT_OF_RANGE_POS  3
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int afc_lock : 1;
    unsigned int aac_lock : 1;
    unsigned int aafc_lock : 1;
    unsigned int det_out_of_range : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_vco_cal_lock_stat;
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_LOCK_STAT_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_LOCK_STAT_DYNAMIC true
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_LOCK_STAT_SNAPCLOCK 0
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_LOCK_STAT_ADDR  0x4001d5f0


/* vco_cal_sync_delay register */
/*----------------------*/
/* VCO calibration sync delay for det_fref and afc_fref synchronization in XO clock domain */
/* aac_fref_sync_delay : AAC Fsel sync delay */
/* afc_fref_sync_delay : AFC Fsel sync delay */
/* det_fref_sync_delay : Det Fsel sync delay */
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_SYNC_DELAY_AAC_FREF_SYNC_DELAY_MASK 0x0007
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_SYNC_DELAY_AAC_FREF_SYNC_DELAY_POS  0
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_SYNC_DELAY_AFC_FREF_SYNC_DELAY_MASK 0x0070
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_SYNC_DELAY_AFC_FREF_SYNC_DELAY_POS  4
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_SYNC_DELAY_DET_FREF_SYNC_DELAY_MASK 0x0700
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_SYNC_DELAY_DET_FREF_SYNC_DELAY_POS  8
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int aac_fref_sync_delay : 3;
    unsigned int : 1;
    unsigned int afc_fref_sync_delay : 3;
    unsigned int : 1;
    unsigned int det_fref_sync_delay : 3;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_vco_cal_sync_delay;
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_SYNC_DELAY_RST 0x10
#define EXTAPB_REGFILE_CALIBRATION_VCO_CAL_SYNC_DELAY_ADDR  0x4001d5f4


/* dco_cal_gain_en_low register */
/*----------------------*/
/* DCO calibration gain enable */
/* gain_en : DCO calibration gain enable, This means ifamp 0/1 for aaf 0-6 and ifamp 2 aaf 0/1 */
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_GAIN_EN_LOW_GAIN_EN_MASK 0xffff
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_GAIN_EN_LOW_GAIN_EN_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int gain_en : 16;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_dco_cal_gain_en_low;
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_GAIN_EN_LOW_RST 0x1
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_GAIN_EN_LOW_ADDR  0x4001d5f8


/* dco_cal_gain_en_high register */
/*----------------------*/
/* DCO calibration gain enable */
/* gain_en : DCO calibration gain enable, This means aaf 2-6 and ifamp 2 aaf 0/1 */
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_GAIN_EN_HIGH_GAIN_EN_MASK 0x001f
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_GAIN_EN_HIGH_GAIN_EN_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int gain_en : 5;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_dco_cal_gain_en_high;
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_GAIN_EN_HIGH_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_GAIN_EN_HIGH_ADDR  0x4001d5fc


/* dco_cal_cfg register */
/*----------------------*/
/* DCO calibration configuration. (Loop enable and lna gain) */
/* loop_en : Enable bits for the loops of the DC Offset calibration. A one-hot encoding is used. When loop_en[i] = 1, loop i is enabled. */
/* coarse_tables :  */
/* lna_gain : LNA gain used for DC offset calibration */
/* lna_gain_val_upd_on_cal_en : When 1, dc offset value related to lna_gain is updated on cal */
/* lna_gain_val_en : When 1, dc offset value related to lna gain is used */
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_CFG_LOOP_EN_MASK 0x000f
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_CFG_LOOP_EN_POS  0
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
   /* ES1 if explicitly configured */
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_CFG_LNA_GAIN_MASK 0x0070
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_CFG_LNA_GAIN_POS  4
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_CFG_LNA_GAIN_VAL_UPD_ON_CAL_EN_MASK 0x0080
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_CFG_LNA_GAIN_VAL_UPD_ON_CAL_EN_POS  7
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_CFG_LNA_GAIN_VAL_EN_MASK 0x0100
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_CFG_LNA_GAIN_VAL_EN_POS  8
#else
   /* ES2 default */
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_CFG_COARSE_TABLES_MASK 0x0030
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_CFG_COARSE_TABLES_POS  4
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_CFG_LNA_GAIN_MASK 0x01c0
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_CFG_LNA_GAIN_POS  6
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_CFG_LNA_GAIN_VAL_UPD_ON_CAL_EN_MASK 0x0200
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_CFG_LNA_GAIN_VAL_UPD_ON_CAL_EN_POS  9
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_CFG_LNA_GAIN_VAL_EN_MASK 0x0400
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_CFG_LNA_GAIN_VAL_EN_POS  10
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int loop_en : 4;
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
    /* ES1 if explicitly configured */
#else
    /* ES2 default */
    unsigned int coarse_tables : 2;
#endif
    unsigned int lna_gain : 3;
    unsigned int lna_gain_val_upd_on_cal_en : 1;
    unsigned int lna_gain_val_en : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_dco_cal_cfg;
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_CFG_RST 0x17
#else
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_CFG_RST 0x47
#endif
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_CFG_ADDR  0x4001d600


/* dco_cal_alpha_cfg0 register */
/*----------------------*/
/* Alpha parameters applied towards the DC offset compensation module during DC offset calibration for loop 0 and 1 */
/* alpha_loop0 : Alpha parameter applied towards the DC offset compensation module during loop 0 of the DC offset calibration */
/* alpha_loop1 : Alpha parameter applied towards the DC offset compensation module during loop 1 of the DC offset calibration */
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_ALPHA_CFG0_ALPHA_LOOP0_MASK 0x001f
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_ALPHA_CFG0_ALPHA_LOOP0_POS  0
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_ALPHA_CFG0_ALPHA_LOOP1_MASK 0x1f00
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_ALPHA_CFG0_ALPHA_LOOP1_POS  8
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int alpha_loop0 : 5;
    unsigned int : 3;
    unsigned int alpha_loop1 : 5;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_dco_cal_alpha_cfg0;
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_ALPHA_CFG0_RST 0xc0b
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_ALPHA_CFG0_ADDR  0x4001d604


/* dco_cal_alpha_cfg1 register */
/*----------------------*/
/* Alpha parameters applied towards the DC offset compensation module during DC offset calibration for loop 2 and 3 */
/* alpha_loop2 : Alpha parameter applied towards the DC offset compensation module during loop 2 of the DC offset calibration */
/* alpha_loop3 : Alpha parameter applied towards the DC offset compensation module during loop 3 of the DC offset calibration */
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_ALPHA_CFG1_ALPHA_LOOP2_MASK 0x001f
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_ALPHA_CFG1_ALPHA_LOOP2_POS  0
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_ALPHA_CFG1_ALPHA_LOOP3_MASK 0x1f00
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_ALPHA_CFG1_ALPHA_LOOP3_POS  8
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int alpha_loop2 : 5;
    unsigned int : 3;
    unsigned int alpha_loop3 : 5;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_dco_cal_alpha_cfg1;
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_ALPHA_CFG1_RST 0xc0e
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_ALPHA_CFG1_ADDR  0x4001d608


/* dco_cal_meas_period register */
/*----------------------*/
/* Specifies the measurement period for each loop of the DC offset calibration, being the amount of 16 samples (= 1 us) processed by the DC offset compensation HP/LP filter */
/* meas_period : Identical to register description */
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_MEAS_PERIOD_MEAS_PERIOD_MASK 0xffff
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_MEAS_PERIOD_MEAS_PERIOD_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int meas_period : 16;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_dco_cal_meas_period;
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_MEAS_PERIOD_RST 0x271
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_MEAS_PERIOD0_ADDR 0x4001d60c
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_MEAS_PERIOD0 ((t_extapb_regfile_calibration_dco_cal_meas_period *)EXTAPB_REGFILE_CALIBRATION_DCO_CAL_MEAS_PERIOD0_ADDR)
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_MEAS_PERIOD1_ADDR 0x4001d610
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_MEAS_PERIOD1 ((t_extapb_regfile_calibration_dco_cal_meas_period *)EXTAPB_REGFILE_CALIBRATION_DCO_CAL_MEAS_PERIOD1_ADDR)
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_MEAS_PERIOD2_ADDR 0x4001d614
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_MEAS_PERIOD2 ((t_extapb_regfile_calibration_dco_cal_meas_period *)EXTAPB_REGFILE_CALIBRATION_DCO_CAL_MEAS_PERIOD2_ADDR)
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_MEAS_PERIOD3_ADDR 0x4001d618
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_MEAS_PERIOD3 ((t_extapb_regfile_calibration_dco_cal_meas_period *)EXTAPB_REGFILE_CALIBRATION_DCO_CAL_MEAS_PERIOD3_ADDR)


/* dco_cal_dc_offset_gain_index register */
/*----------------------*/
/* The fine DC offset compensation values are stored in HW as an array of 21 values for both I and Q chain. (One entry for each possible gain value) which is indirect accessible by SW. The gain index in this register specifies the gain index for which the SW accesses the fine DC offset compensation values. */
/* index : See register description */
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_OFFSET_GAIN_INDEX_INDEX_MASK 0x001f
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_OFFSET_GAIN_INDEX_INDEX_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int index : 5;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_dco_cal_dc_offset_gain_index;
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_OFFSET_GAIN_INDEX_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_OFFSET_GAIN_INDEX_ADDR  0x4001d61c


/* dco_cal_dc_offset_i register */
/*----------------------*/
/* Fine DC offset compensation value (I chain). The gain index for which this register is accessed is set by dco_cal_dc_offset_gain_index. */
/* fine_dc_offset_i : See register description. */
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_OFFSET_I_FINE_DC_OFFSET_I_MASK 0x0fff
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_OFFSET_I_FINE_DC_OFFSET_I_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int fine_dc_offset_i : 12;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_dco_cal_dc_offset_i;
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_OFFSET_I_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_OFFSET_I_ADDR  0x4001d620


/* dco_cal_dc_offset_q register */
/*----------------------*/
/* Fine DC offset compensation value (Q chain). The gain index for which this register is accessed is set by dco_cal_dc_offset_gain_index. */
/* fine_dc_offset_q : See register description. */
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_OFFSET_Q_FINE_DC_OFFSET_Q_MASK 0x0fff
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_OFFSET_Q_FINE_DC_OFFSET_Q_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int fine_dc_offset_q : 12;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_dco_cal_dc_offset_q;
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_OFFSET_Q_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_OFFSET_Q_ADDR  0x4001d624


/* iq_cal_alpha_cfg0 register */
/*----------------------*/
/* Alpha parameters applied towards the DC offset compensation module during IQ mismatch calibration */
/* alpha_dc_offset_phase : Alpha parameter applied towards the DC offset compensation module during the IQ mismatch phase calibration. */
/* alpha_dc_offset_mag : Alpha parameter applied towards the DC offset compensation module during the IQ mismatch magnitude calibration. */
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_ALPHA_CFG0_ALPHA_DC_OFFSET_PHASE_MASK 0x001f
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_ALPHA_CFG0_ALPHA_DC_OFFSET_PHASE_POS  0
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_ALPHA_CFG0_ALPHA_DC_OFFSET_MAG_MASK 0x03e0
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_ALPHA_CFG0_ALPHA_DC_OFFSET_MAG_POS  5
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int alpha_dc_offset_phase : 5;
    unsigned int alpha_dc_offset_mag : 5;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_iq_cal_alpha_cfg0;
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_ALPHA_CFG0_RST 0xa8
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_ALPHA_CFG0_ADDR  0x4001d628


/* iq_cal_alpha_cfg1 register */
/*----------------------*/
/* Alpha parameters applied towards the IQ mismatch rectifier module during loop 0 and 1 of the IQ mismatch magnitude calibration. */
/* alpha_mag_loop0 : Alpha parameter applied towards the IQ mismatch rectifier module during loop 0 of the IQ mismatch magnitude calibration. */
/* alpha_mag_loop1 : Alpha parameter applied towards the IQ mismatch rectifier module during loop 1 of the IQ mismatch magnitude calibration. */
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_ALPHA_CFG1_ALPHA_MAG_LOOP0_MASK 0x001f
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_ALPHA_CFG1_ALPHA_MAG_LOOP0_POS  0
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_ALPHA_CFG1_ALPHA_MAG_LOOP1_MASK 0x1f00
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_ALPHA_CFG1_ALPHA_MAG_LOOP1_POS  8
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int alpha_mag_loop0 : 5;
    unsigned int : 3;
    unsigned int alpha_mag_loop1 : 5;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_iq_cal_alpha_cfg1;
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_ALPHA_CFG1_RST 0xe0b
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_ALPHA_CFG1_ADDR  0x4001d62c


/* iq_cal_alpha_cfg2 register */
/*----------------------*/
/* Alpha parameters applied towards the IQ mismatch rectifier module during loop 2 and 3 of the IQ mismatch magnitude calibration. */
/* alpha_mag_loop2 : Alpha parameter applied towards the IQ mismatch rectifier module during loop 2 of the IQ mismatch magnitude calibration. */
/* alpha_mag_loop3 : Alpha parameter applied towards the IQ mismatch rectifier module during loop 3 of the IQ mismatch magnitude calibration. */
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_ALPHA_CFG2_ALPHA_MAG_LOOP2_MASK 0x001f
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_ALPHA_CFG2_ALPHA_MAG_LOOP2_POS  0
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_ALPHA_CFG2_ALPHA_MAG_LOOP3_MASK 0x1f00
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_ALPHA_CFG2_ALPHA_MAG_LOOP3_POS  8
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int alpha_mag_loop2 : 5;
    unsigned int : 3;
    unsigned int alpha_mag_loop3 : 5;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_iq_cal_alpha_cfg2;
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_ALPHA_CFG2_RST 0x1010
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_ALPHA_CFG2_ADDR  0x4001d630


/* iq_cal_k_i_cfg register */
/*----------------------*/
/* K_i parameters used by the IQ mismatch phase calibration during the different loops. */
/* k_i_loop0 : K_i parameter used by the IQ mismatch phase calibration during loop 0 */
/* k_i_loop1 : K_i parameter used by the IQ mismatch phase calibration during loop 1 */
/* k_i_loop2 : K_i parameter used by the IQ mismatch phase calibration during loop 2 */
/* k_i_loop3 : K_i parameter used by the IQ mismatch phase calibration during loop 3 */
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_K_I_CFG_K_I_LOOP0_MASK 0x000f
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_K_I_CFG_K_I_LOOP0_POS  0
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_K_I_CFG_K_I_LOOP1_MASK 0x00f0
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_K_I_CFG_K_I_LOOP1_POS  4
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_K_I_CFG_K_I_LOOP2_MASK 0x0f00
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_K_I_CFG_K_I_LOOP2_POS  8
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_K_I_CFG_K_I_LOOP3_MASK 0xf000
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_K_I_CFG_K_I_LOOP3_POS  12
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int k_i_loop0 : 4;
    unsigned int k_i_loop1 : 4;
    unsigned int k_i_loop2 : 4;
    unsigned int k_i_loop3 : 4;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_iq_cal_k_i_cfg;
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_K_I_CFG_RST 0x9964
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_K_I_CFG_ADDR  0x4001d634


/* iq_cal_loop_en register */
/*----------------------*/
/* Enable bits for the loops of the IQ mismatch calibration. A one-hot encoding is used. */
/* phase_loop_en : Enable bits for the loops of the IQ mismatch phase calibration. */
/* mag_loop_en : Enable bits for the loops of teh IQ mismatch magnitude calibration. */
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_LOOP_EN_PHASE_LOOP_EN_MASK 0x000f
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_LOOP_EN_PHASE_LOOP_EN_POS  0
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_LOOP_EN_MAG_LOOP_EN_MASK 0x00f0
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_LOOP_EN_MAG_LOOP_EN_POS  4
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int phase_loop_en : 4;
    unsigned int mag_loop_en : 4;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_iq_cal_loop_en;
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_LOOP_EN_RST 0x77
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_LOOP_EN_ADDR  0x4001d638


/* iq_cal_phase_meas_period register */
/*----------------------*/
/* Specifies the measurement period for each loop of the IQ mismatch phase calibration, being the amount of samples processed by the IQ mismatch compensation module. */
/* meas_period : See register description. */
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_PHASE_MEAS_PERIOD_MEAS_PERIOD_MASK 0xffff
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_PHASE_MEAS_PERIOD_MEAS_PERIOD_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int meas_period : 16;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_iq_cal_phase_meas_period;
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_PHASE_MEAS_PERIOD_RST 0x1
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_PHASE_MEAS_PERIOD0_ADDR 0x4001d63c
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_PHASE_MEAS_PERIOD0 ((t_extapb_regfile_calibration_iq_cal_phase_meas_period *)EXTAPB_REGFILE_CALIBRATION_IQ_CAL_PHASE_MEAS_PERIOD0_ADDR)
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_PHASE_MEAS_PERIOD1_ADDR 0x4001d640
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_PHASE_MEAS_PERIOD1 ((t_extapb_regfile_calibration_iq_cal_phase_meas_period *)EXTAPB_REGFILE_CALIBRATION_IQ_CAL_PHASE_MEAS_PERIOD1_ADDR)
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_PHASE_MEAS_PERIOD2_ADDR 0x4001d644
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_PHASE_MEAS_PERIOD2 ((t_extapb_regfile_calibration_iq_cal_phase_meas_period *)EXTAPB_REGFILE_CALIBRATION_IQ_CAL_PHASE_MEAS_PERIOD2_ADDR)
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_PHASE_MEAS_PERIOD3_ADDR 0x4001d648
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_PHASE_MEAS_PERIOD3 ((t_extapb_regfile_calibration_iq_cal_phase_meas_period *)EXTAPB_REGFILE_CALIBRATION_IQ_CAL_PHASE_MEAS_PERIOD3_ADDR)


/* iq_cal_mag_meas_period register */
/*----------------------*/
/* Specifies the measurement period for each loop of the IQ mismatch magnitude calibration, being the amount of samples processed by the IQ mismatch compensation module. */
/* meas_period : See register description */
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_MAG_MEAS_PERIOD_MEAS_PERIOD_MASK 0xffff
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_MAG_MEAS_PERIOD_MEAS_PERIOD_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int meas_period : 16;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_iq_cal_mag_meas_period;
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_MAG_MEAS_PERIOD_RST 0x1
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_MAG_MEAS_PERIOD0_ADDR 0x4001d64c
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_MAG_MEAS_PERIOD0 ((t_extapb_regfile_calibration_iq_cal_mag_meas_period *)EXTAPB_REGFILE_CALIBRATION_IQ_CAL_MAG_MEAS_PERIOD0_ADDR)
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_MAG_MEAS_PERIOD1_ADDR 0x4001d650
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_MAG_MEAS_PERIOD1 ((t_extapb_regfile_calibration_iq_cal_mag_meas_period *)EXTAPB_REGFILE_CALIBRATION_IQ_CAL_MAG_MEAS_PERIOD1_ADDR)
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_MAG_MEAS_PERIOD2_ADDR 0x4001d654
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_MAG_MEAS_PERIOD2 ((t_extapb_regfile_calibration_iq_cal_mag_meas_period *)EXTAPB_REGFILE_CALIBRATION_IQ_CAL_MAG_MEAS_PERIOD2_ADDR)
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_MAG_MEAS_PERIOD3_ADDR 0x4001d658
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_MAG_MEAS_PERIOD3 ((t_extapb_regfile_calibration_iq_cal_mag_meas_period *)EXTAPB_REGFILE_CALIBRATION_IQ_CAL_MAG_MEAS_PERIOD3_ADDR)


/* iq_cal_scale_factor register */
/*----------------------*/
/* IQ mismatch scale factor */
/* iq_mismatch_scale_factor : See register description. */
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_SCALE_FACTOR_IQ_MISMATCH_SCALE_FACTOR_MASK 0x01ff
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_SCALE_FACTOR_IQ_MISMATCH_SCALE_FACTOR_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int iq_mismatch_scale_factor : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_iq_cal_scale_factor;
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_SCALE_FACTOR_RST 0x100
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_SCALE_FACTOR_ADDR  0x4001d65c


/* iq_cal_cross_factor register */
/*----------------------*/
/* IQ mismatch cross factor. */
/* iq_mismatch_cross_factor : See register description. */
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_CROSS_FACTOR_IQ_MISMATCH_CROSS_FACTOR_MASK 0x03ff
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_CROSS_FACTOR_IQ_MISMATCH_CROSS_FACTOR_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int iq_mismatch_cross_factor : 10;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_iq_cal_cross_factor;
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_CROSS_FACTOR_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_IQ_CAL_CROSS_FACTOR_ADDR  0x4001d660


/* r_cal_cfg register */
/*----------------------*/
/* Parameters applicable for the R calibration */
/* power_up_time : Specifies the R calibration power up time above 20 us (expressed in us). */
/* comp_delay : Specifies the comparator window period above 500 ns (expressed in 16 MHz clock cycles). */
#define EXTAPB_REGFILE_CALIBRATION_R_CAL_CFG_POWER_UP_TIME_MASK 0x000f
#define EXTAPB_REGFILE_CALIBRATION_R_CAL_CFG_POWER_UP_TIME_POS  0
#define EXTAPB_REGFILE_CALIBRATION_R_CAL_CFG_COMP_DELAY_MASK 0x00f0
#define EXTAPB_REGFILE_CALIBRATION_R_CAL_CFG_COMP_DELAY_POS  4
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int power_up_time : 4;
    unsigned int comp_delay : 4;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_r_cal_cfg;
#define EXTAPB_REGFILE_CALIBRATION_R_CAL_CFG_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_R_CAL_CFG_ADDR  0x4001d664


/* r_cal_status register */
/*----------------------*/
/* Result of the R calibration */
/* trimr_set : R trim value */
/* error : Error flag from the R calibration. */
#define EXTAPB_REGFILE_CALIBRATION_R_CAL_STATUS_TRIMR_SET_MASK 0x001f
#define EXTAPB_REGFILE_CALIBRATION_R_CAL_STATUS_TRIMR_SET_POS  0
#define EXTAPB_REGFILE_CALIBRATION_R_CAL_STATUS_ERROR_MASK 0x0020
#define EXTAPB_REGFILE_CALIBRATION_R_CAL_STATUS_ERROR_POS  5
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int trimr_set : 5;
    unsigned int error : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_r_cal_status;
#define EXTAPB_REGFILE_CALIBRATION_R_CAL_STATUS_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_R_CAL_STATUS_DYNAMIC true
#define EXTAPB_REGFILE_CALIBRATION_R_CAL_STATUS_SNAPCLOCK 0
#define EXTAPB_REGFILE_CALIBRATION_R_CAL_STATUS_ADDR  0x4001d668


/* rc_cal_transient_period register */
/*----------------------*/
/* RC calibration delay (expressed in 16 MHz clock cycles) used to let the analog settle after an update of the trimc_set value. */
/* transient_period : See register description. */
#define EXTAPB_REGFILE_CALIBRATION_RC_CAL_TRANSIENT_PERIOD_TRANSIENT_PERIOD_MASK 0xffff
#define EXTAPB_REGFILE_CALIBRATION_RC_CAL_TRANSIENT_PERIOD_TRANSIENT_PERIOD_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int transient_period : 16;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_rc_cal_transient_period;
#define EXTAPB_REGFILE_CALIBRATION_RC_CAL_TRANSIENT_PERIOD_RST 0x140
#define EXTAPB_REGFILE_CALIBRATION_RC_CAL_TRANSIENT_PERIOD_ADDR  0x4001d66c


/* rc_cal_discharge_period register */
/*----------------------*/
/* RC calibration discharge delay time above 46 us (expressed in us) */
/* discharge_period : See register description */
#define EXTAPB_REGFILE_CALIBRATION_RC_CAL_DISCHARGE_PERIOD_DISCHARGE_PERIOD_MASK 0x000f
#define EXTAPB_REGFILE_CALIBRATION_RC_CAL_DISCHARGE_PERIOD_DISCHARGE_PERIOD_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int discharge_period : 4;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_rc_cal_discharge_period;
#define EXTAPB_REGFILE_CALIBRATION_RC_CAL_DISCHARGE_PERIOD_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_RC_CAL_DISCHARGE_PERIOD_ADDR  0x4001d670


/* rc_cal_treshold_period register */
/*----------------------*/
/* RC calibration threshold time expressed in 16 MHz clock cycles. */
/* treshold_period : See register description. */
#define EXTAPB_REGFILE_CALIBRATION_RC_CAL_TRESHOLD_PERIOD_TRESHOLD_PERIOD_MASK 0xffff
#define EXTAPB_REGFILE_CALIBRATION_RC_CAL_TRESHOLD_PERIOD_TRESHOLD_PERIOD_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int treshold_period : 16;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_rc_cal_treshold_period;
#define EXTAPB_REGFILE_CALIBRATION_RC_CAL_TRESHOLD_PERIOD_RST 0x64
#define EXTAPB_REGFILE_CALIBRATION_RC_CAL_TRESHOLD_PERIOD_ADDR  0x4001d674


/* rc_cal_status register */
/*----------------------*/
/* Result of the RC calibration */
/* trimc_set : RC trim value */
/* error : Error flag from the RC calibration. */
#define EXTAPB_REGFILE_CALIBRATION_RC_CAL_STATUS_TRIMC_SET_MASK 0x0007
#define EXTAPB_REGFILE_CALIBRATION_RC_CAL_STATUS_TRIMC_SET_POS  0
#define EXTAPB_REGFILE_CALIBRATION_RC_CAL_STATUS_ERROR_MASK 0x0008
#define EXTAPB_REGFILE_CALIBRATION_RC_CAL_STATUS_ERROR_POS  3
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int trimc_set : 3;
    unsigned int error : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_rc_cal_status;
#define EXTAPB_REGFILE_CALIBRATION_RC_CAL_STATUS_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_RC_CAL_STATUS_DYNAMIC true
#define EXTAPB_REGFILE_CALIBRATION_RC_CAL_STATUS_SNAPCLOCK 0
#define EXTAPB_REGFILE_CALIBRATION_RC_CAL_STATUS_ADDR  0x4001d678


/* kmod_band_cal_cfg register */
/*----------------------*/
/* KMod band calibration parameters */
/* calib_code_exp : Specifies the negative and positive code applied to the DAC input during KMod band calibration as a power of 2. The positive code is 2**calib_code_exp. The negative code is -2**calib_code_exp. */
/* fref_kmod_calib_sel : Configures the AFC counter integration window in terms of divided reference (XO) clocks. */
/* kmod_precision_factor : Specifies the KMod precision factor. */
/* startup_transient : Speificies the timeout period to avoid transient effects after the DAC code changes. (Expressed in XO clock periods). */
#define EXTAPB_REGFILE_CALIBRATION_KMOD_BAND_CAL_CFG_CALIB_CODE_EXP_MASK 0x0007
#define EXTAPB_REGFILE_CALIBRATION_KMOD_BAND_CAL_CFG_CALIB_CODE_EXP_POS  0
#define EXTAPB_REGFILE_CALIBRATION_KMOD_BAND_CAL_CFG_FREF_KMOD_CALIB_SEL_MASK 0x0018
#define EXTAPB_REGFILE_CALIBRATION_KMOD_BAND_CAL_CFG_FREF_KMOD_CALIB_SEL_POS  3
#define EXTAPB_REGFILE_CALIBRATION_KMOD_BAND_CAL_CFG_KMOD_PRECISION_FACTOR_MASK 0x0060
#define EXTAPB_REGFILE_CALIBRATION_KMOD_BAND_CAL_CFG_KMOD_PRECISION_FACTOR_POS  5
#define EXTAPB_REGFILE_CALIBRATION_KMOD_BAND_CAL_CFG_STARTUP_TRANSIENT_MASK 0x7f80
#define EXTAPB_REGFILE_CALIBRATION_KMOD_BAND_CAL_CFG_STARTUP_TRANSIENT_POS  7
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int calib_code_exp : 3;
    unsigned int fref_kmod_calib_sel : 2;
    unsigned int kmod_precision_factor : 2;
    unsigned int startup_transient : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_kmod_band_cal_cfg;
#define EXTAPB_REGFILE_CALIBRATION_KMOD_BAND_CAL_CFG_RST 0xa2e
#define EXTAPB_REGFILE_CALIBRATION_KMOD_BAND_CAL_CFG_ADDR  0x4001d67c


/* kmod_band_cal_count_1_lsb register */
/*----------------------*/
/* LSB part of the integrated AFC value resulting from the KMod band calibration with the negative DAC code. */
/* count_1_lsb : See register description. */
#define EXTAPB_REGFILE_CALIBRATION_KMOD_BAND_CAL_COUNT_1_LSB_COUNT_1_LSB_MASK 0xffff
#define EXTAPB_REGFILE_CALIBRATION_KMOD_BAND_CAL_COUNT_1_LSB_COUNT_1_LSB_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int count_1_lsb : 16;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_kmod_band_cal_count_1_lsb;
#define EXTAPB_REGFILE_CALIBRATION_KMOD_BAND_CAL_COUNT_1_LSB_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_KMOD_BAND_CAL_COUNT_1_LSB_ADDR  0x4001d680


/* kmod_band_cal_count_1_msb register */
/*----------------------*/
/* MSB part of the integrated AFC value resulting from the KMod band calibration with the negative DAC code. */
/* count_1_msb : See register description. */
#define EXTAPB_REGFILE_CALIBRATION_KMOD_BAND_CAL_COUNT_1_MSB_COUNT_1_MSB_MASK 0x003f
#define EXTAPB_REGFILE_CALIBRATION_KMOD_BAND_CAL_COUNT_1_MSB_COUNT_1_MSB_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int count_1_msb : 6;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_kmod_band_cal_count_1_msb;
#define EXTAPB_REGFILE_CALIBRATION_KMOD_BAND_CAL_COUNT_1_MSB_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_KMOD_BAND_CAL_COUNT_1_MSB_ADDR  0x4001d684


/* kmod_band_cal_count_2_lsb register */
/*----------------------*/
/* LSB part of the integrated AFC value resulting from the KMod band calibration with the positive DAC code. */
/* count_2_lsb : See register description. */
#define EXTAPB_REGFILE_CALIBRATION_KMOD_BAND_CAL_COUNT_2_LSB_COUNT_2_LSB_MASK 0xffff
#define EXTAPB_REGFILE_CALIBRATION_KMOD_BAND_CAL_COUNT_2_LSB_COUNT_2_LSB_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int count_2_lsb : 16;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_kmod_band_cal_count_2_lsb;
#define EXTAPB_REGFILE_CALIBRATION_KMOD_BAND_CAL_COUNT_2_LSB_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_KMOD_BAND_CAL_COUNT_2_LSB_ADDR  0x4001d688


/* kmod_band_cal_count_2_msb register */
/*----------------------*/
/* MSB part of the integrated AFC value resulting from the KMod band calibration with the positive DAC code. */
/* count_2_msb : See register description */
#define EXTAPB_REGFILE_CALIBRATION_KMOD_BAND_CAL_COUNT_2_MSB_COUNT_2_MSB_MASK 0x003f
#define EXTAPB_REGFILE_CALIBRATION_KMOD_BAND_CAL_COUNT_2_MSB_COUNT_2_MSB_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int count_2_msb : 6;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_kmod_band_cal_count_2_msb;
#define EXTAPB_REGFILE_CALIBRATION_KMOD_BAND_CAL_COUNT_2_MSB_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_KMOD_BAND_CAL_COUNT_2_MSB_ADDR  0x4001d68c


/* kmod_band_cal_corr_1 register */
/*----------------------*/
/* KMod band correction factor */
/* corr_1 : See register description */
#define EXTAPB_REGFILE_CALIBRATION_KMOD_BAND_CAL_CORR_1_CORR_1_MASK 0x07ff
#define EXTAPB_REGFILE_CALIBRATION_KMOD_BAND_CAL_CORR_1_CORR_1_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int corr_1 : 11;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_kmod_band_cal_corr_1;
#define EXTAPB_REGFILE_CALIBRATION_KMOD_BAND_CAL_CORR_1_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_KMOD_BAND_CAL_CORR_1_ADDR  0x4001d690


/* kmod_chan_cal_corr_2 register */
/*----------------------*/
/* KMod channel correction factor */
/* corr_2 : See register description */
#define EXTAPB_REGFILE_CALIBRATION_KMOD_CHAN_CAL_CORR_2_CORR_2_MASK 0x07ff
#define EXTAPB_REGFILE_CALIBRATION_KMOD_CHAN_CAL_CORR_2_CORR_2_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int corr_2 : 11;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_kmod_chan_cal_corr_2;
#define EXTAPB_REGFILE_CALIBRATION_KMOD_CHAN_CAL_CORR_2_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_KMOD_CHAN_CAL_CORR_2_ADDR  0x4001d694


/* synth_cal_startup_afc_ctrl_bin register */
/*----------------------*/
/* Override value for binary cap bank settings for VCO during synthesizer startup calibration. */
/* afc_ctrl_bin : See register description. */
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_STARTUP_AFC_CTRL_BIN_AFC_CTRL_BIN_MASK 0x000f
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_STARTUP_AFC_CTRL_BIN_AFC_CTRL_BIN_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int afc_ctrl_bin : 4;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_synth_cal_startup_afc_ctrl_bin;
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_STARTUP_AFC_CTRL_BIN_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_STARTUP_AFC_CTRL_BIN_ADDR  0x4001d698


/* synth_cal_startup_afc_ctrl_therm register */
/*----------------------*/
/* Override value for thermo cap bank settings for VCO during synthesizer startup calibration. */
/* afc_ctrl_therm : See register description. */
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_STARTUP_AFC_CTRL_THERM_AFC_CTRL_THERM_MASK 0x7fff
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_STARTUP_AFC_CTRL_THERM_AFC_CTRL_THERM_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int afc_ctrl_therm : 15;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_synth_cal_startup_afc_ctrl_therm;
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_STARTUP_AFC_CTRL_THERM_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_STARTUP_AFC_CTRL_THERM_ADDR  0x4001d69c


/* synth_cal_startup_aac_ictrl_out_store register */
/*----------------------*/
/* Resulting aac_iref_ctrl_out from AAC calibration during synthesizer startup calibration. */
/* aac_ictrl_out_store : See register description. */
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_STARTUP_AAC_ICTRL_OUT_STORE_AAC_ICTRL_OUT_STORE_MASK 0x001f
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_STARTUP_AAC_ICTRL_OUT_STORE_AAC_ICTRL_OUT_STORE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int aac_ictrl_out_store : 5;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_synth_cal_startup_aac_ictrl_out_store;
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_STARTUP_AAC_ICTRL_OUT_STORE_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_STARTUP_AAC_ICTRL_OUT_STORE_ADDR  0x4001d6a0


/* synth_cal_startup_afc_fsel_out register */
/*----------------------*/
/* Resulting afc_fsel_out values from AFC calibration during synthesizer startup calibration. */
/* afc_fsel_out1 : Resulting afc_fsel_out value from AFC calibration for FCW1 during synthesizer startup calibration. */
/* afc_fsel_out2 : Resulting afc_fsel_out value from AFC calibration for FCW2 during synthesizer startup calibration */
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_STARTUP_AFC_FSEL_OUT_AFC_FSEL_OUT1_MASK 0x00ff
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_STARTUP_AFC_FSEL_OUT_AFC_FSEL_OUT1_POS  0
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_STARTUP_AFC_FSEL_OUT_AFC_FSEL_OUT2_MASK 0xff00
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_STARTUP_AFC_FSEL_OUT_AFC_FSEL_OUT2_POS  8
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int afc_fsel_out1 : 8;
    unsigned int afc_fsel_out2 : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_synth_cal_startup_afc_fsel_out;
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_STARTUP_AFC_FSEL_OUT_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_STARTUP_AFC_FSEL_OUT_ADDR  0x4001d6a4


/* synth_cal_cfg register */
/*----------------------*/
/* Synthesizer calibration parameters */
/* fcw_sel : Selection for FCW1 and FCW2 pair */
/* high_side_injection : For Rx mode, selects between high side injection (LO frequency higher than carrier frequency), and low side injection (LO frequency lower than carrier frequency */
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_CFG_FCW_SEL_MASK 0x0001
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_CFG_FCW_SEL_POS  0
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_CFG_FCW_SEL_FCW12_151_155 0
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_CFG_FCW_SEL_FCW12_151_155_MASK 0x0
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_CFG_FCW_SEL_FCW12_152_154 1
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_CFG_FCW_SEL_FCW12_152_154_MASK 0x1
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_CFG_HIGH_SIDE_INJECTION_MASK 0x0002
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_CFG_HIGH_SIDE_INJECTION_POS  1
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_CFG_HIGH_SIDE_INJECTION_HIGH_SIDE 1
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_CFG_HIGH_SIDE_INJECTION_HIGH_SIDE_MASK 0x2
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_CFG_HIGH_SIDE_INJECTION_LOW_SIDE 0
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_CFG_HIGH_SIDE_INJECTION_LOW_SIDE_MASK 0x0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int fcw_sel : 1;
    unsigned int high_side_injection : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_synth_cal_cfg;
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_CFG_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_CFG_ADDR  0x4001d6a8


/* synth_cal_startup_afc_2_rx register */
/*----------------------*/
/* Resulting afc_2 value from AFC calibration during synthesizer startup calibration. Input for cap bank calculation during Rx mode. */
/* afc_2 : Resulting afc_2 value from AFC calibration during synthesizer startup calibration */
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_STARTUP_AFC_2_RX_AFC_2_MASK 0x01ff
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_STARTUP_AFC_2_RX_AFC_2_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int afc_2 : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_synth_cal_startup_afc_2_rx;
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_STARTUP_AFC_2_RX_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_STARTUP_AFC_2_RX_ADDR  0x4001d6ac


/* synth_cal_startup_afc_diff_rx register */
/*----------------------*/
/* Resulting afc_diff value from AFC calibration during synthesizer startup calibration. Input for cap bank calculation during Rx mode. */
/* afc_diff : Resulting afc_diff value from AFC calibration during synthesizer startup calibration */
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_STARTUP_AFC_DIFF_RX_AFC_DIFF_MASK 0x00ff
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_STARTUP_AFC_DIFF_RX_AFC_DIFF_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int afc_diff : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_synth_cal_startup_afc_diff_rx;
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_STARTUP_AFC_DIFF_RX_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_STARTUP_AFC_DIFF_RX_ADDR  0x4001d6b0


/* synth_cal_pll_lock_init_cfg register */
/*----------------------*/
/* Output values applied at PLL locking sequence */
/* pll_cp_slice_en : Output value for pll_cp_slice_en at start of PLL locking sequence */
/* pll_cp_offcur_en : Output value for pll_cp_offcur_en at start of PLL locking sequence */
/* pll_lf_lock_boost_en : Output value for pll_lf_lock_boost_en at start of PLL locking sequence */
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PLL_LOCK_INIT_CFG_PLL_CP_SLICE_EN_MASK 0x001f
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PLL_LOCK_INIT_CFG_PLL_CP_SLICE_EN_POS  0
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PLL_LOCK_INIT_CFG_PLL_CP_OFFCUR_EN_MASK 0x01e0
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PLL_LOCK_INIT_CFG_PLL_CP_OFFCUR_EN_POS  5
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PLL_LOCK_INIT_CFG_PLL_LF_LOCK_BOOST_EN_MASK 0x0400
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PLL_LOCK_INIT_CFG_PLL_LF_LOCK_BOOST_EN_POS  10
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_cp_slice_en : 5;
    unsigned int pll_cp_offcur_en : 4;
    unsigned int : 1;
    unsigned int pll_lf_lock_boost_en : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_synth_cal_pll_lock_init_cfg;
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PLL_LOCK_INIT_CFG_RST 0x49e
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PLL_LOCK_INIT_CFG_ADDR  0x4001d6b4


/* synth_cal_pre_charge_period register */
/*----------------------*/
/* Synthesizer calibration pre_charge period (expressed in 16 MHz clock cycles) */
/* pre_charge_period : See register description. */
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PRE_CHARGE_PERIOD_PRE_CHARGE_PERIOD_MASK 0x00ff
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PRE_CHARGE_PERIOD_PRE_CHARGE_PERIOD_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pre_charge_period : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_synth_cal_pre_charge_period;
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PRE_CHARGE_PERIOD_RST 0x20
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PRE_CHARGE_PERIOD_ADDR  0x4001d6b8


/* synth_cal_pre_charge_pll_lf_pch register */
/*----------------------*/
/* Several output value set during synthesizer calibration pre_charge */
/* pll_lf_pch_p : Output value for pll_lf_pch_p during synthesizer calibration pre_charge */
/* pll_lf_pch_n : Output value for pll_lf_pch_n during synthesizer calibration pre_charge */
/* pll_lf_pch_p_hold : Output hold value for pll_lf_pch_p during AFC phases of synthesizer calibration for startup */
/* pll_lf_pch_n_hold : Output hold value for pll_lf_pch_n during AFC phases of synthesizer calibration for startup */
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PRE_CHARGE_PLL_LF_PCH_PLL_LF_PCH_P_MASK 0x0007
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PRE_CHARGE_PLL_LF_PCH_PLL_LF_PCH_P_POS  0
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PRE_CHARGE_PLL_LF_PCH_PLL_LF_PCH_N_MASK 0x0038
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PRE_CHARGE_PLL_LF_PCH_PLL_LF_PCH_N_POS  3
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PRE_CHARGE_PLL_LF_PCH_PLL_LF_PCH_P_HOLD_MASK 0x01c0
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PRE_CHARGE_PLL_LF_PCH_PLL_LF_PCH_P_HOLD_POS  6
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PRE_CHARGE_PLL_LF_PCH_PLL_LF_PCH_N_HOLD_MASK 0x0e00
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PRE_CHARGE_PLL_LF_PCH_PLL_LF_PCH_N_HOLD_POS  9
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_lf_pch_p : 3;
    unsigned int pll_lf_pch_n : 3;
    unsigned int pll_lf_pch_p_hold : 3;
    unsigned int pll_lf_pch_n_hold : 3;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_synth_cal_pre_charge_pll_lf_pch;
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PRE_CHARGE_PLL_LF_PCH_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PRE_CHARGE_PLL_LF_PCH_ADDR  0x4001d6bc


/* synth_cal_pll_lock_loop1_cfg register */
/*----------------------*/
/* Output values applied during the first PLL lock loop */
/* pll_cp_slice_en : Output value for pll_cp_slice_en during the first PLL lock loop */
/* pll_cp_offcur_en : Output value for pll_cp_offcur_en during the first PLL lock loop. */
/* pll_lf_lock_boost_en : Output value for pll_lf_lock_boost_en during the first PLL lock loop. */
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PLL_LOCK_LOOP1_CFG_PLL_CP_SLICE_EN_MASK 0x001f
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PLL_LOCK_LOOP1_CFG_PLL_CP_SLICE_EN_POS  0
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PLL_LOCK_LOOP1_CFG_PLL_CP_OFFCUR_EN_MASK 0x01e0
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PLL_LOCK_LOOP1_CFG_PLL_CP_OFFCUR_EN_POS  5
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PLL_LOCK_LOOP1_CFG_PLL_LF_LOCK_BOOST_EN_MASK 0x0200
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PLL_LOCK_LOOP1_CFG_PLL_LF_LOCK_BOOST_EN_POS  9
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_cp_slice_en : 5;
    unsigned int pll_cp_offcur_en : 4;
    unsigned int pll_lf_lock_boost_en : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_synth_cal_pll_lock_loop1_cfg;
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PLL_LOCK_LOOP1_CFG_RST 0x41
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PLL_LOCK_LOOP1_CFG_ADDR  0x4001d6c0


/* synth_cal_pll_lock_loop2_cfg register */
/*----------------------*/
/* Output values applied during the second PLL lock loop */
/* pll_cp_slice_en : Output value for pll_cp_slice_en during the second PLL lock loop */
/* pll_cp_offcur_en : Output value for pll_cp_offcur_en during the second PLL lock loop. */
/* pll_lf_lock_boost_en : Output value for pll_lf_lock_boost_en during the second PLL lock loop. */
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PLL_LOCK_LOOP2_CFG_PLL_CP_SLICE_EN_MASK 0x001f
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PLL_LOCK_LOOP2_CFG_PLL_CP_SLICE_EN_POS  0
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PLL_LOCK_LOOP2_CFG_PLL_CP_OFFCUR_EN_MASK 0x01e0
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PLL_LOCK_LOOP2_CFG_PLL_CP_OFFCUR_EN_POS  5
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PLL_LOCK_LOOP2_CFG_PLL_LF_LOCK_BOOST_EN_MASK 0x0200
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PLL_LOCK_LOOP2_CFG_PLL_LF_LOCK_BOOST_EN_POS  9
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_cp_slice_en : 5;
    unsigned int pll_cp_offcur_en : 4;
    unsigned int pll_lf_lock_boost_en : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_synth_cal_pll_lock_loop2_cfg;
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PLL_LOCK_LOOP2_CFG_RST 0x83
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PLL_LOCK_LOOP2_CFG_ADDR  0x4001d6c4


/* synth_cal_pll_lock_loop3_cfg register */
/*----------------------*/
/* Output values applied during the third PLL lock loop. */
/* pll_cp_slice_en : Output values for pll_cp_slice_en during the third PLL lock loop. */
/* pll_cp_offcur_en : Output values for pll_cp_offcur_en during the third PLL lock loop. */
/* pll_lf_lock_boost_en : Output values for pll_lf_lock_boost_en during the third PLL lock loop. */
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PLL_LOCK_LOOP3_CFG_PLL_CP_SLICE_EN_MASK 0x001f
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PLL_LOCK_LOOP3_CFG_PLL_CP_SLICE_EN_POS  0
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PLL_LOCK_LOOP3_CFG_PLL_CP_OFFCUR_EN_MASK 0x01e0
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PLL_LOCK_LOOP3_CFG_PLL_CP_OFFCUR_EN_POS  5
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PLL_LOCK_LOOP3_CFG_PLL_LF_LOCK_BOOST_EN_MASK 0x0200
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PLL_LOCK_LOOP3_CFG_PLL_LF_LOCK_BOOST_EN_POS  9
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_cp_slice_en : 5;
    unsigned int pll_cp_offcur_en : 4;
    unsigned int pll_lf_lock_boost_en : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_synth_cal_pll_lock_loop3_cfg;
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PLL_LOCK_LOOP3_CFG_RST 0xc5
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PLL_LOCK_LOOP3_CFG_ADDR  0x4001d6c8


/* synth_cal_pll_cal_div_set register */
/*----------------------*/
/* VCO clock divider used during synthesizer calibration. */
/* pll_cal_div_set : See register description. */
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PLL_CAL_DIV_SET_PLL_CAL_DIV_SET_MASK 0x000f
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PLL_CAL_DIV_SET_PLL_CAL_DIV_SET_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_cal_div_set : 4;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_synth_cal_pll_cal_div_set;
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PLL_CAL_DIV_SET_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_PLL_CAL_DIV_SET_ADDR  0x4001d6cc


/* synth_cal_startup_afc_2_tx register */
/*----------------------*/
/* Input for cap bank calculation during Tx mode. */
/* afc_2 : Resulting afc_2 value from AFC calibration during synthesizer startup calibration */
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_STARTUP_AFC_2_TX_AFC_2_MASK 0x01ff
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_STARTUP_AFC_2_TX_AFC_2_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int afc_2 : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_synth_cal_startup_afc_2_tx;
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_STARTUP_AFC_2_TX_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_STARTUP_AFC_2_TX_ADDR  0x4001d6d0


/* dco_cal_dc_ana_offset_i register */
/*----------------------*/
/* Coarse DC offset compensation parameters (I chain) */
/* coarse_dc_offset_i : Coarse (analog) DC offset compensation value (I chain) */
/* coarse_dc_offset_i_en : Enable bit for the coarse (analog) DC offset compensation (I chain) */
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_I_COARSE_DC_OFFSET_I_MASK 0x000f
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_I_COARSE_DC_OFFSET_I_POS  0
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_I_COARSE_DC_OFFSET_I_EN_MASK 0x0010
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_I_COARSE_DC_OFFSET_I_EN_POS  4
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int coarse_dc_offset_i : 4;
    unsigned int coarse_dc_offset_i_en : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_dco_cal_dc_ana_offset_i;
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_I_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_I_ADDR  0x4001d6d4


/* dco_cal_dc_ana_offset_q register */
/*----------------------*/
/* Coarse DC offset compensation parameters (Q chain) */
/* coarse_dc_offset_q : Coarse (analog) DC offset compensation value (Q chain) */
/* coarse_dc_offset_q_en : Enable bit for the coarse (analog) DC offset compensation (Q chain) */
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_Q_COARSE_DC_OFFSET_Q_MASK 0x000f
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_Q_COARSE_DC_OFFSET_Q_POS  0
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_Q_COARSE_DC_OFFSET_Q_EN_MASK 0x0010
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_Q_COARSE_DC_OFFSET_Q_EN_POS  4
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int coarse_dc_offset_q : 4;
    unsigned int coarse_dc_offset_q_en : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_dco_cal_dc_ana_offset_q;
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_Q_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_Q_ADDR  0x4001d6d8


/* dco_cal_dc_ana_offset_lna_gain_i register */
/*----------------------*/
/* Coarse DC offset compensation parameters coupled with LNA gain (I chain) */
/* coarse_dc_offset_i : Coarse (analog) DC offset compensation value (I chain) */
/* coarse_dc_offset_i_en : Enable bit for the coarse (analog) DC offset compensation (I chain) */
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_LNA_GAIN_I_COARSE_DC_OFFSET_I_MASK 0x000f
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_LNA_GAIN_I_COARSE_DC_OFFSET_I_POS  0
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_LNA_GAIN_I_COARSE_DC_OFFSET_I_EN_MASK 0x0010
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_LNA_GAIN_I_COARSE_DC_OFFSET_I_EN_POS  4
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int coarse_dc_offset_i : 4;
    unsigned int coarse_dc_offset_i_en : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_dco_cal_dc_ana_offset_lna_gain_i;
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_LNA_GAIN_I_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_LNA_GAIN_I0_ADDR 0x4001d6dc
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_LNA_GAIN_I0 ((t_extapb_regfile_calibration_dco_cal_dc_ana_offset_lna_gain_i *)EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_LNA_GAIN_I0_ADDR)
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_LNA_GAIN_I1_ADDR 0x4001d6e0
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_LNA_GAIN_I1 ((t_extapb_regfile_calibration_dco_cal_dc_ana_offset_lna_gain_i *)EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_LNA_GAIN_I1_ADDR)
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_LNA_GAIN_I2_ADDR 0x4001d6e4
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_LNA_GAIN_I2 ((t_extapb_regfile_calibration_dco_cal_dc_ana_offset_lna_gain_i *)EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_LNA_GAIN_I2_ADDR)
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_LNA_GAIN_I3_ADDR 0x4001d6e8
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_LNA_GAIN_I3 ((t_extapb_regfile_calibration_dco_cal_dc_ana_offset_lna_gain_i *)EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_LNA_GAIN_I3_ADDR)
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_LNA_GAIN_I4_ADDR 0x4001d6ec
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_LNA_GAIN_I4 ((t_extapb_regfile_calibration_dco_cal_dc_ana_offset_lna_gain_i *)EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_LNA_GAIN_I4_ADDR)


/* dco_cal_dc_ana_offset_lna_gain_q register */
/*----------------------*/
/* Coarse DC offset compensation parameters coupled with LNA gain (Q chain) */
/* coarse_dc_offset_q : Coarse (analog) DC offset compensation value (Q chain) */
/* coarse_dc_offset_q_en : Enable bit for the coarse (analog) DC offset compensation (Q chain) */
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_LNA_GAIN_Q_COARSE_DC_OFFSET_Q_MASK 0x000f
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_LNA_GAIN_Q_COARSE_DC_OFFSET_Q_POS  0
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_LNA_GAIN_Q_COARSE_DC_OFFSET_Q_EN_MASK 0x0010
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_LNA_GAIN_Q_COARSE_DC_OFFSET_Q_EN_POS  4
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int coarse_dc_offset_q : 4;
    unsigned int coarse_dc_offset_q_en : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_dco_cal_dc_ana_offset_lna_gain_q;
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_LNA_GAIN_Q_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_LNA_GAIN_Q0_ADDR 0x4001d6f0
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_LNA_GAIN_Q0 ((t_extapb_regfile_calibration_dco_cal_dc_ana_offset_lna_gain_q *)EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_LNA_GAIN_Q0_ADDR)
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_LNA_GAIN_Q1_ADDR 0x4001d6f4
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_LNA_GAIN_Q1 ((t_extapb_regfile_calibration_dco_cal_dc_ana_offset_lna_gain_q *)EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_LNA_GAIN_Q1_ADDR)
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_LNA_GAIN_Q2_ADDR 0x4001d6f8
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_LNA_GAIN_Q2 ((t_extapb_regfile_calibration_dco_cal_dc_ana_offset_lna_gain_q *)EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_LNA_GAIN_Q2_ADDR)
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_LNA_GAIN_Q3_ADDR 0x4001d6fc
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_LNA_GAIN_Q3 ((t_extapb_regfile_calibration_dco_cal_dc_ana_offset_lna_gain_q *)EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_LNA_GAIN_Q3_ADDR)
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_LNA_GAIN_Q4_ADDR 0x4001d700
#define EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_LNA_GAIN_Q4 ((t_extapb_regfile_calibration_dco_cal_dc_ana_offset_lna_gain_q *)EXTAPB_REGFILE_CALIBRATION_DCO_CAL_DC_ANA_OFFSET_LNA_GAIN_Q4_ADDR)


/* synth_cal_operation_fcw_frac register */
/*----------------------*/
/* Fractional part of the FCW used for synthesizer calibration during operation. */
/* fcw_frac : See register description. */
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_OPERATION_FCW_FRAC_FCW_FRAC_MASK 0xffff
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_OPERATION_FCW_FRAC_FCW_FRAC_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int fcw_frac : 16;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_synth_cal_operation_fcw_frac;
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_OPERATION_FCW_FRAC_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_OPERATION_FCW_FRAC_DYNAMIC true
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_OPERATION_FCW_FRAC_SNAPCLOCK 0
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_OPERATION_FCW_FRAC_ADDR  0x4001d704


/* synth_cal_operation_fcw_int register */
/*----------------------*/
/* Integer part of the FCW used for synthesizer calibration during operation. */
/* fcw_int : See register description. */
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_OPERATION_FCW_INT_FCW_INT_MASK 0x00ff
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_OPERATION_FCW_INT_FCW_INT_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int fcw_int : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_synth_cal_operation_fcw_int;
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_OPERATION_FCW_INT_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_OPERATION_FCW_INT_DYNAMIC true
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_OPERATION_FCW_INT_SNAPCLOCK 0
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_OPERATION_FCW_INT_ADDR  0x4001d708


/* synth_cal_operation_afc_fsel_bin register */
/*----------------------*/
/* Calculated binary cap bank value for VCO during synthesizer calibration during operation. */
/* afc_fsel_bin : See register description. */
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_OPERATION_AFC_FSEL_BIN_AFC_FSEL_BIN_MASK 0x000f
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_OPERATION_AFC_FSEL_BIN_AFC_FSEL_BIN_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int afc_fsel_bin : 4;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_synth_cal_operation_afc_fsel_bin;
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_OPERATION_AFC_FSEL_BIN_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_OPERATION_AFC_FSEL_BIN_DYNAMIC true
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_OPERATION_AFC_FSEL_BIN_SNAPCLOCK 0
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_OPERATION_AFC_FSEL_BIN_ADDR  0x4001d70c


/* synth_cal_operation_afc_fsel_therm register */
/*----------------------*/
/* Calculated thermo cap bank settings for VCO during synthesizer calibration during operation. */
/* afc_fsel_therm : See register description. */
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_OPERATION_AFC_FSEL_THERM_AFC_FSEL_THERM_MASK 0x7fff
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_OPERATION_AFC_FSEL_THERM_AFC_FSEL_THERM_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int afc_fsel_therm : 15;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_synth_cal_operation_afc_fsel_therm;
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_OPERATION_AFC_FSEL_THERM_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_OPERATION_AFC_FSEL_THERM_DYNAMIC true
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_OPERATION_AFC_FSEL_THERM_SNAPCLOCK 0
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_OPERATION_AFC_FSEL_THERM_ADDR  0x4001d710


/* synth_cal_operation_aac_ictrl_out register */
/*----------------------*/
/* Resulting aac_iref_ctrl_out from AAC calibration during synthesizer calibration during operation. */
/* aac_ictrl_out : See register description. */
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_OPERATION_AAC_ICTRL_OUT_AAC_ICTRL_OUT_MASK 0x001f
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_OPERATION_AAC_ICTRL_OUT_AAC_ICTRL_OUT_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int aac_ictrl_out : 5;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_synth_cal_operation_aac_ictrl_out;
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_OPERATION_AAC_ICTRL_OUT_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_OPERATION_AAC_ICTRL_OUT_DYNAMIC true
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_OPERATION_AAC_ICTRL_OUT_SNAPCLOCK 0
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_OPERATION_AAC_ICTRL_OUT_ADDR  0x4001d714


/* synth_cal_startup_ratio_bin_thermo register */
/*----------------------*/
/* Ratio bin thermo value used to calculate afc_diff and afc_2. */
/* ratio_bin_thermo : Ratio bin thermo value used to calculate afc_diff and afc_2 */
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_STARTUP_RATIO_BIN_THERMO_RATIO_BIN_THERMO_MASK 0x000f
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_STARTUP_RATIO_BIN_THERMO_RATIO_BIN_THERMO_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int ratio_bin_thermo : 4;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_synth_cal_startup_ratio_bin_thermo;
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_STARTUP_RATIO_BIN_THERMO_RST 0xb
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_STARTUP_RATIO_BIN_THERMO_ADDR  0x4001d718


/* synth_cal_startup_afc_diff_tx register */
/*----------------------*/
/* Input for cap bank calculation during Tx mode. */
/* afc_diff : Resulting afc_diff value from AFC calibration during synthesizer startup calibration */
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_STARTUP_AFC_DIFF_TX_AFC_DIFF_MASK 0x00ff
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_STARTUP_AFC_DIFF_TX_AFC_DIFF_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int afc_diff : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_synth_cal_startup_afc_diff_tx;
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_STARTUP_AFC_DIFF_TX_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_SYNTH_CAL_STARTUP_AFC_DIFF_TX_ADDR  0x4001d71c


/* pa_cal_cfg0 register */
/*----------------------*/
/* PA calibration parameters */
/* pa_cal_phase_en : Each bit will enable one of the calibration phases whet set with LSB enabling the first phase */
/* pa_cal_rssi_offset : Signed value in 6.2 format to add to the measured RSSI value to account for offsets in the calibration path */
/* pa_cal_ate_en : When set PA calibration radio settings specific to ATE calibration will be applied, and calibration will stop at the end of phase one. */
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_CFG0_PA_CAL_PHASE_EN_MASK 0x000f
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_CFG0_PA_CAL_PHASE_EN_POS  0
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_CFG0_PA_CAL_RSSI_OFFSET_MASK 0x0ff0
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_CFG0_PA_CAL_RSSI_OFFSET_POS  4
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_CFG0_PA_CAL_ATE_EN_MASK 0x1000
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_CFG0_PA_CAL_ATE_EN_POS  12
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pa_cal_phase_en : 4;
    unsigned int pa_cal_rssi_offset : 8;
    unsigned int pa_cal_ate_en : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_pa_cal_cfg0;
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_CFG0_RST 0xf
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_CFG0_ADDR  0x4001d720


/* pa_cal_rcal register */
/*----------------------*/
/* PA calibration Rcal */
/* rcal : Calibration results giving power measured for the pcal settings. Signed value in 8.2 format */
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_RCAL_RCAL_MASK 0x03ff
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_RCAL_RCAL_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rcal : 10;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_pa_cal_rcal;
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_RCAL_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_RCAL0_ADDR 0x4001d724
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_RCAL0 ((t_extapb_regfile_calibration_pa_cal_rcal *)EXTAPB_REGFILE_CALIBRATION_PA_CAL_RCAL0_ADDR)
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_RCAL1_ADDR 0x4001d728
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_RCAL1 ((t_extapb_regfile_calibration_pa_cal_rcal *)EXTAPB_REGFILE_CALIBRATION_PA_CAL_RCAL1_ADDR)
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_RCAL2_ADDR 0x4001d72c
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_RCAL2 ((t_extapb_regfile_calibration_pa_cal_rcal *)EXTAPB_REGFILE_CALIBRATION_PA_CAL_RCAL2_ADDR)
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_RCAL3_ADDR 0x4001d730
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_RCAL3 ((t_extapb_regfile_calibration_pa_cal_rcal *)EXTAPB_REGFILE_CALIBRATION_PA_CAL_RCAL3_ADDR)


/* pa_cal_pcal0 register */
/*----------------------*/
/* PA calibration Pcal 0 */
/* pcal : Power setting for PA calibration phase 0. Signed value in 6.0 format */
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_PCAL0_PCAL_MASK 0x003f
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_PCAL0_PCAL_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pcal : 6;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_pa_cal_pcal0;
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_PCAL0_RST 0x32
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_PCAL0_ADDR  0x4001d734


/* pa_cal_pcal1 register */
/*----------------------*/
/* PA calibration Pcal 1 */
/* pcal : Power setting for PA calibration phase 1. Signed value in 6.0 format */
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_PCAL1_PCAL_MASK 0x003f
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_PCAL1_PCAL_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pcal : 6;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_pa_cal_pcal1;
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_PCAL1_RST 0x2
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_PCAL1_ADDR  0x4001d738


/* pa_cal_pcal2 register */
/*----------------------*/
/* PA calibration Pcal 2 */
/* pcal : Power setting for PA calibration phase 2. Signed value in 6.0 format */
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_PCAL2_PCAL_MASK 0x003f
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_PCAL2_PCAL_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pcal : 6;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_pa_cal_pcal2;
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_PCAL2_RST 0x6
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_PCAL2_ADDR  0x4001d73c


/* pa_cal_pcal3 register */
/*----------------------*/
/* PA calibration Pcal 3 */
/* pcal : Power setting for PA calibration phase 3. Signed value in 6.0 format */
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_PCAL3_PCAL_MASK 0x003f
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_PCAL3_PCAL_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pcal : 6;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_pa_cal_pcal3;
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_PCAL3_RST 0xa
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_PCAL3_ADDR  0x4001d740


/* pa_cal_abval register */
/*----------------------*/
/* PA calibration Aval and Bval */
/* aval : Gradient delta array (a coefficients) in format 1.6 */
/* bval : Calibration offset arreay (b coefficients) in format 4.3 */
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_ABVAL_AVAL_MASK 0x007f
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_ABVAL_AVAL_POS  0
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_ABVAL_BVAL_MASK 0x3f80
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_ABVAL_BVAL_POS  7
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int aval : 7;
    unsigned int bval : 7;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_calibration_pa_cal_abval;
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_ABVAL_RST 0x0
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_ABVAL0_ADDR 0x4001d744
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_ABVAL0 ((t_extapb_regfile_calibration_pa_cal_abval *)EXTAPB_REGFILE_CALIBRATION_PA_CAL_ABVAL0_ADDR)
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_ABVAL1_ADDR 0x4001d748
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_ABVAL1 ((t_extapb_regfile_calibration_pa_cal_abval *)EXTAPB_REGFILE_CALIBRATION_PA_CAL_ABVAL1_ADDR)
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_ABVAL2_ADDR 0x4001d74c
#define EXTAPB_REGFILE_CALIBRATION_PA_CAL_ABVAL2 ((t_extapb_regfile_calibration_pa_cal_abval *)EXTAPB_REGFILE_CALIBRATION_PA_CAL_ABVAL2_ADDR)


typedef struct{
    t_extapb_regfile_calibration_vco_cal_afc_cfg0  vco_cal_afc_cfg0;
    t_extapb_regfile_calibration_vco_cal_afc_cfg1  vco_cal_afc_cfg1;
    t_extapb_regfile_calibration_vco_cal_afc_cfg2  vco_cal_afc_cfg2;
    t_extapb_regfile_calibration_vco_cal_aac_cfg0  vco_cal_aac_cfg0;
    t_extapb_regfile_calibration_vco_cal_aac_cfg1  vco_cal_aac_cfg1;
    t_extapb_regfile_calibration_vco_cal_det_cfg0  vco_cal_det_cfg0;
    t_extapb_regfile_calibration_vco_cal_det_cfg1  vco_cal_det_cfg1;
    t_extapb_regfile_calibration_vco_cal_afc_stat0  vco_cal_afc_stat0;
    t_extapb_regfile_calibration_vco_cal_afc_stat1  vco_cal_afc_stat1;
    t_extapb_regfile_calibration_vco_cal_afc_stat2  vco_cal_afc_stat2;
    t_extapb_regfile_calibration_vco_cal_aac_stat0  vco_cal_aac_stat0;
    t_extapb_regfile_calibration_vco_cal_aac_stat1  vco_cal_aac_stat1;
    t_extapb_regfile_calibration_vco_cal_lock_stat  vco_cal_lock_stat;
    t_extapb_regfile_calibration_vco_cal_sync_delay  vco_cal_sync_delay;
    t_extapb_regfile_calibration_dco_cal_gain_en_low  dco_cal_gain_en_low;
    t_extapb_regfile_calibration_dco_cal_gain_en_high  dco_cal_gain_en_high;
    t_extapb_regfile_calibration_dco_cal_cfg  dco_cal_cfg;
    t_extapb_regfile_calibration_dco_cal_alpha_cfg0  dco_cal_alpha_cfg0;
    t_extapb_regfile_calibration_dco_cal_alpha_cfg1  dco_cal_alpha_cfg1;
    t_extapb_regfile_calibration_dco_cal_meas_period  dco_cal_meas_period[4];
    t_extapb_regfile_calibration_dco_cal_dc_offset_gain_index  dco_cal_dc_offset_gain_index;
    t_extapb_regfile_calibration_dco_cal_dc_offset_i  dco_cal_dc_offset_i;
    t_extapb_regfile_calibration_dco_cal_dc_offset_q  dco_cal_dc_offset_q;
    t_extapb_regfile_calibration_iq_cal_alpha_cfg0  iq_cal_alpha_cfg0;
    t_extapb_regfile_calibration_iq_cal_alpha_cfg1  iq_cal_alpha_cfg1;
    t_extapb_regfile_calibration_iq_cal_alpha_cfg2  iq_cal_alpha_cfg2;
    t_extapb_regfile_calibration_iq_cal_k_i_cfg  iq_cal_k_i_cfg;
    t_extapb_regfile_calibration_iq_cal_loop_en  iq_cal_loop_en;
    t_extapb_regfile_calibration_iq_cal_phase_meas_period  iq_cal_phase_meas_period[4];
    t_extapb_regfile_calibration_iq_cal_mag_meas_period  iq_cal_mag_meas_period[4];
    t_extapb_regfile_calibration_iq_cal_scale_factor  iq_cal_scale_factor;
    t_extapb_regfile_calibration_iq_cal_cross_factor  iq_cal_cross_factor;
    t_extapb_regfile_calibration_r_cal_cfg  r_cal_cfg;
    t_extapb_regfile_calibration_r_cal_status  r_cal_status;
    t_extapb_regfile_calibration_rc_cal_transient_period  rc_cal_transient_period;
    t_extapb_regfile_calibration_rc_cal_discharge_period  rc_cal_discharge_period;
    t_extapb_regfile_calibration_rc_cal_treshold_period  rc_cal_treshold_period;
    t_extapb_regfile_calibration_rc_cal_status  rc_cal_status;
    t_extapb_regfile_calibration_kmod_band_cal_cfg  kmod_band_cal_cfg;
    t_extapb_regfile_calibration_kmod_band_cal_count_1_lsb  kmod_band_cal_count_1_lsb;
    t_extapb_regfile_calibration_kmod_band_cal_count_1_msb  kmod_band_cal_count_1_msb;
    t_extapb_regfile_calibration_kmod_band_cal_count_2_lsb  kmod_band_cal_count_2_lsb;
    t_extapb_regfile_calibration_kmod_band_cal_count_2_msb  kmod_band_cal_count_2_msb;
    t_extapb_regfile_calibration_kmod_band_cal_corr_1  kmod_band_cal_corr_1;
    t_extapb_regfile_calibration_kmod_chan_cal_corr_2  kmod_chan_cal_corr_2;
    t_extapb_regfile_calibration_synth_cal_startup_afc_ctrl_bin  synth_cal_startup_afc_ctrl_bin;
    t_extapb_regfile_calibration_synth_cal_startup_afc_ctrl_therm  synth_cal_startup_afc_ctrl_therm;
    t_extapb_regfile_calibration_synth_cal_startup_aac_ictrl_out_store  synth_cal_startup_aac_ictrl_out_store;
    t_extapb_regfile_calibration_synth_cal_startup_afc_fsel_out  synth_cal_startup_afc_fsel_out;
    t_extapb_regfile_calibration_synth_cal_cfg  synth_cal_cfg;
    t_extapb_regfile_calibration_synth_cal_startup_afc_2_rx  synth_cal_startup_afc_2_rx;
    t_extapb_regfile_calibration_synth_cal_startup_afc_diff_rx  synth_cal_startup_afc_diff_rx;
    t_extapb_regfile_calibration_synth_cal_pll_lock_init_cfg  synth_cal_pll_lock_init_cfg;
    t_extapb_regfile_calibration_synth_cal_pre_charge_period  synth_cal_pre_charge_period;
    t_extapb_regfile_calibration_synth_cal_pre_charge_pll_lf_pch  synth_cal_pre_charge_pll_lf_pch;
    t_extapb_regfile_calibration_synth_cal_pll_lock_loop1_cfg  synth_cal_pll_lock_loop1_cfg;
    t_extapb_regfile_calibration_synth_cal_pll_lock_loop2_cfg  synth_cal_pll_lock_loop2_cfg;
    t_extapb_regfile_calibration_synth_cal_pll_lock_loop3_cfg  synth_cal_pll_lock_loop3_cfg;
    t_extapb_regfile_calibration_synth_cal_pll_cal_div_set  synth_cal_pll_cal_div_set;
    t_extapb_regfile_calibration_synth_cal_startup_afc_2_tx  synth_cal_startup_afc_2_tx;
    t_extapb_regfile_calibration_dco_cal_dc_ana_offset_i  dco_cal_dc_ana_offset_i;
    t_extapb_regfile_calibration_dco_cal_dc_ana_offset_q  dco_cal_dc_ana_offset_q;
    t_extapb_regfile_calibration_dco_cal_dc_ana_offset_lna_gain_i  dco_cal_dc_ana_offset_lna_gain_i[5];
    t_extapb_regfile_calibration_dco_cal_dc_ana_offset_lna_gain_q  dco_cal_dc_ana_offset_lna_gain_q[5];
    t_extapb_regfile_calibration_synth_cal_operation_fcw_frac  synth_cal_operation_fcw_frac;
    t_extapb_regfile_calibration_synth_cal_operation_fcw_int  synth_cal_operation_fcw_int;
    t_extapb_regfile_calibration_synth_cal_operation_afc_fsel_bin  synth_cal_operation_afc_fsel_bin;
    t_extapb_regfile_calibration_synth_cal_operation_afc_fsel_therm  synth_cal_operation_afc_fsel_therm;
    t_extapb_regfile_calibration_synth_cal_operation_aac_ictrl_out  synth_cal_operation_aac_ictrl_out;
    t_extapb_regfile_calibration_synth_cal_startup_ratio_bin_thermo  synth_cal_startup_ratio_bin_thermo;
    t_extapb_regfile_calibration_synth_cal_startup_afc_diff_tx  synth_cal_startup_afc_diff_tx;
    t_extapb_regfile_calibration_pa_cal_cfg0  pa_cal_cfg0;
    t_extapb_regfile_calibration_pa_cal_rcal  pa_cal_rcal[4];
    t_extapb_regfile_calibration_pa_cal_pcal0  pa_cal_pcal0;
    t_extapb_regfile_calibration_pa_cal_pcal1  pa_cal_pcal1;
    t_extapb_regfile_calibration_pa_cal_pcal2  pa_cal_pcal2;
    t_extapb_regfile_calibration_pa_cal_pcal3  pa_cal_pcal3;
    t_extapb_regfile_calibration_pa_cal_abval  pa_cal_abval[3];
} t_extapb_regfile_calibration;
#define EXTAPB_REGFILE_CALIBRATION_ADDR 0x4001d5c0
#define EXTAPB_REGFILE_CALIBRATION ((t_extapb_regfile_calibration *)EXTAPB_REGFILE_CALIBRATION_ADDR)


/* tx_datapath module */
/*-------------------------*/


/* global register */
/*----------------------*/
/* Global configuration of the Tx Datapath */
/* tx_bank : Bank selection of Tx datapath */
/* dac_output_edge : Selects at which edge of the Tx symbol clock data is output towards DAC */
/* pll_output_edge : Selects at which edge of the Tx Reference clock data is output towards the PLL */
/* kmod_band_corr_1_upd_on_cal_en : When enabled, the KMod band correction result after KMod band calibration is copied to the KMod band corr 1 factor of the Tx Datapath. */
/* kmod_chan_corr_2_upd_on_cal_en : When enabled, the KMod channel correction result after KMod channel calibration is copied to the KMod channel corr 2 factor of the Tx Datapath. */
/* modem_data_valid_mode : Modem data valid mode. */
#define EXTAPB_REGFILE_TX_DATAPATH_GLOBAL_TX_BANK_MASK 0x0003
#define EXTAPB_REGFILE_TX_DATAPATH_GLOBAL_TX_BANK_POS  0
#define EXTAPB_REGFILE_TX_DATAPATH_GLOBAL_DAC_OUTPUT_EDGE_MASK 0x0004
#define EXTAPB_REGFILE_TX_DATAPATH_GLOBAL_DAC_OUTPUT_EDGE_POS  2
#define EXTAPB_REGFILE_TX_DATAPATH_GLOBAL_DAC_OUTPUT_EDGE_RISING_EDGE 0
#define EXTAPB_REGFILE_TX_DATAPATH_GLOBAL_DAC_OUTPUT_EDGE_RISING_EDGE_MASK 0x0
#define EXTAPB_REGFILE_TX_DATAPATH_GLOBAL_DAC_OUTPUT_EDGE_FALLING_EDGE 1
#define EXTAPB_REGFILE_TX_DATAPATH_GLOBAL_DAC_OUTPUT_EDGE_FALLING_EDGE_MASK 0x4
#define EXTAPB_REGFILE_TX_DATAPATH_GLOBAL_PLL_OUTPUT_EDGE_MASK 0x0008
#define EXTAPB_REGFILE_TX_DATAPATH_GLOBAL_PLL_OUTPUT_EDGE_POS  3
#define EXTAPB_REGFILE_TX_DATAPATH_GLOBAL_PLL_OUTPUT_EDGE_RISING_EDGE 0
#define EXTAPB_REGFILE_TX_DATAPATH_GLOBAL_PLL_OUTPUT_EDGE_RISING_EDGE_MASK 0x0
#define EXTAPB_REGFILE_TX_DATAPATH_GLOBAL_PLL_OUTPUT_EDGE_FALLING_EDGE 1
#define EXTAPB_REGFILE_TX_DATAPATH_GLOBAL_PLL_OUTPUT_EDGE_FALLING_EDGE_MASK 0x8
#define EXTAPB_REGFILE_TX_DATAPATH_GLOBAL_KMOD_BAND_CORR_1_UPD_ON_CAL_EN_MASK 0x0010
#define EXTAPB_REGFILE_TX_DATAPATH_GLOBAL_KMOD_BAND_CORR_1_UPD_ON_CAL_EN_POS  4
#define EXTAPB_REGFILE_TX_DATAPATH_GLOBAL_KMOD_BAND_CORR_1_UPD_ON_CAL_EN_DIS 0
#define EXTAPB_REGFILE_TX_DATAPATH_GLOBAL_KMOD_BAND_CORR_1_UPD_ON_CAL_EN_DIS_MASK 0x0
#define EXTAPB_REGFILE_TX_DATAPATH_GLOBAL_KMOD_BAND_CORR_1_UPD_ON_CAL_EN_EN 1
#define EXTAPB_REGFILE_TX_DATAPATH_GLOBAL_KMOD_BAND_CORR_1_UPD_ON_CAL_EN_EN_MASK 0x10
#define EXTAPB_REGFILE_TX_DATAPATH_GLOBAL_KMOD_CHAN_CORR_2_UPD_ON_CAL_EN_MASK 0x0020
#define EXTAPB_REGFILE_TX_DATAPATH_GLOBAL_KMOD_CHAN_CORR_2_UPD_ON_CAL_EN_POS  5
#define EXTAPB_REGFILE_TX_DATAPATH_GLOBAL_KMOD_CHAN_CORR_2_UPD_ON_CAL_EN_DIS 0
#define EXTAPB_REGFILE_TX_DATAPATH_GLOBAL_KMOD_CHAN_CORR_2_UPD_ON_CAL_EN_DIS_MASK 0x0
#define EXTAPB_REGFILE_TX_DATAPATH_GLOBAL_KMOD_CHAN_CORR_2_UPD_ON_CAL_EN_EN 1
#define EXTAPB_REGFILE_TX_DATAPATH_GLOBAL_KMOD_CHAN_CORR_2_UPD_ON_CAL_EN_EN_MASK 0x20
#define EXTAPB_REGFILE_TX_DATAPATH_GLOBAL_MODEM_DATA_VALID_MODE_MASK 0x0040
#define EXTAPB_REGFILE_TX_DATAPATH_GLOBAL_MODEM_DATA_VALID_MODE_POS  6
#define EXTAPB_REGFILE_TX_DATAPATH_GLOBAL_MODEM_DATA_VALID_MODE_PULSE 0
#define EXTAPB_REGFILE_TX_DATAPATH_GLOBAL_MODEM_DATA_VALID_MODE_PULSE_MASK 0x0
#define EXTAPB_REGFILE_TX_DATAPATH_GLOBAL_MODEM_DATA_VALID_MODE_TOGGLE 1
#define EXTAPB_REGFILE_TX_DATAPATH_GLOBAL_MODEM_DATA_VALID_MODE_TOGGLE_MASK 0x40
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int tx_bank : 2;
    unsigned int dac_output_edge : 1;
    unsigned int pll_output_edge : 1;
    unsigned int kmod_band_corr_1_upd_on_cal_en : 1;
    unsigned int kmod_chan_corr_2_upd_on_cal_en : 1;
    unsigned int modem_data_valid_mode : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tx_datapath_global;
#define EXTAPB_REGFILE_TX_DATAPATH_GLOBAL_RST 0x0
#define EXTAPB_REGFILE_TX_DATAPATH_GLOBAL_ADDR  0x4001d780


/* cfg register */
/*----------------------*/
/* Bank configuration (Stored in configuration bank) */
/* cic_active : Enable bit for CIC filter */
/* gaussian_mode : Mode settings for the gaussian (shape) filter and upsampling */
/* flush_cnt : Flush counter for upsample gauss filter in clock cycles */
/* zoh_shift : Position shift */
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_CIC_ACTIVE_MASK 0x0001
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_CIC_ACTIVE_POS  0
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_CIC_ACTIVE_LOW 0
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_CIC_ACTIVE_LOW_MASK 0x0
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_CIC_ACTIVE_HIGH 1
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_CIC_ACTIVE_HIGH_MASK 0x1
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_GAUSSIAN_MODE_MASK 0x0006
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_GAUSSIAN_MODE_POS  1
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_GAUSSIAN_MODE_GAUSSIAN_0_50 0
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_GAUSSIAN_MODE_GAUSSIAN_0_50_MASK 0x0
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_GAUSSIAN_MODE_GAUSSIAN_0_95 1
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_GAUSSIAN_MODE_GAUSSIAN_0_95_MASK 0x2
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_GAUSSIAN_MODE_ZOH 2
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_GAUSSIAN_MODE_ZOH_MASK 0x4
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_FLUSH_CNT_MASK 0x07f8
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_FLUSH_CNT_POS  3
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_ZOH_SHIFT_MASK 0x3800
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_ZOH_SHIFT_POS  11
#else
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_CIC_ACTIVE_MASK 0x0001
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_CIC_ACTIVE_POS  0
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_CIC_ACTIVE_LOW 0
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_CIC_ACTIVE_LOW_MASK 0x0
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_CIC_ACTIVE_HIGH 1
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_CIC_ACTIVE_HIGH_MASK 0x1
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_CIC_ACTIVE_ZB_2 0
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_CIC_ACTIVE_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_CIC_ACTIVE_BLE_1 0
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_CIC_ACTIVE_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_CIC_ACTIVE_BLE_2 0
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_CIC_ACTIVE_BLE_2_MASK 0x0
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_GAUSSIAN_MODE_MASK 0x0006
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_GAUSSIAN_MODE_POS  1
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_GAUSSIAN_MODE_GAUSSIAN_0_50 0
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_GAUSSIAN_MODE_GAUSSIAN_0_50_MASK 0x0
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_GAUSSIAN_MODE_GAUSSIAN_0_95 1
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_GAUSSIAN_MODE_GAUSSIAN_0_95_MASK 0x2
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_GAUSSIAN_MODE_ZOH 2
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_GAUSSIAN_MODE_ZOH_MASK 0x4
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_GAUSSIAN_MODE_ZB_2 0
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_GAUSSIAN_MODE_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_GAUSSIAN_MODE_BLE_1 0
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_GAUSSIAN_MODE_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_GAUSSIAN_MODE_BLE_2 0
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_GAUSSIAN_MODE_BLE_2_MASK 0x0
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_FLUSH_CNT_MASK 0x07f8
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_FLUSH_CNT_POS  3
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_FLUSH_CNT_ZB_2 21
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_FLUSH_CNT_ZB_2_MASK 0xa8
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_FLUSH_CNT_BLE_1 21
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_FLUSH_CNT_BLE_1_MASK 0xa8
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_FLUSH_CNT_BLE_2 21
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_FLUSH_CNT_BLE_2_MASK 0xa8
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_ZOH_SHIFT_MASK 0x3800
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_ZOH_SHIFT_POS  11
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_ZOH_SHIFT_ZB_2 6
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_ZOH_SHIFT_ZB_2_MASK 0x3000
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_ZOH_SHIFT_BLE_1 6
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_ZOH_SHIFT_BLE_1_MASK 0x3000
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_ZOH_SHIFT_BLE_2 6
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_ZOH_SHIFT_BLE_2_MASK 0x3000
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int cic_active : 1;
    unsigned int gaussian_mode : 2;
    unsigned int flush_cnt : 8;
    unsigned int zoh_shift : 3;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tx_datapath_cfg;
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_RST 0x30a8
#define EXTAPB_REGFILE_TX_DATAPATH_CFG_ADDR  0x4001d784


/* delay register */
/*----------------------*/
/* Sample delay compensation (Stored in configuration bank) */
/* first_point_coarse : Sample delay first point, coarse */
/* first_point_fine : Sample delay first point, fine */
/* second_point : Sample delay second point */
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#define EXTAPB_REGFILE_TX_DATAPATH_DELAY_FIRST_POINT_COARSE_MASK 0x000f
#define EXTAPB_REGFILE_TX_DATAPATH_DELAY_FIRST_POINT_COARSE_POS  0
#define EXTAPB_REGFILE_TX_DATAPATH_DELAY_FIRST_POINT_FINE_MASK 0x0030
#define EXTAPB_REGFILE_TX_DATAPATH_DELAY_FIRST_POINT_FINE_POS  4
#define EXTAPB_REGFILE_TX_DATAPATH_DELAY_SECOND_POINT_MASK 0x03c0
#define EXTAPB_REGFILE_TX_DATAPATH_DELAY_SECOND_POINT_POS  6
#else
#define EXTAPB_REGFILE_TX_DATAPATH_DELAY_FIRST_POINT_COARSE_MASK 0x000f
#define EXTAPB_REGFILE_TX_DATAPATH_DELAY_FIRST_POINT_COARSE_POS  0
#define EXTAPB_REGFILE_TX_DATAPATH_DELAY_FIRST_POINT_COARSE_ZB_2 0
#define EXTAPB_REGFILE_TX_DATAPATH_DELAY_FIRST_POINT_COARSE_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_TX_DATAPATH_DELAY_FIRST_POINT_COARSE_BLE_1 0
#define EXTAPB_REGFILE_TX_DATAPATH_DELAY_FIRST_POINT_COARSE_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_TX_DATAPATH_DELAY_FIRST_POINT_COARSE_BLE_2 0
#define EXTAPB_REGFILE_TX_DATAPATH_DELAY_FIRST_POINT_COARSE_BLE_2_MASK 0x0
#define EXTAPB_REGFILE_TX_DATAPATH_DELAY_FIRST_POINT_FINE_MASK 0x0030
#define EXTAPB_REGFILE_TX_DATAPATH_DELAY_FIRST_POINT_FINE_POS  4
#define EXTAPB_REGFILE_TX_DATAPATH_DELAY_FIRST_POINT_FINE_ZB_2 0
#define EXTAPB_REGFILE_TX_DATAPATH_DELAY_FIRST_POINT_FINE_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_TX_DATAPATH_DELAY_FIRST_POINT_FINE_BLE_1 0
#define EXTAPB_REGFILE_TX_DATAPATH_DELAY_FIRST_POINT_FINE_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_TX_DATAPATH_DELAY_FIRST_POINT_FINE_BLE_2 0
#define EXTAPB_REGFILE_TX_DATAPATH_DELAY_FIRST_POINT_FINE_BLE_2_MASK 0x0
#define EXTAPB_REGFILE_TX_DATAPATH_DELAY_SECOND_POINT_MASK 0x03c0
#define EXTAPB_REGFILE_TX_DATAPATH_DELAY_SECOND_POINT_POS  6
#define EXTAPB_REGFILE_TX_DATAPATH_DELAY_SECOND_POINT_ZB_2 0
#define EXTAPB_REGFILE_TX_DATAPATH_DELAY_SECOND_POINT_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_TX_DATAPATH_DELAY_SECOND_POINT_BLE_1 0
#define EXTAPB_REGFILE_TX_DATAPATH_DELAY_SECOND_POINT_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_TX_DATAPATH_DELAY_SECOND_POINT_BLE_2 0
#define EXTAPB_REGFILE_TX_DATAPATH_DELAY_SECOND_POINT_BLE_2_MASK 0x0
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int first_point_coarse : 4;
    unsigned int first_point_fine : 2;
    unsigned int second_point : 4;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tx_datapath_delay;
#define EXTAPB_REGFILE_TX_DATAPATH_DELAY_RST 0x0
#define EXTAPB_REGFILE_TX_DATAPATH_DELAY_ADDR  0x4001d788


/* gain_first_point register */
/*----------------------*/
/* Tx Datapath : Gain first point (Stored in configuration bank) */
/* gain_first_point : Gain first point */
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#define EXTAPB_REGFILE_TX_DATAPATH_GAIN_FIRST_POINT_GAIN_FIRST_POINT_MASK 0x07ff
#define EXTAPB_REGFILE_TX_DATAPATH_GAIN_FIRST_POINT_GAIN_FIRST_POINT_POS  0
#define EXTAPB_REGFILE_TX_DATAPATH_GAIN_FIRST_POINT_GAIN_FIRST_POINT_BT_LE_1 1924
#define EXTAPB_REGFILE_TX_DATAPATH_GAIN_FIRST_POINT_GAIN_FIRST_POINT_BT_LE_1_MASK 0x784
#define EXTAPB_REGFILE_TX_DATAPATH_GAIN_FIRST_POINT_GAIN_FIRST_POINT_BT_LE_2 1806
#define EXTAPB_REGFILE_TX_DATAPATH_GAIN_FIRST_POINT_GAIN_FIRST_POINT_BT_LE_2_MASK 0x70e
#define EXTAPB_REGFILE_TX_DATAPATH_GAIN_FIRST_POINT_GAIN_FIRST_POINT_NORDIC_250 2004
#define EXTAPB_REGFILE_TX_DATAPATH_GAIN_FIRST_POINT_GAIN_FIRST_POINT_NORDIC_250_MASK 0x7d4
#define EXTAPB_REGFILE_TX_DATAPATH_GAIN_FIRST_POINT_GAIN_FIRST_POINT_NORDIC_2 1893
#define EXTAPB_REGFILE_TX_DATAPATH_GAIN_FIRST_POINT_GAIN_FIRST_POINT_NORDIC_2_MASK 0x765
#else
#define EXTAPB_REGFILE_TX_DATAPATH_GAIN_FIRST_POINT_GAIN_FIRST_POINT_MASK 0x07ff
#define EXTAPB_REGFILE_TX_DATAPATH_GAIN_FIRST_POINT_GAIN_FIRST_POINT_POS  0
#define EXTAPB_REGFILE_TX_DATAPATH_GAIN_FIRST_POINT_GAIN_FIRST_POINT_ZB_2 0
#define EXTAPB_REGFILE_TX_DATAPATH_GAIN_FIRST_POINT_GAIN_FIRST_POINT_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_TX_DATAPATH_GAIN_FIRST_POINT_GAIN_FIRST_POINT_BLE_1 0
#define EXTAPB_REGFILE_TX_DATAPATH_GAIN_FIRST_POINT_GAIN_FIRST_POINT_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_TX_DATAPATH_GAIN_FIRST_POINT_GAIN_FIRST_POINT_BLE_2 0
#define EXTAPB_REGFILE_TX_DATAPATH_GAIN_FIRST_POINT_GAIN_FIRST_POINT_BLE_2_MASK 0x0
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int gain_first_point : 11;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tx_datapath_gain_first_point;
#define EXTAPB_REGFILE_TX_DATAPATH_GAIN_FIRST_POINT_RST 0x0
#define EXTAPB_REGFILE_TX_DATAPATH_GAIN_FIRST_POINT_ADDR  0x4001d78c


/* gain_second_point register */
/*----------------------*/
/* Tx Datapath : Gain second point (Stored in configuration bank) */
/* gain_second_point : Gain second point */
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#define EXTAPB_REGFILE_TX_DATAPATH_GAIN_SECOND_POINT_GAIN_SECOND_POINT_MASK 0x00ff
#define EXTAPB_REGFILE_TX_DATAPATH_GAIN_SECOND_POINT_GAIN_SECOND_POINT_POS  0
#define EXTAPB_REGFILE_TX_DATAPATH_GAIN_SECOND_POINT_GAIN_SECOND_POINT_BT_LE_1 31
#define EXTAPB_REGFILE_TX_DATAPATH_GAIN_SECOND_POINT_GAIN_SECOND_POINT_BT_LE_1_MASK 0x1f
#define EXTAPB_REGFILE_TX_DATAPATH_GAIN_SECOND_POINT_GAIN_SECOND_POINT_BT_LE_2 60
#define EXTAPB_REGFILE_TX_DATAPATH_GAIN_SECOND_POINT_GAIN_SECOND_POINT_BT_LE_2_MASK 0x3c
#define EXTAPB_REGFILE_TX_DATAPATH_GAIN_SECOND_POINT_GAIN_SECOND_POINT_NORDIC_250 11
#define EXTAPB_REGFILE_TX_DATAPATH_GAIN_SECOND_POINT_GAIN_SECOND_POINT_NORDIC_250_MASK 0xb
#define EXTAPB_REGFILE_TX_DATAPATH_GAIN_SECOND_POINT_GAIN_SECOND_POINT_NORDIC_2 39
#define EXTAPB_REGFILE_TX_DATAPATH_GAIN_SECOND_POINT_GAIN_SECOND_POINT_NORDIC_2_MASK 0x27
#else
#define EXTAPB_REGFILE_TX_DATAPATH_GAIN_SECOND_POINT_GAIN_SECOND_POINT_MASK 0x00ff
#define EXTAPB_REGFILE_TX_DATAPATH_GAIN_SECOND_POINT_GAIN_SECOND_POINT_POS  0
#define EXTAPB_REGFILE_TX_DATAPATH_GAIN_SECOND_POINT_GAIN_SECOND_POINT_ZB_2 0
#define EXTAPB_REGFILE_TX_DATAPATH_GAIN_SECOND_POINT_GAIN_SECOND_POINT_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_TX_DATAPATH_GAIN_SECOND_POINT_GAIN_SECOND_POINT_BLE_1 0
#define EXTAPB_REGFILE_TX_DATAPATH_GAIN_SECOND_POINT_GAIN_SECOND_POINT_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_TX_DATAPATH_GAIN_SECOND_POINT_GAIN_SECOND_POINT_BLE_2 0
#define EXTAPB_REGFILE_TX_DATAPATH_GAIN_SECOND_POINT_GAIN_SECOND_POINT_BLE_2_MASK 0x0
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int gain_second_point : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tx_datapath_gain_second_point;
#define EXTAPB_REGFILE_TX_DATAPATH_GAIN_SECOND_POINT_RST 0x0
#define EXTAPB_REGFILE_TX_DATAPATH_GAIN_SECOND_POINT_ADDR  0x4001d790


/* kmod_band_corr_1 register */
/*----------------------*/
/* KMod band correction factor */
/* corr_1 : See register description. */
#define EXTAPB_REGFILE_TX_DATAPATH_KMOD_BAND_CORR_1_CORR_1_MASK 0x07ff
#define EXTAPB_REGFILE_TX_DATAPATH_KMOD_BAND_CORR_1_CORR_1_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int corr_1 : 11;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tx_datapath_kmod_band_corr_1;
#define EXTAPB_REGFILE_TX_DATAPATH_KMOD_BAND_CORR_1_RST 0x400
#define EXTAPB_REGFILE_TX_DATAPATH_KMOD_BAND_CORR_1_ADDR  0x4001d794


/* kmod_chan_corr_2 register */
/*----------------------*/
/* KMod channel correction factor */
/* corr_2 : See register description. */
#define EXTAPB_REGFILE_TX_DATAPATH_KMOD_CHAN_CORR_2_CORR_2_MASK 0x07ff
#define EXTAPB_REGFILE_TX_DATAPATH_KMOD_CHAN_CORR_2_CORR_2_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int corr_2 : 11;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tx_datapath_kmod_chan_corr_2;
#define EXTAPB_REGFILE_TX_DATAPATH_KMOD_CHAN_CORR_2_RST 0x400
#define EXTAPB_REGFILE_TX_DATAPATH_KMOD_CHAN_CORR_2_ADDR  0x4001d798


/* pre_const register */
/*----------------------*/
/* Constant value to be prepended before packet (Stored in configuration bank) */
/* len : Length of pre constant value, only bits 4:0 are used */
/* val : Constant value for prepend: -1, 0, +1 */
/* en : Configures whether constant value is prepended before packet */
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#define EXTAPB_REGFILE_TX_DATAPATH_PRE_CONST_LEN_MASK 0x00ff
#define EXTAPB_REGFILE_TX_DATAPATH_PRE_CONST_LEN_POS  0
#define EXTAPB_REGFILE_TX_DATAPATH_PRE_CONST_VAL_MASK 0x0300
#define EXTAPB_REGFILE_TX_DATAPATH_PRE_CONST_VAL_POS  8
#define EXTAPB_REGFILE_TX_DATAPATH_PRE_CONST_EN_MASK 0x0400
#define EXTAPB_REGFILE_TX_DATAPATH_PRE_CONST_EN_POS  10
#define EXTAPB_REGFILE_TX_DATAPATH_PRE_CONST_EN_DIS 0
#define EXTAPB_REGFILE_TX_DATAPATH_PRE_CONST_EN_DIS_MASK 0x0
#else
#define EXTAPB_REGFILE_TX_DATAPATH_PRE_CONST_LEN_MASK 0x00ff
#define EXTAPB_REGFILE_TX_DATAPATH_PRE_CONST_LEN_POS  0
#define EXTAPB_REGFILE_TX_DATAPATH_PRE_CONST_LEN_ZB_2 0
#define EXTAPB_REGFILE_TX_DATAPATH_PRE_CONST_LEN_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_TX_DATAPATH_PRE_CONST_LEN_BLE_1 0
#define EXTAPB_REGFILE_TX_DATAPATH_PRE_CONST_LEN_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_TX_DATAPATH_PRE_CONST_LEN_BLE_2 0
#define EXTAPB_REGFILE_TX_DATAPATH_PRE_CONST_LEN_BLE_2_MASK 0x0
#define EXTAPB_REGFILE_TX_DATAPATH_PRE_CONST_VAL_MASK 0x0300
#define EXTAPB_REGFILE_TX_DATAPATH_PRE_CONST_VAL_POS  8
#define EXTAPB_REGFILE_TX_DATAPATH_PRE_CONST_VAL_ZB_2 0
#define EXTAPB_REGFILE_TX_DATAPATH_PRE_CONST_VAL_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_TX_DATAPATH_PRE_CONST_VAL_BLE_1 0
#define EXTAPB_REGFILE_TX_DATAPATH_PRE_CONST_VAL_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_TX_DATAPATH_PRE_CONST_VAL_BLE_2 0
#define EXTAPB_REGFILE_TX_DATAPATH_PRE_CONST_VAL_BLE_2_MASK 0x0
#define EXTAPB_REGFILE_TX_DATAPATH_PRE_CONST_EN_MASK 0x0400
#define EXTAPB_REGFILE_TX_DATAPATH_PRE_CONST_EN_POS  10
#define EXTAPB_REGFILE_TX_DATAPATH_PRE_CONST_EN_DIS 0
#define EXTAPB_REGFILE_TX_DATAPATH_PRE_CONST_EN_DIS_MASK 0x0
#define EXTAPB_REGFILE_TX_DATAPATH_PRE_CONST_EN_EN 1
#define EXTAPB_REGFILE_TX_DATAPATH_PRE_CONST_EN_EN_MASK 0x400
#define EXTAPB_REGFILE_TX_DATAPATH_PRE_CONST_EN_ZB_2 0
#define EXTAPB_REGFILE_TX_DATAPATH_PRE_CONST_EN_ZB_2_MASK 0x0
#define EXTAPB_REGFILE_TX_DATAPATH_PRE_CONST_EN_BLE_1 0
#define EXTAPB_REGFILE_TX_DATAPATH_PRE_CONST_EN_BLE_1_MASK 0x0
#define EXTAPB_REGFILE_TX_DATAPATH_PRE_CONST_EN_BLE_2 0
#define EXTAPB_REGFILE_TX_DATAPATH_PRE_CONST_EN_BLE_2_MASK 0x0
#endif
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int len : 8;
    unsigned int val : 2;
    unsigned int en : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tx_datapath_pre_const;
#define EXTAPB_REGFILE_TX_DATAPATH_PRE_CONST_RST 0x0
#define EXTAPB_REGFILE_TX_DATAPATH_PRE_CONST_ADDR  0x4001d79c


typedef struct{
    t_extapb_regfile_tx_datapath_global  global;
    t_extapb_regfile_tx_datapath_cfg  cfg;
    t_extapb_regfile_tx_datapath_delay  delay;
    t_extapb_regfile_tx_datapath_gain_first_point  gain_first_point;
    t_extapb_regfile_tx_datapath_gain_second_point  gain_second_point;
    t_extapb_regfile_tx_datapath_kmod_band_corr_1  kmod_band_corr_1;
    t_extapb_regfile_tx_datapath_kmod_chan_corr_2  kmod_chan_corr_2;
    t_extapb_regfile_tx_datapath_pre_const  pre_const;
} t_extapb_regfile_tx_datapath;
#define EXTAPB_REGFILE_TX_DATAPATH_ADDR 0x4001d780
#define EXTAPB_REGFILE_TX_DATAPATH ((t_extapb_regfile_tx_datapath *)EXTAPB_REGFILE_TX_DATAPATH_ADDR)


/* tmu module */
/*-------------------------*/


/* mode_ctrl register */
/*----------------------*/
/* Operation mode control register. Cannot be written without reference clock: any next write will hang. */
/* tx_notrx : Transfer direction selection. */
/* tx_order : Register file tx_order value */
/* rx_order : Register file rx_order value */
/* pll_mode : TBD */
/* packet_start_mode : Specifies which packet_start is used. */
/* rx_false_sync_mode : Specifies the behaviour when a false sync is detected in scan mode */
/* ble_mode : Specifies the BLE mode */
/* ble_sync_mode : Specifies the BLE synchronization mode (select which BLE sync wire is used to freeze the AGC) */
#define EXTAPB_REGFILE_TMU_MODE_CTRL_TX_NOTRX_MASK 0x0001
#define EXTAPB_REGFILE_TMU_MODE_CTRL_TX_NOTRX_POS  0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_TX_NOTRX_RX 0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_TX_NOTRX_RX_MASK 0x0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_TX_NOTRX_TX 1
#define EXTAPB_REGFILE_TMU_MODE_CTRL_TX_NOTRX_TX_MASK 0x1
#define EXTAPB_REGFILE_TMU_MODE_CTRL_TX_ORDER_MASK 0x0006
#define EXTAPB_REGFILE_TMU_MODE_CTRL_TX_ORDER_POS  1
#define EXTAPB_REGFILE_TMU_MODE_CTRL_RX_ORDER_MASK 0x0018
#define EXTAPB_REGFILE_TMU_MODE_CTRL_RX_ORDER_POS  3
#define EXTAPB_REGFILE_TMU_MODE_CTRL_PLL_MODE_MASK 0x00e0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_PLL_MODE_POS  5
#define EXTAPB_REGFILE_TMU_MODE_CTRL_PLL_MODE_PLL_SKIP 0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_PLL_MODE_PLL_SKIP_MASK 0x0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_PLL_MODE_PLL_STARTUP 1
#define EXTAPB_REGFILE_TMU_MODE_CTRL_PLL_MODE_PLL_STARTUP_MASK 0x20
#define EXTAPB_REGFILE_TMU_MODE_CTRL_PLL_MODE_PLL_OPERATION 2
#define EXTAPB_REGFILE_TMU_MODE_CTRL_PLL_MODE_PLL_OPERATION_MASK 0x40
#define EXTAPB_REGFILE_TMU_MODE_CTRL_PLL_MODE_PLL_STARTUP_OPERATION 3
#define EXTAPB_REGFILE_TMU_MODE_CTRL_PLL_MODE_PLL_STARTUP_OPERATION_MASK 0x60
#define EXTAPB_REGFILE_TMU_MODE_CTRL_PLL_MODE_PLL_SW_CONTROLLED 4
#define EXTAPB_REGFILE_TMU_MODE_CTRL_PLL_MODE_PLL_SW_CONTROLLED_MASK 0x80
#define EXTAPB_REGFILE_TMU_MODE_CTRL_PACKET_START_MODE_MASK 0x0100
#define EXTAPB_REGFILE_TMU_MODE_CTRL_PACKET_START_MODE_POS  8
#define EXTAPB_REGFILE_TMU_MODE_CTRL_PACKET_START_MODE_PACKET_START_EXTERNAL 0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_PACKET_START_MODE_PACKET_START_EXTERNAL_MASK 0x0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_PACKET_START_MODE_PACKET_START_INTERNAL 1
#define EXTAPB_REGFILE_TMU_MODE_CTRL_PACKET_START_MODE_PACKET_START_INTERNAL_MASK 0x100
#define EXTAPB_REGFILE_TMU_MODE_CTRL_RX_FALSE_SYNC_MODE_MASK 0x0200
#define EXTAPB_REGFILE_TMU_MODE_CTRL_RX_FALSE_SYNC_MODE_POS  9
#define EXTAPB_REGFILE_TMU_MODE_CTRL_RX_FALSE_SYNC_MODE_RETRY_MODE 0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_RX_FALSE_SYNC_MODE_RETRY_MODE_MASK 0x0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_RX_FALSE_SYNC_MODE_ABORT_MODE 1
#define EXTAPB_REGFILE_TMU_MODE_CTRL_RX_FALSE_SYNC_MODE_ABORT_MODE_MASK 0x200
#define EXTAPB_REGFILE_TMU_MODE_CTRL_BLE_MODE_MASK 0x0400
#define EXTAPB_REGFILE_TMU_MODE_CTRL_BLE_MODE_POS  10
#define EXTAPB_REGFILE_TMU_MODE_CTRL_BLE_MODE_ZB 0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_BLE_MODE_ZB_MASK 0x0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_BLE_MODE_BLE 1
#define EXTAPB_REGFILE_TMU_MODE_CTRL_BLE_MODE_BLE_MASK 0x400
#define EXTAPB_REGFILE_TMU_MODE_CTRL_BLE_SYNC_MODE_MASK 0x1800
#define EXTAPB_REGFILE_TMU_MODE_CTRL_BLE_SYNC_MODE_POS  11
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int tx_notrx : 1;
    unsigned int tx_order : 2;
    unsigned int rx_order : 2;
    unsigned int pll_mode : 3;
    unsigned int packet_start_mode : 1;
    unsigned int rx_false_sync_mode : 1;
    unsigned int ble_mode : 1;
    unsigned int ble_sync_mode : 2;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_mode_ctrl;
#define EXTAPB_REGFILE_TMU_MODE_CTRL_RST 0x100
#define EXTAPB_REGFILE_TMU_MODE_CTRL_ADDR  0x4001d800


/* mode_ctrl_2 register */
/*----------------------*/
/* Operation mode control register. Cannot be written without reference clock: any next write will hang. */
/* mra2_mode_ctrl_en : MRA2 mode control enable. */
/* pll_phase_skip_en : Specifies whether the PLL phase is skipped in between consecutive packets in the same power cycle */
/* trx_powerup_en : Specifies whether the TMU initiates the power up for the selected mode during the PLL phase. */
/* trx_powerdown_en : Specifies whether the TMU initiates the power down for the selected mode after a transfer is finished. */
/* global_powerdown_en : Specifies whether the TMU initiates the global power down after all transfers are finished. */
/* kmod_band_cal_en : Specifies whether the TMU initiates the KMod band calibration during the PLL phase. */
/* kmod_chan_cal_en : Specifies whether the TMU initiates the KMod channel calibration during the PLL phase. */
/* synth_cal_startup_en : Specifies whether the TMU initiates the synthesizer calibration for startup during the PLL phase. */
/* synth_cal_operation_en : Specifies whether the TMU initiates the synthesizer calibration for operation during the PLL phase. */
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_MRA2_MODE_CTRL_EN_MASK 0x0001
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_MRA2_MODE_CTRL_EN_POS  0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_MRA2_MODE_CTRL_EN_DIS 0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_MRA2_MODE_CTRL_EN_DIS_MASK 0x0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_MRA2_MODE_CTRL_EN_EN 1
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_MRA2_MODE_CTRL_EN_EN_MASK 0x1
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_PLL_PHASE_SKIP_EN_MASK 0x0002
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_PLL_PHASE_SKIP_EN_POS  1
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_PLL_PHASE_SKIP_EN_DIS 0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_PLL_PHASE_SKIP_EN_DIS_MASK 0x0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_PLL_PHASE_SKIP_EN_EN 1
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_PLL_PHASE_SKIP_EN_EN_MASK 0x2
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_TRX_POWERUP_EN_MASK 0x0004
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_TRX_POWERUP_EN_POS  2
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_TRX_POWERUP_EN_DIS 0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_TRX_POWERUP_EN_DIS_MASK 0x0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_TRX_POWERUP_EN_EN 1
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_TRX_POWERUP_EN_EN_MASK 0x4
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_TRX_POWERDOWN_EN_MASK 0x0008
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_TRX_POWERDOWN_EN_POS  3
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_TRX_POWERDOWN_EN_DIS 0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_TRX_POWERDOWN_EN_DIS_MASK 0x0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_TRX_POWERDOWN_EN_EN 1
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_TRX_POWERDOWN_EN_EN_MASK 0x8
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_GLOBAL_POWERDOWN_EN_MASK 0x0010
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_GLOBAL_POWERDOWN_EN_POS  4
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_GLOBAL_POWERDOWN_EN_DIS 0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_GLOBAL_POWERDOWN_EN_DIS_MASK 0x0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_GLOBAL_POWERDOWN_EN_EN 1
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_GLOBAL_POWERDOWN_EN_EN_MASK 0x10
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_KMOD_BAND_CAL_EN_MASK 0x0020
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_KMOD_BAND_CAL_EN_POS  5
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_KMOD_BAND_CAL_EN_DIS 0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_KMOD_BAND_CAL_EN_DIS_MASK 0x0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_KMOD_BAND_CAL_EN_EN 1
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_KMOD_BAND_CAL_EN_EN_MASK 0x20
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_KMOD_CHAN_CAL_EN_MASK 0x0040
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_KMOD_CHAN_CAL_EN_POS  6
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_KMOD_CHAN_CAL_EN_DIS 0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_KMOD_CHAN_CAL_EN_DIS_MASK 0x0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_KMOD_CHAN_CAL_EN_EN 1
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_KMOD_CHAN_CAL_EN_EN_MASK 0x40
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_SYNTH_CAL_STARTUP_EN_MASK 0x0080
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_SYNTH_CAL_STARTUP_EN_POS  7
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_SYNTH_CAL_STARTUP_EN_DIS 0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_SYNTH_CAL_STARTUP_EN_DIS_MASK 0x0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_SYNTH_CAL_STARTUP_EN_EN 1
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_SYNTH_CAL_STARTUP_EN_EN_MASK 0x80
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_SYNTH_CAL_OPERATION_EN_MASK 0x0100
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_SYNTH_CAL_OPERATION_EN_POS  8
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_SYNTH_CAL_OPERATION_EN_DIS 0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_SYNTH_CAL_OPERATION_EN_DIS_MASK 0x0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_SYNTH_CAL_OPERATION_EN_EN 1
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_SYNTH_CAL_OPERATION_EN_EN_MASK 0x100
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int mra2_mode_ctrl_en : 1;
    unsigned int pll_phase_skip_en : 1;
    unsigned int trx_powerup_en : 1;
    unsigned int trx_powerdown_en : 1;
    unsigned int global_powerdown_en : 1;
    unsigned int kmod_band_cal_en : 1;
    unsigned int kmod_chan_cal_en : 1;
    unsigned int synth_cal_startup_en : 1;
    unsigned int synth_cal_operation_en : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_mode_ctrl_2;
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_RST 0x1d
#define EXTAPB_REGFILE_TMU_MODE_CTRL_2_ADDR  0x4001d804


/* mode_ctrl_3 register */
/*----------------------*/
/* Operation mode control register. Cannot be written without reference clock: any next write will hang. */
/* p_wanted : TBD */
#define EXTAPB_REGFILE_TMU_MODE_CTRL_3_P_WANTED_MASK 0x00ff
#define EXTAPB_REGFILE_TMU_MODE_CTRL_3_P_WANTED_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int p_wanted : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_mode_ctrl_3;
#define EXTAPB_REGFILE_TMU_MODE_CTRL_3_RST 0x0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_3_ADDR  0x4001d808


/* mode_ctrl_src register */
/*----------------------*/
/* Mode control source register */
/* tx_notrx_src : Selects the tx_norx source */
/* ble_mode_src : Selects the ble_mode source */
/* p_wanted_src : Selects the p_wanted source */
/* tx_order_src : Selects the tx_order source */
/* rx_order_src : Selects the rx_order source */
/* rf_carrier_freq_int_src : Selects the rf_carrier_freq_int source */
/* rf_carrier_freq_frac_src : Selects the rf_carrier_freq_frac source */
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_TX_NOTRX_SRC_MASK 0x0003
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_TX_NOTRX_SRC_POS  0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_TX_NOTRX_SRC_PRE_START_SRC 0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_TX_NOTRX_SRC_PRE_START_SRC_MASK 0x0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_TX_NOTRX_SRC_REGFILE 1
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_TX_NOTRX_SRC_REGFILE_MASK 0x1
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_TX_NOTRX_SRC_LINKLAYER 2
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_TX_NOTRX_SRC_LINKLAYER_MASK 0x2
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_BLE_MODE_SRC_MASK 0x0004
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_BLE_MODE_SRC_POS  2
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_BLE_MODE_SRC_PRE_START_SRC 0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_BLE_MODE_SRC_PRE_START_SRC_MASK 0x0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_BLE_MODE_SRC_REGFILE 1
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_BLE_MODE_SRC_REGFILE_MASK 0x4
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_P_WANTED_SRC_MASK 0x0018
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_P_WANTED_SRC_POS  3
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_P_WANTED_SRC_PRE_START_SRC 0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_P_WANTED_SRC_PRE_START_SRC_MASK 0x0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_P_WANTED_SRC_REGFILE 1
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_P_WANTED_SRC_REGFILE_MASK 0x8
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_P_WANTED_SRC_LINKLAYER 2
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_P_WANTED_SRC_LINKLAYER_MASK 0x10
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_TX_ORDER_SRC_MASK 0x0060
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_TX_ORDER_SRC_POS  5
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_TX_ORDER_SRC_PRE_START_SRC 0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_TX_ORDER_SRC_PRE_START_SRC_MASK 0x0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_TX_ORDER_SRC_REGFILE 1
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_TX_ORDER_SRC_REGFILE_MASK 0x20
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_TX_ORDER_SRC_LINKLAYER 2
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_TX_ORDER_SRC_LINKLAYER_MASK 0x40
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_RX_ORDER_SRC_MASK 0x0180
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_RX_ORDER_SRC_POS  7
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_RX_ORDER_SRC_PRE_START_SRC 0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_RX_ORDER_SRC_PRE_START_SRC_MASK 0x0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_RX_ORDER_SRC_REGFILE 1
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_RX_ORDER_SRC_REGFILE_MASK 0x80
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_RX_ORDER_SRC_LINKLAYER 2
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_RX_ORDER_SRC_LINKLAYER_MASK 0x100
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_RF_CARRIER_FREQ_INT_SRC_MASK 0x0600
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_RF_CARRIER_FREQ_INT_SRC_POS  9
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_RF_CARRIER_FREQ_INT_SRC_PRE_START_SRC 0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_RF_CARRIER_FREQ_INT_SRC_PRE_START_SRC_MASK 0x0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_RF_CARRIER_FREQ_INT_SRC_REGFILE 1
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_RF_CARRIER_FREQ_INT_SRC_REGFILE_MASK 0x200
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_RF_CARRIER_FREQ_INT_SRC_LINKLAYER 2
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_RF_CARRIER_FREQ_INT_SRC_LINKLAYER_MASK 0x400
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_RF_CARRIER_FREQ_FRAC_SRC_MASK 0x1800
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_RF_CARRIER_FREQ_FRAC_SRC_POS  11
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_RF_CARRIER_FREQ_FRAC_SRC_PRE_START_SRC 0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_RF_CARRIER_FREQ_FRAC_SRC_PRE_START_SRC_MASK 0x0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_RF_CARRIER_FREQ_FRAC_SRC_REGFILE 1
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_RF_CARRIER_FREQ_FRAC_SRC_REGFILE_MASK 0x800
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_RF_CARRIER_FREQ_FRAC_SRC_LINKLAYER 2
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_RF_CARRIER_FREQ_FRAC_SRC_LINKLAYER_MASK 0x1000
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int tx_notrx_src : 2;
    unsigned int ble_mode_src : 1;
    unsigned int p_wanted_src : 2;
    unsigned int tx_order_src : 2;
    unsigned int rx_order_src : 2;
    unsigned int rf_carrier_freq_int_src : 2;
    unsigned int rf_carrier_freq_frac_src : 2;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_mode_ctrl_src;
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_RST 0xa0
#define EXTAPB_REGFILE_TMU_MODE_CTRL_SRC_ADDR  0x4001d80c


/* pre_tx register */
/*----------------------*/
/* TX startup time register */
/* cnt : TX startup time: time in baseband clock cycles between rising edge of START (TX analog modules enable) and TX datapath enable */
#define EXTAPB_REGFILE_TMU_PRE_TX_CNT_MASK 0x00ff
#define EXTAPB_REGFILE_TMU_PRE_TX_CNT_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int cnt : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_pre_tx;
#define EXTAPB_REGFILE_TMU_PRE_TX_RST 0x0
#define EXTAPB_REGFILE_TMU_PRE_TX_ADDR  0x4001d810


/* post_tx register */
/*----------------------*/
/* TX closing time register */
/* cnt : TX closing time: time in baseband clock cycles between TX datapath finished (EOP) and TX analog modules disable. Smallest value allowed is 3. */
#define EXTAPB_REGFILE_TMU_POST_TX_CNT_MASK 0x00ff
#define EXTAPB_REGFILE_TMU_POST_TX_CNT_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int cnt : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_post_tx;
#define EXTAPB_REGFILE_TMU_POST_TX_RST 0x5
#define EXTAPB_REGFILE_TMU_POST_TX_ADDR  0x4001d814


/* pre_rx register */
/*----------------------*/
/* RX startup time register */
/* cnt : RX startup time: time in baseband clock cycles between rising edge of START (RX analog modules enable) and RX datapath enable */
#define EXTAPB_REGFILE_TMU_PRE_RX_CNT_MASK 0x00ff
#define EXTAPB_REGFILE_TMU_PRE_RX_CNT_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int cnt : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_pre_rx;
#define EXTAPB_REGFILE_TMU_PRE_RX_RST 0x0
#define EXTAPB_REGFILE_TMU_PRE_RX_ADDR  0x4001d818


/* post_rx register */
/*----------------------*/
/* RX closing time register */
/* cnt : RX closing time: time in baseband clock cycles between RX datapath finished (EOP) and RX analog modules disable */
#define EXTAPB_REGFILE_TMU_POST_RX_CNT_MASK 0x00ff
#define EXTAPB_REGFILE_TMU_POST_RX_CNT_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int cnt : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_post_rx;
#define EXTAPB_REGFILE_TMU_POST_RX_RST 0x0
#define EXTAPB_REGFILE_TMU_POST_RX_ADDR  0x4001d81c


/* status register */
/*----------------------*/
/* RX and TX Status. (Snapshot register) */
/* tx_state :  */
/* rx_state :  */
/* tx_ready :  */
/* rx_ready :  */
#define EXTAPB_REGFILE_TMU_STATUS_TX_STATE_MASK 0x000f
#define EXTAPB_REGFILE_TMU_STATUS_TX_STATE_POS  0
#define EXTAPB_REGFILE_TMU_STATUS_RX_STATE_MASK 0x00f0
#define EXTAPB_REGFILE_TMU_STATUS_RX_STATE_POS  4
#define EXTAPB_REGFILE_TMU_STATUS_TX_READY_MASK 0x0100
#define EXTAPB_REGFILE_TMU_STATUS_TX_READY_POS  8
#define EXTAPB_REGFILE_TMU_STATUS_RX_READY_MASK 0x0200
#define EXTAPB_REGFILE_TMU_STATUS_RX_READY_POS  9
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int tx_state : 4;
    unsigned int rx_state : 4;
    unsigned int tx_ready : 1;
    unsigned int rx_ready : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_status;
#define EXTAPB_REGFILE_TMU_STATUS_RST 0x0
#define EXTAPB_REGFILE_TMU_STATUS_DYNAMIC true
#define EXTAPB_REGFILE_TMU_STATUS_SNAPCLOCK 0
#define EXTAPB_REGFILE_TMU_STATUS_ADDR  0x4001d820


/* cal_status register */
/*----------------------*/
/* Calibration status. (Snapshot register) */
/* cal_state :  */
#define EXTAPB_REGFILE_TMU_CAL_STATUS_CAL_STATE_MASK 0xffff
#define EXTAPB_REGFILE_TMU_CAL_STATUS_CAL_STATE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int cal_state : 16;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_cal_status;
#define EXTAPB_REGFILE_TMU_CAL_STATUS_RST 0x0
#define EXTAPB_REGFILE_TMU_CAL_STATUS_DYNAMIC true
#define EXTAPB_REGFILE_TMU_CAL_STATUS_SNAPCLOCK 0
#define EXTAPB_REGFILE_TMU_CAL_STATUS_ADDR  0x4001d824


/* cal_status1 register */
/*----------------------*/
/* Calibration status (part2) (Snapshot register) */
/* cal_state :  */
#define EXTAPB_REGFILE_TMU_CAL_STATUS1_CAL_STATE_MASK 0xffff
#define EXTAPB_REGFILE_TMU_CAL_STATUS1_CAL_STATE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int cal_state : 16;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_cal_status1;
#define EXTAPB_REGFILE_TMU_CAL_STATUS1_RST 0x0
#define EXTAPB_REGFILE_TMU_CAL_STATUS1_DYNAMIC true
#define EXTAPB_REGFILE_TMU_CAL_STATUS1_SNAPCLOCK 0
#define EXTAPB_REGFILE_TMU_CAL_STATUS1_ADDR  0x4001d828


/* cal_status2 register */
/*----------------------*/
/* Calibration status (part3) (Snapshot register) */
/* cal_state :  */
#define EXTAPB_REGFILE_TMU_CAL_STATUS2_CAL_STATE_MASK 0xffff
#define EXTAPB_REGFILE_TMU_CAL_STATUS2_CAL_STATE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int cal_state : 16;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_cal_status2;
#define EXTAPB_REGFILE_TMU_CAL_STATUS2_RST 0x0
#define EXTAPB_REGFILE_TMU_CAL_STATUS2_DYNAMIC true
#define EXTAPB_REGFILE_TMU_CAL_STATUS2_SNAPCLOCK 0
#define EXTAPB_REGFILE_TMU_CAL_STATUS2_ADDR  0x4001d82c


/* global_status register */
/*----------------------*/
/* Global TMU status. (Snapshot register) */
/* global_state :  */
#define EXTAPB_REGFILE_TMU_GLOBAL_STATUS_GLOBAL_STATE_MASK 0x03ff
#define EXTAPB_REGFILE_TMU_GLOBAL_STATUS_GLOBAL_STATE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int global_state : 10;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_global_status;
#define EXTAPB_REGFILE_TMU_GLOBAL_STATUS_RST 0x0
#define EXTAPB_REGFILE_TMU_GLOBAL_STATUS_DYNAMIC true
#define EXTAPB_REGFILE_TMU_GLOBAL_STATUS_SNAPCLOCK 0
#define EXTAPB_REGFILE_TMU_GLOBAL_STATUS_ADDR  0x4001d830


/* clk_override register */
/*----------------------*/
/* Snap/Snack will hang if a clock is missing. This register allows to enable the clock for specific clock domains. */
/* ref_clk : The register value is OR-ed with op_tx_tmu_ref_clk_en */
/* rx_bb_clk : The register value is OR-ed with op_rx_tmu_bb_clk_en */
#define EXTAPB_REGFILE_TMU_CLK_OVERRIDE_REF_CLK_MASK 0x0001
#define EXTAPB_REGFILE_TMU_CLK_OVERRIDE_REF_CLK_POS  0
#define EXTAPB_REGFILE_TMU_CLK_OVERRIDE_RX_BB_CLK_MASK 0x0002
#define EXTAPB_REGFILE_TMU_CLK_OVERRIDE_RX_BB_CLK_POS  1
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int ref_clk : 1;
    unsigned int rx_bb_clk : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_clk_override;
#define EXTAPB_REGFILE_TMU_CLK_OVERRIDE_RST 0x0
#define EXTAPB_REGFILE_TMU_CLK_OVERRIDE_ADDR  0x4001d834


/* rx_sync_found_timeout register */
/*----------------------*/
/* Rx sync period before timeout */
/* cnt : RX sync period before timeout. Zero means unlimited sync period (so no synchronization timeout). */
#define EXTAPB_REGFILE_TMU_RX_SYNC_FOUND_TIMEOUT_CNT_MASK 0xffff
#define EXTAPB_REGFILE_TMU_RX_SYNC_FOUND_TIMEOUT_CNT_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int cnt : 16;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_rx_sync_found_timeout;
#define EXTAPB_REGFILE_TMU_RX_SYNC_FOUND_TIMEOUT_RST 0x0
#define EXTAPB_REGFILE_TMU_RX_SYNC_FOUND_TIMEOUT_ADDR  0x4001d838


/* rfp_tmu_intstat register */
/*----------------------*/
/* RFP TMU Interrupt status */
/* rx_sync_found : Rx Sync found detected */
/* rx_sync_found_timeout : Rx Sync found timeout detected */
/* tx_eop : Tx EOP detected */
/* pll_not_locked_rx : PLL not locked when entering RX. Measurement moment : assertion of RX3 */
/* pll_not_locked_tx : PLL not locked when entering TX. Measurement moment : assertion of TX3 (in front of PA rampup) */
/* pll_not_locked_pa_cal : PLL not locked at the end of PA_delay1 stage of PA calibration */
/* pll_state_start : Asserted when entering PLL state */
/* rx_state_start : Asserted when entering RX state */
/* rx_state_end : Asserted when leaving RX state */
/* tx_state_start : Asserted when entering TX state */
/* tx_state_end : Asserted when leaving TX state */
/* zb_lost : If set ZB MAC lost modem when it was active */
/* zb_denied : If set ZB MAC attempted to use radio but was blocked due to higher priority BLE */
/* ble_lost : If set BLE link layer lost modem when it was active */
/* ble_denied : If set BLE link layer attempted to use radio but was blocked due to higher priority ZB */
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSTAT_RX_SYNC_FOUND_MASK 0x0001
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSTAT_RX_SYNC_FOUND_POS  0
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSTAT_RX_SYNC_FOUND_TIMEOUT_MASK 0x0002
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSTAT_RX_SYNC_FOUND_TIMEOUT_POS  1
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSTAT_TX_EOP_MASK 0x0004
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSTAT_TX_EOP_POS  2
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSTAT_PLL_NOT_LOCKED_RX_MASK 0x0008
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSTAT_PLL_NOT_LOCKED_RX_POS  3
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSTAT_PLL_NOT_LOCKED_TX_MASK 0x0010
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSTAT_PLL_NOT_LOCKED_TX_POS  4
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSTAT_PLL_NOT_LOCKED_PA_CAL_MASK 0x0020
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSTAT_PLL_NOT_LOCKED_PA_CAL_POS  5
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSTAT_PLL_STATE_START_MASK 0x0040
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSTAT_PLL_STATE_START_POS  6
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSTAT_RX_STATE_START_MASK 0x0080
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSTAT_RX_STATE_START_POS  7
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSTAT_RX_STATE_END_MASK 0x0100
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSTAT_RX_STATE_END_POS  8
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSTAT_TX_STATE_START_MASK 0x0200
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSTAT_TX_STATE_START_POS  9
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSTAT_TX_STATE_END_MASK 0x0400
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSTAT_TX_STATE_END_POS  10
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSTAT_ZB_LOST_MASK 0x0800
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSTAT_ZB_LOST_POS  11
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSTAT_ZB_DENIED_MASK 0x1000
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSTAT_ZB_DENIED_POS  12
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSTAT_BLE_LOST_MASK 0x2000
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSTAT_BLE_LOST_POS  13
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSTAT_BLE_DENIED_MASK 0x4000
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSTAT_BLE_DENIED_POS  14
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rx_sync_found : 1;
    unsigned int rx_sync_found_timeout : 1;
    unsigned int tx_eop : 1;
    unsigned int pll_not_locked_rx : 1;
    unsigned int pll_not_locked_tx : 1;
    unsigned int pll_not_locked_pa_cal : 1;
    unsigned int pll_state_start : 1;
    unsigned int rx_state_start : 1;
    unsigned int rx_state_end : 1;
    unsigned int tx_state_start : 1;
    unsigned int tx_state_end : 1;
    unsigned int zb_lost : 1;
    unsigned int zb_denied : 1;
    unsigned int ble_lost : 1;
    unsigned int ble_denied : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_rfp_tmu_intstat;
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSTAT_RST 0x0
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSTAT_ADDR  0x4001d83c


/* rfp_tmu_intsetstat register */
/*----------------------*/
/* RFP TMU Interrupt Set. Cannot be written without RX reference clock. Any next write will hang */
/* rx_sync_found : Set event for rx_sync_found */
/* rx_sync_found_timeout : Set event for rx_sync_found_timeout */
/* tx_eop : Set event for tx_eop */
/* pll_not_locked_rx : Set event for pll_not_locked_rx */
/* pll_not_locked_tx : Set event for pll_not_locked_tx */
/* pll_not_locked_pa_cal : Set event for pll_not_locked_pa_cal */
/* pll_state_start : Set event for pll_state_start */
/* rx_state_start : Set event for rx_state_start */
/* rx_state_end : Set event for rx_state_end */
/* tx_state_start : Set event for tx_state_start */
/* tx_state_end : Set event for tx_state_end */
/* zb_lost : Set event for zb_lost */
/* zb_denied : Set event for zb_denied */
/* ble_lost : Set event for ble_lost */
/* ble_denied : Set event for ble_denied */
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSETSTAT_RX_SYNC_FOUND_MASK 0x0001
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSETSTAT_RX_SYNC_FOUND_POS  0
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSETSTAT_RX_SYNC_FOUND_TIMEOUT_MASK 0x0002
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSETSTAT_RX_SYNC_FOUND_TIMEOUT_POS  1
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSETSTAT_TX_EOP_MASK 0x0004
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSETSTAT_TX_EOP_POS  2
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSETSTAT_PLL_NOT_LOCKED_RX_MASK 0x0008
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSETSTAT_PLL_NOT_LOCKED_RX_POS  3
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSETSTAT_PLL_NOT_LOCKED_TX_MASK 0x0010
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSETSTAT_PLL_NOT_LOCKED_TX_POS  4
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSETSTAT_PLL_NOT_LOCKED_PA_CAL_MASK 0x0020
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSETSTAT_PLL_NOT_LOCKED_PA_CAL_POS  5
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSETSTAT_PLL_STATE_START_MASK 0x0040
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSETSTAT_PLL_STATE_START_POS  6
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSETSTAT_RX_STATE_START_MASK 0x0080
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSETSTAT_RX_STATE_START_POS  7
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSETSTAT_RX_STATE_END_MASK 0x0100
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSETSTAT_RX_STATE_END_POS  8
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSETSTAT_TX_STATE_START_MASK 0x0200
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSETSTAT_TX_STATE_START_POS  9
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSETSTAT_TX_STATE_END_MASK 0x0400
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSETSTAT_TX_STATE_END_POS  10
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSETSTAT_ZB_LOST_MASK 0x0800
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSETSTAT_ZB_LOST_POS  11
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSETSTAT_ZB_DENIED_MASK 0x1000
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSETSTAT_ZB_DENIED_POS  12
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSETSTAT_BLE_LOST_MASK 0x2000
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSETSTAT_BLE_LOST_POS  13
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSETSTAT_BLE_DENIED_MASK 0x4000
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSETSTAT_BLE_DENIED_POS  14
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rx_sync_found : 1;
    unsigned int rx_sync_found_timeout : 1;
    unsigned int tx_eop : 1;
    unsigned int pll_not_locked_rx : 1;
    unsigned int pll_not_locked_tx : 1;
    unsigned int pll_not_locked_pa_cal : 1;
    unsigned int pll_state_start : 1;
    unsigned int rx_state_start : 1;
    unsigned int rx_state_end : 1;
    unsigned int tx_state_start : 1;
    unsigned int tx_state_end : 1;
    unsigned int zb_lost : 1;
    unsigned int zb_denied : 1;
    unsigned int ble_lost : 1;
    unsigned int ble_denied : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_rfp_tmu_intsetstat;
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSETSTAT_RST 0x0
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTSETSTAT_ADDR  0x4001d840


/* rfp_tmu_intclrstat register */
/*----------------------*/
/* RFP TMU Interrupt clear. Cannot be written without RX reference clock. Any next write will hang */
/* rx_sync_found : Clear event for rx_sync_found */
/* rx_sync_found_timeout : Clear event for rx_sync_found_timeout */
/* tx_eop : Clear event for tx_eop */
/* pll_not_locked_rx : Clear event for pll_not_locked_rx */
/* pll_not_locked_tx : Clear event for pll_not_locked_tx */
/* pll_not_locked_pa_cal : Clear event for pll_not_locked_pa_cal */
/* pll_state_start : Clear event for pll_state_start */
/* rx_state_start : Clear event for rx_state_start */
/* rx_state_end : Clear event for rx_state_end */
/* tx_state_start : Clear event for tx_state_start */
/* tx_state_end : Clear event for tx_state_end */
/* zb_lost : Clear event for zb_lost */
/* zb_denied : Clear event for zb_denied */
/* ble_lost : Clear event for ble_lost */
/* ble_denied : Clear event for ble_denied */
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTCLRSTAT_RX_SYNC_FOUND_MASK 0x0001
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTCLRSTAT_RX_SYNC_FOUND_POS  0
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTCLRSTAT_RX_SYNC_FOUND_TIMEOUT_MASK 0x0002
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTCLRSTAT_RX_SYNC_FOUND_TIMEOUT_POS  1
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTCLRSTAT_TX_EOP_MASK 0x0004
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTCLRSTAT_TX_EOP_POS  2
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTCLRSTAT_PLL_NOT_LOCKED_RX_MASK 0x0008
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTCLRSTAT_PLL_NOT_LOCKED_RX_POS  3
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTCLRSTAT_PLL_NOT_LOCKED_TX_MASK 0x0010
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTCLRSTAT_PLL_NOT_LOCKED_TX_POS  4
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTCLRSTAT_PLL_NOT_LOCKED_PA_CAL_MASK 0x0020
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTCLRSTAT_PLL_NOT_LOCKED_PA_CAL_POS  5
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTCLRSTAT_PLL_STATE_START_MASK 0x0040
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTCLRSTAT_PLL_STATE_START_POS  6
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTCLRSTAT_RX_STATE_START_MASK 0x0080
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTCLRSTAT_RX_STATE_START_POS  7
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTCLRSTAT_RX_STATE_END_MASK 0x0100
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTCLRSTAT_RX_STATE_END_POS  8
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTCLRSTAT_TX_STATE_START_MASK 0x0200
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTCLRSTAT_TX_STATE_START_POS  9
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTCLRSTAT_TX_STATE_END_MASK 0x0400
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTCLRSTAT_TX_STATE_END_POS  10
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTCLRSTAT_ZB_LOST_MASK 0x0800
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTCLRSTAT_ZB_LOST_POS  11
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTCLRSTAT_ZB_DENIED_MASK 0x1000
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTCLRSTAT_ZB_DENIED_POS  12
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTCLRSTAT_BLE_LOST_MASK 0x2000
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTCLRSTAT_BLE_LOST_POS  13
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTCLRSTAT_BLE_DENIED_MASK 0x4000
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTCLRSTAT_BLE_DENIED_POS  14
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rx_sync_found : 1;
    unsigned int rx_sync_found_timeout : 1;
    unsigned int tx_eop : 1;
    unsigned int pll_not_locked_rx : 1;
    unsigned int pll_not_locked_tx : 1;
    unsigned int pll_not_locked_pa_cal : 1;
    unsigned int pll_state_start : 1;
    unsigned int rx_state_start : 1;
    unsigned int rx_state_end : 1;
    unsigned int tx_state_start : 1;
    unsigned int tx_state_end : 1;
    unsigned int zb_lost : 1;
    unsigned int zb_denied : 1;
    unsigned int ble_lost : 1;
    unsigned int ble_denied : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_rfp_tmu_intclrstat;
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTCLRSTAT_RST 0x0
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTCLRSTAT_ADDR  0x4001d844


/* rfp_tmu_inten register */
/*----------------------*/
/* RFP TMU Interrupt enable */
/* rx_sync_found : Interrupt enable for rx_sync_found */
/* rx_sync_found_timeout : Interrupt enable for rx_sync_found_timeout */
/* tx_eop : Interrupt enable for tx_eop */
/* pll_not_locked_rx : Interrupt enable for pll_not_locked_rx */
/* pll_not_locked_tx : Interrupt enable for pll_not_locked_tx */
/* pll_not_locked_pa_cal : Interrupt enable for pll_not_locked_pa_cal */
/* pll_state_start : Interrupt enable for pll_state_start */
/* rx_state_start : Interrupt enable for rx_state_start */
/* rx_state_end : Interrupt enable for rx_state_end */
/* tx_state_start : Interrupt enable for tx_state_start */
/* tx_state_end : Interrupt enable for tx_state_end */
/* zb_lost : Interrupt enable for zb_lost */
/* zb_denied : Interrupt enable for zb_denied */
/* ble_lost : Interrupt enable for ble_lost */
/* ble_denied : Interrupt enable for ble_denied */
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTEN_RX_SYNC_FOUND_MASK 0x0001
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTEN_RX_SYNC_FOUND_POS  0
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTEN_RX_SYNC_FOUND_TIMEOUT_MASK 0x0002
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTEN_RX_SYNC_FOUND_TIMEOUT_POS  1
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTEN_TX_EOP_MASK 0x0004
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTEN_TX_EOP_POS  2
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTEN_PLL_NOT_LOCKED_RX_MASK 0x0008
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTEN_PLL_NOT_LOCKED_RX_POS  3
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTEN_PLL_NOT_LOCKED_TX_MASK 0x0010
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTEN_PLL_NOT_LOCKED_TX_POS  4
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTEN_PLL_NOT_LOCKED_PA_CAL_MASK 0x0020
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTEN_PLL_NOT_LOCKED_PA_CAL_POS  5
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTEN_PLL_STATE_START_MASK 0x0040
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTEN_PLL_STATE_START_POS  6
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTEN_RX_STATE_START_MASK 0x0080
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTEN_RX_STATE_START_POS  7
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTEN_RX_STATE_END_MASK 0x0100
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTEN_RX_STATE_END_POS  8
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTEN_TX_STATE_START_MASK 0x0200
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTEN_TX_STATE_START_POS  9
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTEN_TX_STATE_END_MASK 0x0400
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTEN_TX_STATE_END_POS  10
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTEN_ZB_LOST_MASK 0x0800
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTEN_ZB_LOST_POS  11
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTEN_ZB_DENIED_MASK 0x1000
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTEN_ZB_DENIED_POS  12
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTEN_BLE_LOST_MASK 0x2000
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTEN_BLE_LOST_POS  13
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTEN_BLE_DENIED_MASK 0x4000
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTEN_BLE_DENIED_POS  14
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rx_sync_found : 1;
    unsigned int rx_sync_found_timeout : 1;
    unsigned int tx_eop : 1;
    unsigned int pll_not_locked_rx : 1;
    unsigned int pll_not_locked_tx : 1;
    unsigned int pll_not_locked_pa_cal : 1;
    unsigned int pll_state_start : 1;
    unsigned int rx_state_start : 1;
    unsigned int rx_state_end : 1;
    unsigned int tx_state_start : 1;
    unsigned int tx_state_end : 1;
    unsigned int zb_lost : 1;
    unsigned int zb_denied : 1;
    unsigned int ble_lost : 1;
    unsigned int ble_denied : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_rfp_tmu_inten;
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTEN_RST 0x0
#define EXTAPB_REGFILE_TMU_RFP_TMU_INTEN_ADDR  0x4001d848


/* rfp_tmu_power_intstat register */
/*----------------------*/
/* RFP TMU Power Interrupt status */
/* power_up_tx_end : Asserted when TX power up is finished */
/* power_up_rx_end : Asserted when RX power up is finished */
/* power_down_tx_end : Asserted when TX power down is finished */
/* power_down_rx_end : Asserted when RX power down is finished */
/* power_down_end : Asserted when global power down is finished */
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTSTAT_POWER_UP_TX_END_MASK 0x0001
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTSTAT_POWER_UP_TX_END_POS  0
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTSTAT_POWER_UP_RX_END_MASK 0x0002
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTSTAT_POWER_UP_RX_END_POS  1
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTSTAT_POWER_DOWN_TX_END_MASK 0x0004
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTSTAT_POWER_DOWN_TX_END_POS  2
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTSTAT_POWER_DOWN_RX_END_MASK 0x0008
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTSTAT_POWER_DOWN_RX_END_POS  3
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTSTAT_POWER_DOWN_END_MASK 0x0010
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTSTAT_POWER_DOWN_END_POS  4
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int power_up_tx_end : 1;
    unsigned int power_up_rx_end : 1;
    unsigned int power_down_tx_end : 1;
    unsigned int power_down_rx_end : 1;
    unsigned int power_down_end : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_rfp_tmu_power_intstat;
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTSTAT_RST 0x0
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTSTAT_ADDR  0x4001d84c


/* rfp_tmu_power_intsetstat register */
/*----------------------*/
/* RFP TMU Power Interrupt Set. Cannot be written without RX reference clock. Any next write will hang */
/* power_up_tx_end : Set event for power_up_tx_end */
/* power_up_rx_end : Set event for power_up_rx_end */
/* power_down_tx_end : Set event for power_down_tx_end */
/* power_down_rx_end : Set event for power_down_rx_end */
/* power_down_end : Set event for power_down_end */
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTSETSTAT_POWER_UP_TX_END_MASK 0x0001
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTSETSTAT_POWER_UP_TX_END_POS  0
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTSETSTAT_POWER_UP_RX_END_MASK 0x0002
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTSETSTAT_POWER_UP_RX_END_POS  1
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTSETSTAT_POWER_DOWN_TX_END_MASK 0x0004
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTSETSTAT_POWER_DOWN_TX_END_POS  2
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTSETSTAT_POWER_DOWN_RX_END_MASK 0x0008
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTSETSTAT_POWER_DOWN_RX_END_POS  3
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTSETSTAT_POWER_DOWN_END_MASK 0x0010
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTSETSTAT_POWER_DOWN_END_POS  4
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int power_up_tx_end : 1;
    unsigned int power_up_rx_end : 1;
    unsigned int power_down_tx_end : 1;
    unsigned int power_down_rx_end : 1;
    unsigned int power_down_end : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_rfp_tmu_power_intsetstat;
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTSETSTAT_RST 0x0
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTSETSTAT_ADDR  0x4001d850


/* rfp_tmu_power_intclrstat register */
/*----------------------*/
/* RFP TMU Power Interrupt Clear. Cannot be written without RX reference clock. Any next write will hang */
/* power_up_tx_end : Clear event for power_up_tx_end */
/* power_up_rx_end : Clear event for power_up_rx_end */
/* power_down_tx_end : Clear event for power_down_tx_end */
/* power_down_rx_end : Clear event for power_down_rx_end */
/* power_down_end : Clear event for power_down_end */
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTCLRSTAT_POWER_UP_TX_END_MASK 0x0001
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTCLRSTAT_POWER_UP_TX_END_POS  0
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTCLRSTAT_POWER_UP_RX_END_MASK 0x0002
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTCLRSTAT_POWER_UP_RX_END_POS  1
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTCLRSTAT_POWER_DOWN_TX_END_MASK 0x0004
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTCLRSTAT_POWER_DOWN_TX_END_POS  2
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTCLRSTAT_POWER_DOWN_RX_END_MASK 0x0008
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTCLRSTAT_POWER_DOWN_RX_END_POS  3
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTCLRSTAT_POWER_DOWN_END_MASK 0x0010
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTCLRSTAT_POWER_DOWN_END_POS  4
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int power_up_tx_end : 1;
    unsigned int power_up_rx_end : 1;
    unsigned int power_down_tx_end : 1;
    unsigned int power_down_rx_end : 1;
    unsigned int power_down_end : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_rfp_tmu_power_intclrstat;
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTCLRSTAT_RST 0x0
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTCLRSTAT_ADDR  0x4001d854


/* rfp_tmu_power_inten register */
/*----------------------*/
/* RFP TMU Power Interrupt enable. */
/* power_up_tx_end : Interrupt enable for power_up_tx_end */
/* power_up_rx_end : Interrupt enable for power_up_rx_end */
/* power_down_tx_end : Interrupt enable for power_down_tx_end */
/* power_down_rx_end : Interrupt enable for power_down_rx_end */
/* power_down_end : Interrrupt enable for power_down_end */
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTEN_POWER_UP_TX_END_MASK 0x0001
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTEN_POWER_UP_TX_END_POS  0
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTEN_POWER_UP_RX_END_MASK 0x0002
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTEN_POWER_UP_RX_END_POS  1
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTEN_POWER_DOWN_TX_END_MASK 0x0004
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTEN_POWER_DOWN_TX_END_POS  2
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTEN_POWER_DOWN_RX_END_MASK 0x0008
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTEN_POWER_DOWN_RX_END_POS  3
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTEN_POWER_DOWN_END_MASK 0x0010
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTEN_POWER_DOWN_END_POS  4
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int power_up_tx_end : 1;
    unsigned int power_up_rx_end : 1;
    unsigned int power_down_tx_end : 1;
    unsigned int power_down_rx_end : 1;
    unsigned int power_down_end : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_rfp_tmu_power_inten;
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTEN_RST 0x0
#define EXTAPB_REGFILE_TMU_RFP_TMU_POWER_INTEN_ADDR  0x4001d858


/* rfp_tmu_cal_intstat register */
/*----------------------*/
/* RFP TMU Calibration Interrupt status */
/* dco_cal_done : Asserted when DC Offset calibration is finished */
/* iq_cal_done : Asserted when IQ mismatch calibration is finished */
/* r_cal_done : Asserted when R Calibration is finished */
/* rc_cal_done : Asserted when RC Calibration is finished */
/* kmod_band_cal_done : Asserted when Kmod band calibration is finished */
/* kmod_chan_cal_done : Asserted when Kmod channel calibration is finished */
/* vco_cal_aac_done : Asserted when VCO AAC calibration is finished */
/* vco_cal_afc_done : Asserted when VCO AFC calibration is finished */
/* vco_cal_det_done : Asserted when VCO DET calibration is finished */
/* pa_cal_done : Asserted when PA calibration is finished. */
/* synth_cal_startup_done : Asserted when Synthesizer calibration for startup is finished */
/* synth_cal_operation_done : Asserted when Synthesizer calibration for operation is finished */
/* rf_bgp_cal_done : Asserted when RF bandgap calibration is finished */
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSTAT_DCO_CAL_DONE_MASK 0x0001
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSTAT_DCO_CAL_DONE_POS  0
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSTAT_IQ_CAL_DONE_MASK 0x0002
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSTAT_IQ_CAL_DONE_POS  1
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSTAT_R_CAL_DONE_MASK 0x0004
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSTAT_R_CAL_DONE_POS  2
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSTAT_RC_CAL_DONE_MASK 0x0008
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSTAT_RC_CAL_DONE_POS  3
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSTAT_KMOD_BAND_CAL_DONE_MASK 0x0010
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSTAT_KMOD_BAND_CAL_DONE_POS  4
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSTAT_KMOD_CHAN_CAL_DONE_MASK 0x0020
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSTAT_KMOD_CHAN_CAL_DONE_POS  5
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSTAT_VCO_CAL_AAC_DONE_MASK 0x0040
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSTAT_VCO_CAL_AAC_DONE_POS  6
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSTAT_VCO_CAL_AFC_DONE_MASK 0x0080
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSTAT_VCO_CAL_AFC_DONE_POS  7
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSTAT_VCO_CAL_DET_DONE_MASK 0x0100
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSTAT_VCO_CAL_DET_DONE_POS  8
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSTAT_PA_CAL_DONE_MASK 0x0200
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSTAT_PA_CAL_DONE_POS  9
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSTAT_SYNTH_CAL_STARTUP_DONE_MASK 0x0400
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSTAT_SYNTH_CAL_STARTUP_DONE_POS  10
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSTAT_SYNTH_CAL_OPERATION_DONE_MASK 0x0800
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSTAT_SYNTH_CAL_OPERATION_DONE_POS  11
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSTAT_RF_BGP_CAL_DONE_MASK 0x1000
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSTAT_RF_BGP_CAL_DONE_POS  12
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int dco_cal_done : 1;
    unsigned int iq_cal_done : 1;
    unsigned int r_cal_done : 1;
    unsigned int rc_cal_done : 1;
    unsigned int kmod_band_cal_done : 1;
    unsigned int kmod_chan_cal_done : 1;
    unsigned int vco_cal_aac_done : 1;
    unsigned int vco_cal_afc_done : 1;
    unsigned int vco_cal_det_done : 1;
    unsigned int pa_cal_done : 1;
    unsigned int synth_cal_startup_done : 1;
    unsigned int synth_cal_operation_done : 1;
    unsigned int rf_bgp_cal_done : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_rfp_tmu_cal_intstat;
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSTAT_RST 0x0
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSTAT_ADDR  0x4001d85c


/* rfp_tmu_cal_intsetstat register */
/*----------------------*/
/* RFP TMU Calibration Interrupt Set. Cannot be written without RX reference clock. Any next write will hang */
/* dco_cal_done : Set event for dco_cal_done */
/* iq_cal_done : Set event for iq_cal_done */
/* r_cal_done : Set event for r_cal_done */
/* rc_cal_done : Set event for rc_cal_done */
/* kmod_band_cal_done : Set event for kmod_band_cal_done */
/* kmod_chan_cal_done : Set event for kmod_chan_cal_done */
/* vco_cal_aac_done : Set event for vco_cal_aac_done */
/* vco_cal_afc_done : Set event for vco_cal_afc_done */
/* vco_cal_det_done : Set event for vco_cal_det_done */
/* pa_cal_done : Set event for pa_cal_done */
/* synth_cal_startup_done : Set event for synth_cal_startup_done */
/* synth_cal_operation_done : Set event for synth_cal_operation_done */
/* rf_bgp_cal_done : Set event for rf_bgp_cal_done */
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSETSTAT_DCO_CAL_DONE_MASK 0x0001
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSETSTAT_DCO_CAL_DONE_POS  0
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSETSTAT_IQ_CAL_DONE_MASK 0x0002
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSETSTAT_IQ_CAL_DONE_POS  1
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSETSTAT_R_CAL_DONE_MASK 0x0004
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSETSTAT_R_CAL_DONE_POS  2
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSETSTAT_RC_CAL_DONE_MASK 0x0008
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSETSTAT_RC_CAL_DONE_POS  3
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSETSTAT_KMOD_BAND_CAL_DONE_MASK 0x0010
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSETSTAT_KMOD_BAND_CAL_DONE_POS  4
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSETSTAT_KMOD_CHAN_CAL_DONE_MASK 0x0020
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSETSTAT_KMOD_CHAN_CAL_DONE_POS  5
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSETSTAT_VCO_CAL_AAC_DONE_MASK 0x0040
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSETSTAT_VCO_CAL_AAC_DONE_POS  6
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSETSTAT_VCO_CAL_AFC_DONE_MASK 0x0080
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSETSTAT_VCO_CAL_AFC_DONE_POS  7
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSETSTAT_VCO_CAL_DET_DONE_MASK 0x0100
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSETSTAT_VCO_CAL_DET_DONE_POS  8
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSETSTAT_PA_CAL_DONE_MASK 0x0200
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSETSTAT_PA_CAL_DONE_POS  9
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSETSTAT_SYNTH_CAL_STARTUP_DONE_MASK 0x0400
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSETSTAT_SYNTH_CAL_STARTUP_DONE_POS  10
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSETSTAT_SYNTH_CAL_OPERATION_DONE_MASK 0x0800
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSETSTAT_SYNTH_CAL_OPERATION_DONE_POS  11
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSETSTAT_RF_BGP_CAL_DONE_MASK 0x1000
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSETSTAT_RF_BGP_CAL_DONE_POS  12
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int dco_cal_done : 1;
    unsigned int iq_cal_done : 1;
    unsigned int r_cal_done : 1;
    unsigned int rc_cal_done : 1;
    unsigned int kmod_band_cal_done : 1;
    unsigned int kmod_chan_cal_done : 1;
    unsigned int vco_cal_aac_done : 1;
    unsigned int vco_cal_afc_done : 1;
    unsigned int vco_cal_det_done : 1;
    unsigned int pa_cal_done : 1;
    unsigned int synth_cal_startup_done : 1;
    unsigned int synth_cal_operation_done : 1;
    unsigned int rf_bgp_cal_done : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_rfp_tmu_cal_intsetstat;
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSETSTAT_RST 0x0
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTSETSTAT_ADDR  0x4001d860


/* rfp_tmu_cal_intclrstat register */
/*----------------------*/
/* RFP TMU Calibration Interrupt clear. Cannot be written without RX reference clock. Any next write will hang */
/* dco_cal_done : Clear event for dco_cal_done */
/* iq_cal_done : Clear event for iq_cal_done */
/* r_cal_done : Clear event for r_cal_done */
/* rc_cal_done : Clear event for rc_cal_done */
/* kmod_band_cal_done : Clear event for kmod_band_cal_done */
/* kmod_chan_cal_done : Clear event for kmod_chan_cal_done */
/* vco_cal_aac_done : Clear event for vco_cal_aac_done */
/* vco_cal_afc_done : Clear event for vco_cal_afc_done */
/* vco_cal_det_done : Clear event for vco_cal_det_done */
/* pa_cal_done : Clear event for pa_cal_done */
/* synth_cal_startup_done : Clear event for synth_cal_startup_done */
/* synth_cal_operation_done : Clear event for synth_cal_operation_done */
/* rf_bgp_cal_done : Clear event for rf_bgp_cal_done */
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTCLRSTAT_DCO_CAL_DONE_MASK 0x0001
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTCLRSTAT_DCO_CAL_DONE_POS  0
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTCLRSTAT_IQ_CAL_DONE_MASK 0x0002
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTCLRSTAT_IQ_CAL_DONE_POS  1
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTCLRSTAT_R_CAL_DONE_MASK 0x0004
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTCLRSTAT_R_CAL_DONE_POS  2
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTCLRSTAT_RC_CAL_DONE_MASK 0x0008
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTCLRSTAT_RC_CAL_DONE_POS  3
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTCLRSTAT_KMOD_BAND_CAL_DONE_MASK 0x0010
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTCLRSTAT_KMOD_BAND_CAL_DONE_POS  4
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTCLRSTAT_KMOD_CHAN_CAL_DONE_MASK 0x0020
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTCLRSTAT_KMOD_CHAN_CAL_DONE_POS  5
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTCLRSTAT_VCO_CAL_AAC_DONE_MASK 0x0040
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTCLRSTAT_VCO_CAL_AAC_DONE_POS  6
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTCLRSTAT_VCO_CAL_AFC_DONE_MASK 0x0080
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTCLRSTAT_VCO_CAL_AFC_DONE_POS  7
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTCLRSTAT_VCO_CAL_DET_DONE_MASK 0x0100
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTCLRSTAT_VCO_CAL_DET_DONE_POS  8
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTCLRSTAT_PA_CAL_DONE_MASK 0x0200
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTCLRSTAT_PA_CAL_DONE_POS  9
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTCLRSTAT_SYNTH_CAL_STARTUP_DONE_MASK 0x0400
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTCLRSTAT_SYNTH_CAL_STARTUP_DONE_POS  10
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTCLRSTAT_SYNTH_CAL_OPERATION_DONE_MASK 0x0800
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTCLRSTAT_SYNTH_CAL_OPERATION_DONE_POS  11
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTCLRSTAT_RF_BGP_CAL_DONE_MASK 0x1000
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTCLRSTAT_RF_BGP_CAL_DONE_POS  12
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int dco_cal_done : 1;
    unsigned int iq_cal_done : 1;
    unsigned int r_cal_done : 1;
    unsigned int rc_cal_done : 1;
    unsigned int kmod_band_cal_done : 1;
    unsigned int kmod_chan_cal_done : 1;
    unsigned int vco_cal_aac_done : 1;
    unsigned int vco_cal_afc_done : 1;
    unsigned int vco_cal_det_done : 1;
    unsigned int pa_cal_done : 1;
    unsigned int synth_cal_startup_done : 1;
    unsigned int synth_cal_operation_done : 1;
    unsigned int rf_bgp_cal_done : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_rfp_tmu_cal_intclrstat;
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTCLRSTAT_RST 0x0
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTCLRSTAT_ADDR  0x4001d864


/* rfp_tmu_cal_inten register */
/*----------------------*/
/* RFP TMU Calibration Interrupt enable */
/* dco_cal_done : Interrupt enable for dco_cal_done */
/* iq_cal_done : Interrupt enable for iq_cal_done */
/* r_cal_done : Interrupt enable for r_cal_done */
/* rc_cal_done : Interrupt enable for rc_cal_done */
/* kmod_band_cal_done : Interrupt enable for kmod_band_cal_done */
/* kmod_chan_cal_done : Interrupt enable for kmod_chan_cal_done */
/* vco_cal_aac_done : Interrupt enable for vco_cal_aac_done */
/* vco_cal_afc_done : Interrupt enable for vco_cal_afc_done */
/* vco_cal_det_done : Interrupt enable for vco_cal_det_done */
/* pa_cal_done : Interrupt enable for pa_cal_done */
/* synth_cal_startup_done : Interrupt enable for synth_cal_startup_done */
/* synth_cal_operation_done : Interrupt enable for synth_cal_operation_done */
/* rf_bgp_cal_done : Interrupt enable for rf_bgp_cal_done */
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTEN_DCO_CAL_DONE_MASK 0x0001
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTEN_DCO_CAL_DONE_POS  0
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTEN_IQ_CAL_DONE_MASK 0x0002
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTEN_IQ_CAL_DONE_POS  1
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTEN_R_CAL_DONE_MASK 0x0004
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTEN_R_CAL_DONE_POS  2
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTEN_RC_CAL_DONE_MASK 0x0008
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTEN_RC_CAL_DONE_POS  3
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTEN_KMOD_BAND_CAL_DONE_MASK 0x0010
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTEN_KMOD_BAND_CAL_DONE_POS  4
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTEN_KMOD_CHAN_CAL_DONE_MASK 0x0020
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTEN_KMOD_CHAN_CAL_DONE_POS  5
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTEN_VCO_CAL_AAC_DONE_MASK 0x0040
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTEN_VCO_CAL_AAC_DONE_POS  6
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTEN_VCO_CAL_AFC_DONE_MASK 0x0080
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTEN_VCO_CAL_AFC_DONE_POS  7
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTEN_VCO_CAL_DET_DONE_MASK 0x0100
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTEN_VCO_CAL_DET_DONE_POS  8
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTEN_PA_CAL_DONE_MASK 0x0200
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTEN_PA_CAL_DONE_POS  9
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTEN_SYNTH_CAL_STARTUP_DONE_MASK 0x0400
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTEN_SYNTH_CAL_STARTUP_DONE_POS  10
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTEN_SYNTH_CAL_OPERATION_DONE_MASK 0x0800
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTEN_SYNTH_CAL_OPERATION_DONE_POS  11
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTEN_RF_BGP_CAL_DONE_MASK 0x1000
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTEN_RF_BGP_CAL_DONE_POS  12
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int dco_cal_done : 1;
    unsigned int iq_cal_done : 1;
    unsigned int r_cal_done : 1;
    unsigned int rc_cal_done : 1;
    unsigned int kmod_band_cal_done : 1;
    unsigned int kmod_chan_cal_done : 1;
    unsigned int vco_cal_aac_done : 1;
    unsigned int vco_cal_afc_done : 1;
    unsigned int vco_cal_det_done : 1;
    unsigned int pa_cal_done : 1;
    unsigned int synth_cal_startup_done : 1;
    unsigned int synth_cal_operation_done : 1;
    unsigned int rf_bgp_cal_done : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_rfp_tmu_cal_inten;
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTEN_RST 0x0
#define EXTAPB_REGFILE_TMU_RFP_TMU_CAL_INTEN_ADDR  0x4001d868


/* triggers register */
/*----------------------*/
/* Triggers timing critical signals */
/* pre_start : Register access to generate an equivalent rising edge of the phyon input signal. */
/* packet_start : Register access to generate an equivalent rising edge of the packet_start input signal. */
/* abort : Register access to generate an equivalent rising edge of the ABORT input signal. */
/* power_down : Register access to trigger the power down sequence from the TMU. */
/* power_up_tx : Register access to trigger the power up sequence of the grp_tx_sig_out signals */
/* power_down_tx : Register access to trigger the power down sequence of the grp_tx_sig_out signals */
/* power_up_rx : Register access to trigger the power up sequence of the grp_rx_sig_out signals */
/* power_down_rx : Register access to trigger the power down sequence of the grp_rx_sig_out signals */
/* packet_done : Register access to generate an equivalent falling edge of the phyon input signal. */
/* pa_start : Register access to start the PA. */
/* pa_end : Register access to end the PA. */
#define EXTAPB_REGFILE_TMU_TRIGGERS_PRE_START_MASK 0x0001
#define EXTAPB_REGFILE_TMU_TRIGGERS_PRE_START_POS  0
#define EXTAPB_REGFILE_TMU_TRIGGERS_PRE_START_EN 1
#define EXTAPB_REGFILE_TMU_TRIGGERS_PRE_START_EN_MASK 0x1
#define EXTAPB_REGFILE_TMU_TRIGGERS_PRE_START_DIS 0
#define EXTAPB_REGFILE_TMU_TRIGGERS_PRE_START_DIS_MASK 0x0
#define EXTAPB_REGFILE_TMU_TRIGGERS_PACKET_START_MASK 0x0002
#define EXTAPB_REGFILE_TMU_TRIGGERS_PACKET_START_POS  1
#define EXTAPB_REGFILE_TMU_TRIGGERS_PACKET_START_EN 1
#define EXTAPB_REGFILE_TMU_TRIGGERS_PACKET_START_EN_MASK 0x2
#define EXTAPB_REGFILE_TMU_TRIGGERS_PACKET_START_DIS 0
#define EXTAPB_REGFILE_TMU_TRIGGERS_PACKET_START_DIS_MASK 0x0
#define EXTAPB_REGFILE_TMU_TRIGGERS_ABORT_MASK 0x0004
#define EXTAPB_REGFILE_TMU_TRIGGERS_ABORT_POS  2
#define EXTAPB_REGFILE_TMU_TRIGGERS_ABORT_EN 1
#define EXTAPB_REGFILE_TMU_TRIGGERS_ABORT_EN_MASK 0x4
#define EXTAPB_REGFILE_TMU_TRIGGERS_ABORT_DIS 0
#define EXTAPB_REGFILE_TMU_TRIGGERS_ABORT_DIS_MASK 0x0
#define EXTAPB_REGFILE_TMU_TRIGGERS_POWER_DOWN_MASK 0x0008
#define EXTAPB_REGFILE_TMU_TRIGGERS_POWER_DOWN_POS  3
#define EXTAPB_REGFILE_TMU_TRIGGERS_POWER_DOWN_EN 1
#define EXTAPB_REGFILE_TMU_TRIGGERS_POWER_DOWN_EN_MASK 0x8
#define EXTAPB_REGFILE_TMU_TRIGGERS_POWER_DOWN_DIS 0
#define EXTAPB_REGFILE_TMU_TRIGGERS_POWER_DOWN_DIS_MASK 0x0
#define EXTAPB_REGFILE_TMU_TRIGGERS_POWER_UP_TX_MASK 0x0010
#define EXTAPB_REGFILE_TMU_TRIGGERS_POWER_UP_TX_POS  4
#define EXTAPB_REGFILE_TMU_TRIGGERS_POWER_UP_TX_EN 1
#define EXTAPB_REGFILE_TMU_TRIGGERS_POWER_UP_TX_EN_MASK 0x10
#define EXTAPB_REGFILE_TMU_TRIGGERS_POWER_UP_TX_DIS 0
#define EXTAPB_REGFILE_TMU_TRIGGERS_POWER_UP_TX_DIS_MASK 0x0
#define EXTAPB_REGFILE_TMU_TRIGGERS_POWER_DOWN_TX_MASK 0x0020
#define EXTAPB_REGFILE_TMU_TRIGGERS_POWER_DOWN_TX_POS  5
#define EXTAPB_REGFILE_TMU_TRIGGERS_POWER_DOWN_TX_EN 1
#define EXTAPB_REGFILE_TMU_TRIGGERS_POWER_DOWN_TX_EN_MASK 0x20
#define EXTAPB_REGFILE_TMU_TRIGGERS_POWER_DOWN_TX_DIS 0
#define EXTAPB_REGFILE_TMU_TRIGGERS_POWER_DOWN_TX_DIS_MASK 0x0
#define EXTAPB_REGFILE_TMU_TRIGGERS_POWER_UP_RX_MASK 0x0040
#define EXTAPB_REGFILE_TMU_TRIGGERS_POWER_UP_RX_POS  6
#define EXTAPB_REGFILE_TMU_TRIGGERS_POWER_UP_RX_EN 1
#define EXTAPB_REGFILE_TMU_TRIGGERS_POWER_UP_RX_EN_MASK 0x40
#define EXTAPB_REGFILE_TMU_TRIGGERS_POWER_UP_RX_DIS 0
#define EXTAPB_REGFILE_TMU_TRIGGERS_POWER_UP_RX_DIS_MASK 0x0
#define EXTAPB_REGFILE_TMU_TRIGGERS_POWER_DOWN_RX_MASK 0x0080
#define EXTAPB_REGFILE_TMU_TRIGGERS_POWER_DOWN_RX_POS  7
#define EXTAPB_REGFILE_TMU_TRIGGERS_POWER_DOWN_RX_EN 1
#define EXTAPB_REGFILE_TMU_TRIGGERS_POWER_DOWN_RX_EN_MASK 0x80
#define EXTAPB_REGFILE_TMU_TRIGGERS_POWER_DOWN_RX_DIS 0
#define EXTAPB_REGFILE_TMU_TRIGGERS_POWER_DOWN_RX_DIS_MASK 0x0
#define EXTAPB_REGFILE_TMU_TRIGGERS_PACKET_DONE_MASK 0x0100
#define EXTAPB_REGFILE_TMU_TRIGGERS_PACKET_DONE_POS  8
#define EXTAPB_REGFILE_TMU_TRIGGERS_PACKET_DONE_EN 1
#define EXTAPB_REGFILE_TMU_TRIGGERS_PACKET_DONE_EN_MASK 0x100
#define EXTAPB_REGFILE_TMU_TRIGGERS_PACKET_DONE_DIS 0
#define EXTAPB_REGFILE_TMU_TRIGGERS_PACKET_DONE_DIS_MASK 0x0
#define EXTAPB_REGFILE_TMU_TRIGGERS_PA_START_MASK 0x0200
#define EXTAPB_REGFILE_TMU_TRIGGERS_PA_START_POS  9
#define EXTAPB_REGFILE_TMU_TRIGGERS_PA_START_EN 1
#define EXTAPB_REGFILE_TMU_TRIGGERS_PA_START_EN_MASK 0x200
#define EXTAPB_REGFILE_TMU_TRIGGERS_PA_START_DIS 0
#define EXTAPB_REGFILE_TMU_TRIGGERS_PA_START_DIS_MASK 0x0
#define EXTAPB_REGFILE_TMU_TRIGGERS_PA_END_MASK 0x0400
#define EXTAPB_REGFILE_TMU_TRIGGERS_PA_END_POS  10
#define EXTAPB_REGFILE_TMU_TRIGGERS_PA_END_EN 1
#define EXTAPB_REGFILE_TMU_TRIGGERS_PA_END_EN_MASK 0x400
#define EXTAPB_REGFILE_TMU_TRIGGERS_PA_END_DIS 0
#define EXTAPB_REGFILE_TMU_TRIGGERS_PA_END_DIS_MASK 0x0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pre_start : 1;
    unsigned int packet_start : 1;
    unsigned int abort : 1;
    unsigned int power_down : 1;
    unsigned int power_up_tx : 1;
    unsigned int power_down_tx : 1;
    unsigned int power_up_rx : 1;
    unsigned int power_down_rx : 1;
    unsigned int packet_done : 1;
    unsigned int pa_start : 1;
    unsigned int pa_end : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_triggers;
#define EXTAPB_REGFILE_TMU_TRIGGERS_RST 0x0
#define EXTAPB_REGFILE_TMU_TRIGGERS_ADDR  0x4001d86c


/* cal_triggers register */
/*----------------------*/
/* Triggers calibration enable signals */
/* vco_cal_afc_en : Enable automatic frequency calibration (AFC) */
/* vco_cal_afc_abort : Disable automatic frequency calibration (AFC) */
/* vco_cal_aac_en : Enable amplitude loop */
/* vco_cal_aac_abort : Disable amplitude loop */
/* vco_cal_det_en : Enable out-of-range measurement */
/* vco_cal_det_abort : Disable out-of-range measurement */
/* dco_cal_en : Enable DC Offset calibration */
/* iq_cal_en : Enable IQ Mismatch calibration */
/* r_cal_en : Enable R Calibration */
/* r_cal_abort : Disable R Calibration */
/* rc_cal_en : Enable RC Calibration */
/* rc_cal_abort : Disable RC Calibration */
/* pa_cal_en : Enable PA calibration */
/* pa_cal_abort : Disable PA calibration */
/* pa_cal_coeff_calc_en : Enable PA calibration coefficient calculation */
/* rf_bgp_cal_en : Enable RF bandbap calibration */
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_VCO_CAL_AFC_EN_MASK 0x0001
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_VCO_CAL_AFC_EN_POS  0
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_VCO_CAL_AFC_EN_HIGH 1
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_VCO_CAL_AFC_EN_HIGH_MASK 0x1
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_VCO_CAL_AFC_EN_LOW 0
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_VCO_CAL_AFC_EN_LOW_MASK 0x0
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_VCO_CAL_AFC_ABORT_MASK 0x0002
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_VCO_CAL_AFC_ABORT_POS  1
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_VCO_CAL_AFC_ABORT_HIGH 1
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_VCO_CAL_AFC_ABORT_HIGH_MASK 0x2
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_VCO_CAL_AFC_ABORT_LOW 0
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_VCO_CAL_AFC_ABORT_LOW_MASK 0x0
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_VCO_CAL_AAC_EN_MASK 0x0004
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_VCO_CAL_AAC_EN_POS  2
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_VCO_CAL_AAC_EN_HIGH 1
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_VCO_CAL_AAC_EN_HIGH_MASK 0x4
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_VCO_CAL_AAC_EN_LOW 0
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_VCO_CAL_AAC_EN_LOW_MASK 0x0
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_VCO_CAL_AAC_ABORT_MASK 0x0008
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_VCO_CAL_AAC_ABORT_POS  3
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_VCO_CAL_AAC_ABORT_HIGH 1
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_VCO_CAL_AAC_ABORT_HIGH_MASK 0x8
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_VCO_CAL_AAC_ABORT_LOW 0
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_VCO_CAL_AAC_ABORT_LOW_MASK 0x0
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_VCO_CAL_DET_EN_MASK 0x0010
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_VCO_CAL_DET_EN_POS  4
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_VCO_CAL_DET_EN_HIGH 1
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_VCO_CAL_DET_EN_HIGH_MASK 0x10
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_VCO_CAL_DET_EN_LOW 0
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_VCO_CAL_DET_EN_LOW_MASK 0x0
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_VCO_CAL_DET_ABORT_MASK 0x0020
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_VCO_CAL_DET_ABORT_POS  5
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_VCO_CAL_DET_ABORT_HIGH 1
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_VCO_CAL_DET_ABORT_HIGH_MASK 0x20
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_VCO_CAL_DET_ABORT_LOW 0
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_VCO_CAL_DET_ABORT_LOW_MASK 0x0
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_DCO_CAL_EN_MASK 0x0040
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_DCO_CAL_EN_POS  6
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_DCO_CAL_EN_HIGH 1
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_DCO_CAL_EN_HIGH_MASK 0x40
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_DCO_CAL_EN_LOW 0
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_DCO_CAL_EN_LOW_MASK 0x0
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_IQ_CAL_EN_MASK 0x0080
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_IQ_CAL_EN_POS  7
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_IQ_CAL_EN_HIGH 1
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_IQ_CAL_EN_HIGH_MASK 0x80
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_IQ_CAL_EN_LOW 0
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_IQ_CAL_EN_LOW_MASK 0x0
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_R_CAL_EN_MASK 0x0100
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_R_CAL_EN_POS  8
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_R_CAL_EN_HIGH 1
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_R_CAL_EN_HIGH_MASK 0x100
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_R_CAL_EN_LOW 0
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_R_CAL_EN_LOW_MASK 0x0
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_R_CAL_ABORT_MASK 0x0200
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_R_CAL_ABORT_POS  9
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_R_CAL_ABORT_HIGH 1
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_R_CAL_ABORT_HIGH_MASK 0x200
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_R_CAL_ABORT_LOW 0
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_R_CAL_ABORT_LOW_MASK 0x0
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_RC_CAL_EN_MASK 0x0400
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_RC_CAL_EN_POS  10
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_RC_CAL_EN_HIGH 1
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_RC_CAL_EN_HIGH_MASK 0x400
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_RC_CAL_EN_LOW 0
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_RC_CAL_EN_LOW_MASK 0x0
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_RC_CAL_ABORT_MASK 0x0800
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_RC_CAL_ABORT_POS  11
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_RC_CAL_ABORT_HIGH 1
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_RC_CAL_ABORT_HIGH_MASK 0x800
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_RC_CAL_ABORT_LOW 0
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_RC_CAL_ABORT_LOW_MASK 0x0
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_PA_CAL_EN_MASK 0x1000
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_PA_CAL_EN_POS  12
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_PA_CAL_EN_HIGH 1
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_PA_CAL_EN_HIGH_MASK 0x1000
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_PA_CAL_EN_LOW 0
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_PA_CAL_EN_LOW_MASK 0x0
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_PA_CAL_ABORT_MASK 0x2000
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_PA_CAL_ABORT_POS  13
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_PA_CAL_ABORT_HIGH 1
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_PA_CAL_ABORT_HIGH_MASK 0x2000
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_PA_CAL_ABORT_LOW 0
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_PA_CAL_ABORT_LOW_MASK 0x0
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_PA_CAL_COEFF_CALC_EN_MASK 0x4000
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_PA_CAL_COEFF_CALC_EN_POS  14
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_PA_CAL_COEFF_CALC_EN_HIGH 1
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_PA_CAL_COEFF_CALC_EN_HIGH_MASK 0x4000
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_PA_CAL_COEFF_CALC_EN_LOW 0
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_PA_CAL_COEFF_CALC_EN_LOW_MASK 0x0
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_RF_BGP_CAL_EN_MASK 0x8000
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_RF_BGP_CAL_EN_POS  15
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_RF_BGP_CAL_EN_HIGH 1
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_RF_BGP_CAL_EN_HIGH_MASK 0x8000
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_RF_BGP_CAL_EN_LOW 0
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_RF_BGP_CAL_EN_LOW_MASK 0x0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int vco_cal_afc_en : 1;
    unsigned int vco_cal_afc_abort : 1;
    unsigned int vco_cal_aac_en : 1;
    unsigned int vco_cal_aac_abort : 1;
    unsigned int vco_cal_det_en : 1;
    unsigned int vco_cal_det_abort : 1;
    unsigned int dco_cal_en : 1;
    unsigned int iq_cal_en : 1;
    unsigned int r_cal_en : 1;
    unsigned int r_cal_abort : 1;
    unsigned int rc_cal_en : 1;
    unsigned int rc_cal_abort : 1;
    unsigned int pa_cal_en : 1;
    unsigned int pa_cal_abort : 1;
    unsigned int pa_cal_coeff_calc_en : 1;
    unsigned int rf_bgp_cal_en : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_cal_triggers;
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_RST 0x0
#define EXTAPB_REGFILE_TMU_CAL_TRIGGERS_ADDR  0x4001d870


/* kmod_cal_triggers register */
/*----------------------*/
/* Triggers KMod calibration */
/* kmod_band_cal_en : Enable KMod pre calibration */
/* kmod_band_cal_abort : Disable KMod pre calibration */
/* kmod_chan_cal_en : Enable KMod post calibration */
/* kmod_chan_cal_abort : Disable KMod post calibration */
#define EXTAPB_REGFILE_TMU_KMOD_CAL_TRIGGERS_KMOD_BAND_CAL_EN_MASK 0x0001
#define EXTAPB_REGFILE_TMU_KMOD_CAL_TRIGGERS_KMOD_BAND_CAL_EN_POS  0
#define EXTAPB_REGFILE_TMU_KMOD_CAL_TRIGGERS_KMOD_BAND_CAL_EN_HIGH 1
#define EXTAPB_REGFILE_TMU_KMOD_CAL_TRIGGERS_KMOD_BAND_CAL_EN_HIGH_MASK 0x1
#define EXTAPB_REGFILE_TMU_KMOD_CAL_TRIGGERS_KMOD_BAND_CAL_EN_LOW 0
#define EXTAPB_REGFILE_TMU_KMOD_CAL_TRIGGERS_KMOD_BAND_CAL_EN_LOW_MASK 0x0
#define EXTAPB_REGFILE_TMU_KMOD_CAL_TRIGGERS_KMOD_BAND_CAL_ABORT_MASK 0x0002
#define EXTAPB_REGFILE_TMU_KMOD_CAL_TRIGGERS_KMOD_BAND_CAL_ABORT_POS  1
#define EXTAPB_REGFILE_TMU_KMOD_CAL_TRIGGERS_KMOD_BAND_CAL_ABORT_HIGH 1
#define EXTAPB_REGFILE_TMU_KMOD_CAL_TRIGGERS_KMOD_BAND_CAL_ABORT_HIGH_MASK 0x2
#define EXTAPB_REGFILE_TMU_KMOD_CAL_TRIGGERS_KMOD_BAND_CAL_ABORT_LOW 0
#define EXTAPB_REGFILE_TMU_KMOD_CAL_TRIGGERS_KMOD_BAND_CAL_ABORT_LOW_MASK 0x0
#define EXTAPB_REGFILE_TMU_KMOD_CAL_TRIGGERS_KMOD_CHAN_CAL_EN_MASK 0x0004
#define EXTAPB_REGFILE_TMU_KMOD_CAL_TRIGGERS_KMOD_CHAN_CAL_EN_POS  2
#define EXTAPB_REGFILE_TMU_KMOD_CAL_TRIGGERS_KMOD_CHAN_CAL_EN_HIGH 1
#define EXTAPB_REGFILE_TMU_KMOD_CAL_TRIGGERS_KMOD_CHAN_CAL_EN_HIGH_MASK 0x4
#define EXTAPB_REGFILE_TMU_KMOD_CAL_TRIGGERS_KMOD_CHAN_CAL_EN_LOW 0
#define EXTAPB_REGFILE_TMU_KMOD_CAL_TRIGGERS_KMOD_CHAN_CAL_EN_LOW_MASK 0x0
#define EXTAPB_REGFILE_TMU_KMOD_CAL_TRIGGERS_KMOD_CHAN_CAL_ABORT_MASK 0x0008
#define EXTAPB_REGFILE_TMU_KMOD_CAL_TRIGGERS_KMOD_CHAN_CAL_ABORT_POS  3
#define EXTAPB_REGFILE_TMU_KMOD_CAL_TRIGGERS_KMOD_CHAN_CAL_ABORT_HIGH 1
#define EXTAPB_REGFILE_TMU_KMOD_CAL_TRIGGERS_KMOD_CHAN_CAL_ABORT_HIGH_MASK 0x8
#define EXTAPB_REGFILE_TMU_KMOD_CAL_TRIGGERS_KMOD_CHAN_CAL_ABORT_LOW 0
#define EXTAPB_REGFILE_TMU_KMOD_CAL_TRIGGERS_KMOD_CHAN_CAL_ABORT_LOW_MASK 0x0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int kmod_band_cal_en : 1;
    unsigned int kmod_band_cal_abort : 1;
    unsigned int kmod_chan_cal_en : 1;
    unsigned int kmod_chan_cal_abort : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_kmod_cal_triggers;
#define EXTAPB_REGFILE_TMU_KMOD_CAL_TRIGGERS_RST 0x0
#define EXTAPB_REGFILE_TMU_KMOD_CAL_TRIGGERS_ADDR  0x4001d874


/* synth_cal_triggers register */
/*----------------------*/
/* Triggers for synthesizer calibration */
/* synth_cal_startup_start : Triggers the start of the synthesizer calibration for startup */
/* synth_cal_startup_abort : Aborts (ongoing) synthesizer calibration for startup. */
/* synth_cal_operation_start : Triggers the start of the synthesizer calibration during operation. */
/* synth_cal_operation_abort : Aborts (ongoing) synthesizer calibration during operation. */
/* synth_cal_locking_sequence_start : Triggers the start of the locking sequence (independent from the synth calibration for operation */
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_TRIGGERS_SYNTH_CAL_STARTUP_START_MASK 0x0001
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_TRIGGERS_SYNTH_CAL_STARTUP_START_POS  0
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_TRIGGERS_SYNTH_CAL_STARTUP_START_HIGH 1
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_TRIGGERS_SYNTH_CAL_STARTUP_START_HIGH_MASK 0x1
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_TRIGGERS_SYNTH_CAL_STARTUP_START_LOW 0
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_TRIGGERS_SYNTH_CAL_STARTUP_START_LOW_MASK 0x0
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_TRIGGERS_SYNTH_CAL_STARTUP_ABORT_MASK 0x0002
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_TRIGGERS_SYNTH_CAL_STARTUP_ABORT_POS  1
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_TRIGGERS_SYNTH_CAL_STARTUP_ABORT_HIGH 1
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_TRIGGERS_SYNTH_CAL_STARTUP_ABORT_HIGH_MASK 0x2
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_TRIGGERS_SYNTH_CAL_STARTUP_ABORT_LOW 0
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_TRIGGERS_SYNTH_CAL_STARTUP_ABORT_LOW_MASK 0x0
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_TRIGGERS_SYNTH_CAL_OPERATION_START_MASK 0x0004
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_TRIGGERS_SYNTH_CAL_OPERATION_START_POS  2
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_TRIGGERS_SYNTH_CAL_OPERATION_START_HIGH 1
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_TRIGGERS_SYNTH_CAL_OPERATION_START_HIGH_MASK 0x4
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_TRIGGERS_SYNTH_CAL_OPERATION_START_LOW 0
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_TRIGGERS_SYNTH_CAL_OPERATION_START_LOW_MASK 0x0
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_TRIGGERS_SYNTH_CAL_OPERATION_ABORT_MASK 0x0008
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_TRIGGERS_SYNTH_CAL_OPERATION_ABORT_POS  3
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_TRIGGERS_SYNTH_CAL_OPERATION_ABORT_HIGH 1
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_TRIGGERS_SYNTH_CAL_OPERATION_ABORT_HIGH_MASK 0x8
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_TRIGGERS_SYNTH_CAL_OPERATION_ABORT_LOW 0
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_TRIGGERS_SYNTH_CAL_OPERATION_ABORT_LOW_MASK 0x0
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_TRIGGERS_SYNTH_CAL_LOCKING_SEQUENCE_START_MASK 0x0010
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_TRIGGERS_SYNTH_CAL_LOCKING_SEQUENCE_START_POS  4
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_TRIGGERS_SYNTH_CAL_LOCKING_SEQUENCE_START_HIGH 1
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_TRIGGERS_SYNTH_CAL_LOCKING_SEQUENCE_START_HIGH_MASK 0x10
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_TRIGGERS_SYNTH_CAL_LOCKING_SEQUENCE_START_LOW 0
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_TRIGGERS_SYNTH_CAL_LOCKING_SEQUENCE_START_LOW_MASK 0x0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int synth_cal_startup_start : 1;
    unsigned int synth_cal_startup_abort : 1;
    unsigned int synth_cal_operation_start : 1;
    unsigned int synth_cal_operation_abort : 1;
    unsigned int synth_cal_locking_sequence_start : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_synth_cal_triggers;
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_TRIGGERS_RST 0x0
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_TRIGGERS_ADDR  0x4001d878


/* synth_cal_cfg register */
/*----------------------*/
/* Parameters for syntesizer calibration. */
/* pll_vco_ff_amp_cor : When 1, the feedforward amplitude correction is enabled. */
/* redo_aafc : When 1, the AAFC is re-run during synthesizer calibration during operation. */
/* aac_active : When 1, the AAC is re-run after pre-charge (when redo_aafc = 0 and pll_vco_ff_amp_cor = 0) */
/* pll_lock_aac_pch_active : When 1, pre-chare during PLL locking sequence is enabled. */
/* pll_lock_aac_lock_active : When 1, AAC during pll locking sequence is enabled. */
/* pll_lock_pa_rampup_active : When 1, PLL locking sequence is launched at start PA rampup */
/* pll_lock_tx3_active : When 1, PLL locking sequence is launched at assertion TX3 group signal */
/* pll_vtune_hold_en : When 1,during VCO coarse calibration the hold value for the PLL vtune settings are extended till the end of the VCO coarse calibration. When 0, the PLL vtune settings are reset after the AFC2 loop is finished */
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_CFG_PLL_VCO_FF_AMP_COR_MASK 0x0001
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_CFG_PLL_VCO_FF_AMP_COR_POS  0
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_CFG_REDO_AAFC_MASK 0x0002
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_CFG_REDO_AAFC_POS  1
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_CFG_AAC_ACTIVE_MASK 0x0004
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_CFG_AAC_ACTIVE_POS  2
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_CFG_PLL_LOCK_AAC_PCH_ACTIVE_MASK 0x0008
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_CFG_PLL_LOCK_AAC_PCH_ACTIVE_POS  3
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_CFG_PLL_LOCK_AAC_LOCK_ACTIVE_MASK 0x0010
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_CFG_PLL_LOCK_AAC_LOCK_ACTIVE_POS  4
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_CFG_PLL_LOCK_PA_RAMPUP_ACTIVE_MASK 0x0020
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_CFG_PLL_LOCK_PA_RAMPUP_ACTIVE_POS  5
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_CFG_PLL_LOCK_TX3_ACTIVE_MASK 0x0040
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_CFG_PLL_LOCK_TX3_ACTIVE_POS  6
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_CFG_PLL_VTUNE_HOLD_EN_MASK 0x0080
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_CFG_PLL_VTUNE_HOLD_EN_POS  7
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_vco_ff_amp_cor : 1;
    unsigned int redo_aafc : 1;
    unsigned int aac_active : 1;
    unsigned int pll_lock_aac_pch_active : 1;
    unsigned int pll_lock_aac_lock_active : 1;
    unsigned int pll_lock_pa_rampup_active : 1;
    unsigned int pll_lock_tx3_active : 1;
    unsigned int pll_vtune_hold_en : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_synth_cal_cfg;
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_CFG_RST 0x40
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_CFG_ADDR  0x4001d87c


/* cal_mode register */
/*----------------------*/
/* Specifies calibration modes */
/* dco_cal_mode : DC Offset calibration mode */
/* iq_cal_mode : IQ mismatch calibration mode */
#define EXTAPB_REGFILE_TMU_CAL_MODE_DCO_CAL_MODE_MASK 0x0003
#define EXTAPB_REGFILE_TMU_CAL_MODE_DCO_CAL_MODE_POS  0
#define EXTAPB_REGFILE_TMU_CAL_MODE_DCO_CAL_MODE_COARSE_ONLY 0
#define EXTAPB_REGFILE_TMU_CAL_MODE_DCO_CAL_MODE_COARSE_ONLY_MASK 0x0
#define EXTAPB_REGFILE_TMU_CAL_MODE_DCO_CAL_MODE_FINE_ONLY 1
#define EXTAPB_REGFILE_TMU_CAL_MODE_DCO_CAL_MODE_FINE_ONLY_MASK 0x1
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
#define EXTAPB_REGFILE_TMU_CAL_MODE_DCO_CAL_MODE_COARSE_FINE 2
#define EXTAPB_REGFILE_TMU_CAL_MODE_DCO_CAL_MODE_COARSE_FINE_MASK 0x2
#else
#define EXTAPB_REGFILE_TMU_CAL_MODE_DCO_CAL_MODE_0 2
#define EXTAPB_REGFILE_TMU_CAL_MODE_DCO_CAL_MODE_0_MASK 0x2
#endif
#define EXTAPB_REGFILE_TMU_CAL_MODE_IQ_CAL_MODE_MASK 0x000c
#define EXTAPB_REGFILE_TMU_CAL_MODE_IQ_CAL_MODE_POS  2
#define EXTAPB_REGFILE_TMU_CAL_MODE_IQ_CAL_MODE_PHASE_ONLY 0
#define EXTAPB_REGFILE_TMU_CAL_MODE_IQ_CAL_MODE_PHASE_ONLY_MASK 0x0
#define EXTAPB_REGFILE_TMU_CAL_MODE_IQ_CAL_MODE_MAG_ONLY 1
#define EXTAPB_REGFILE_TMU_CAL_MODE_IQ_CAL_MODE_MAG_ONLY_MASK 0x4
#define EXTAPB_REGFILE_TMU_CAL_MODE_IQ_CAL_MODE_PHASE_MAG 2
#define EXTAPB_REGFILE_TMU_CAL_MODE_IQ_CAL_MODE_PHASE_MAG_MASK 0x8
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int dco_cal_mode : 2;
    unsigned int iq_cal_mode : 2;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_cal_mode;
#define EXTAPB_REGFILE_TMU_CAL_MODE_RST 0x0
#define EXTAPB_REGFILE_TMU_CAL_MODE_ADDR  0x4001d880


/* synth_cal_pll_vco_rst_window register */
/*----------------------*/
/* Duration of the PLL VCO reset pulse at the start of the synthesizer calibration for startup (expressed in 0.5 us) */
/* pll_vco_rst_window : See register description */
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_PLL_VCO_RST_WINDOW_PLL_VCO_RST_WINDOW_MASK 0x03ff
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_PLL_VCO_RST_WINDOW_PLL_VCO_RST_WINDOW_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pll_vco_rst_window : 10;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_synth_cal_pll_vco_rst_window;
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_PLL_VCO_RST_WINDOW_RST 0x2
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_PLL_VCO_RST_WINDOW_ADDR  0x4001d884


/* synth_cal_pll_lock_aac_pch_treshold register */
/*----------------------*/
/* Timer value to start the pre charge during the PLL locking sequence (expressed in 0.5 us) */
/* aac_pch_treshold : See register description. */
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_PLL_LOCK_AAC_PCH_TRESHOLD_AAC_PCH_TRESHOLD_MASK 0x03ff
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_PLL_LOCK_AAC_PCH_TRESHOLD_AAC_PCH_TRESHOLD_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int aac_pch_treshold : 10;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_synth_cal_pll_lock_aac_pch_treshold;
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_PLL_LOCK_AAC_PCH_TRESHOLD_RST 0x0
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_PLL_LOCK_AAC_PCH_TRESHOLD_ADDR  0x4001d888


/* synth_cal_pll_lock_aac_lock_treshold register */
/*----------------------*/
/* Timer value to start the AAC during the PLL locking sequence (expressed in 0.5 us) */
/* aac_lock_treshold : See register description. */
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_PLL_LOCK_AAC_LOCK_TRESHOLD_AAC_LOCK_TRESHOLD_MASK 0x03ff
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_PLL_LOCK_AAC_LOCK_TRESHOLD_AAC_LOCK_TRESHOLD_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int aac_lock_treshold : 10;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_synth_cal_pll_lock_aac_lock_treshold;
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_PLL_LOCK_AAC_LOCK_TRESHOLD_RST 0x0
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_PLL_LOCK_AAC_LOCK_TRESHOLD_ADDR  0x4001d88c


/* synth_cal_pll_lock_treshold_1 register */
/*----------------------*/
/* Timer value to start first loop of PLL locking sequence (Expressed in 0.5 us) */
/* lock_treshold_1 : See register description. */
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_PLL_LOCK_TRESHOLD_1_LOCK_TRESHOLD_1_MASK 0x03ff
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_PLL_LOCK_TRESHOLD_1_LOCK_TRESHOLD_1_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int lock_treshold_1 : 10;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_synth_cal_pll_lock_treshold_1;
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_PLL_LOCK_TRESHOLD_1_RST 0x14
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_PLL_LOCK_TRESHOLD_1_ADDR  0x4001d890


/* synth_cal_pll_lock_treshold_2 register */
/*----------------------*/
/* Timer value to start second loop of PLL locking sequence (Expressed in 0.5 us) */
/* lock_treshold_2 : See register description. */
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_PLL_LOCK_TRESHOLD_2_LOCK_TRESHOLD_2_MASK 0x03ff
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_PLL_LOCK_TRESHOLD_2_LOCK_TRESHOLD_2_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int lock_treshold_2 : 10;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_synth_cal_pll_lock_treshold_2;
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_PLL_LOCK_TRESHOLD_2_RST 0x28
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_PLL_LOCK_TRESHOLD_2_ADDR  0x4001d894


/* synth_cal_pll_lock_treshold_3 register */
/*----------------------*/
/* Timer value to start third loop of PLL locking sequence (Expressed in 0.5 us) */
/* lock_treshold_3 : See register description. */
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_PLL_LOCK_TRESHOLD_3_LOCK_TRESHOLD_3_MASK 0x03ff
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_PLL_LOCK_TRESHOLD_3_LOCK_TRESHOLD_3_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int lock_treshold_3 : 10;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_synth_cal_pll_lock_treshold_3;
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_PLL_LOCK_TRESHOLD_3_RST 0x3c
#define EXTAPB_REGFILE_TMU_SYNTH_CAL_PLL_LOCK_TRESHOLD_3_ADDR  0x4001d898


/* dco_cal_gain_switch_settling_time register */
/*----------------------*/
/* During dc-offset calibration the analog gain is switched in between every measurement. The analog circuits are allowed to switch and settle before actualy measuring the dco offset. Unit is 16 MHz clock cycle (62.5 ns) */
/* dco_cal_settling_time : See register description */
#define EXTAPB_REGFILE_TMU_DCO_CAL_GAIN_SWITCH_SETTLING_TIME_DCO_CAL_SETTLING_TIME_MASK 0xffff
#define EXTAPB_REGFILE_TMU_DCO_CAL_GAIN_SWITCH_SETTLING_TIME_DCO_CAL_SETTLING_TIME_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int dco_cal_settling_time : 16;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_dco_cal_gain_switch_settling_time;
#define EXTAPB_REGFILE_TMU_DCO_CAL_GAIN_SWITCH_SETTLING_TIME_RST 0x1
#define EXTAPB_REGFILE_TMU_DCO_CAL_GAIN_SWITCH_SETTLING_TIME_ADDR  0x4001d89c


/* dco_cal_fine_cal_pause register */
/*----------------------*/
/* Delay between coarse and fine DC offset calibration to allow the applied coarse offset to have its effect. Unit is 0.5 us */
/* dc_fine_cal_pause : See register description */
#define EXTAPB_REGFILE_TMU_DCO_CAL_FINE_CAL_PAUSE_DC_FINE_CAL_PAUSE_MASK 0xffff
#define EXTAPB_REGFILE_TMU_DCO_CAL_FINE_CAL_PAUSE_DC_FINE_CAL_PAUSE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int dc_fine_cal_pause : 16;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_dco_cal_fine_cal_pause;
#define EXTAPB_REGFILE_TMU_DCO_CAL_FINE_CAL_PAUSE_RST 0xa
#define EXTAPB_REGFILE_TMU_DCO_CAL_FINE_CAL_PAUSE_ADDR  0x4001d8a0


/* comparator_pre_g1 register */
/*----------------------*/
/* Time window between the assertion of the G1 group signals and G2 group signals. Unit = 0.5 us */
/* comparator_pre : See register description. */
#define EXTAPB_REGFILE_TMU_COMPARATOR_PRE_G1_COMPARATOR_PRE_MASK 0x07ff
#define EXTAPB_REGFILE_TMU_COMPARATOR_PRE_G1_COMPARATOR_PRE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int comparator_pre : 11;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_comparator_pre_g1;
#define EXTAPB_REGFILE_TMU_COMPARATOR_PRE_G1_RST 0x28
#define EXTAPB_REGFILE_TMU_COMPARATOR_PRE_G1_ADDR  0x4001d8a4


/* comparator_post_g1 register */
/*----------------------*/
/* Time window between the start of the power-down sequence and the de-assertion of the G1 group signals. Unit = 0.5 us */
/* comparator_post : See register description. */
#define EXTAPB_REGFILE_TMU_COMPARATOR_POST_G1_COMPARATOR_POST_MASK 0x07ff
#define EXTAPB_REGFILE_TMU_COMPARATOR_POST_G1_COMPARATOR_POST_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int comparator_post : 11;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_comparator_post_g1;
#define EXTAPB_REGFILE_TMU_COMPARATOR_POST_G1_RST 0x14
#define EXTAPB_REGFILE_TMU_COMPARATOR_POST_G1_ADDR  0x4001d8a8


/* comparator_pre_g2 register */
/*----------------------*/
/* Time window between the assertion of the G1 group signals and the start of the PLL phase. Unit = 0.5 us */
/* comparator_pre : See register description */
#define EXTAPB_REGFILE_TMU_COMPARATOR_PRE_G2_COMPARATOR_PRE_MASK 0x07ff
#define EXTAPB_REGFILE_TMU_COMPARATOR_PRE_G2_COMPARATOR_PRE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int comparator_pre : 11;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_comparator_pre_g2;
#define EXTAPB_REGFILE_TMU_COMPARATOR_PRE_G2_RST 0x50
#define EXTAPB_REGFILE_TMU_COMPARATOR_PRE_G2_ADDR  0x4001d8ac


/* comparator_post_g2 register */
/*----------------------*/
/* Time window between the start of the power-down sequence and the de-assertion of the G2 group signals. Unit = 0.5 us */
/* comparator_post : See register description. */
#define EXTAPB_REGFILE_TMU_COMPARATOR_POST_G2_COMPARATOR_POST_MASK 0x07ff
#define EXTAPB_REGFILE_TMU_COMPARATOR_POST_G2_COMPARATOR_POST_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int comparator_post : 11;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_comparator_post_g2;
#define EXTAPB_REGFILE_TMU_COMPARATOR_POST_G2_RST 0xa
#define EXTAPB_REGFILE_TMU_COMPARATOR_POST_G2_ADDR  0x4001d8b0


/* comparator_pre_tx1 register */
/*----------------------*/
/* Time window between the start of the PLL phase and the assertion of the TX1 group signals. Unit = 0.5 us */
/* comparator_pre : See register description. */
#define EXTAPB_REGFILE_TMU_COMPARATOR_PRE_TX1_COMPARATOR_PRE_MASK 0x07ff
#define EXTAPB_REGFILE_TMU_COMPARATOR_PRE_TX1_COMPARATOR_PRE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int comparator_pre : 11;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_comparator_pre_tx1;
#define EXTAPB_REGFILE_TMU_COMPARATOR_PRE_TX1_RST 0x28
#define EXTAPB_REGFILE_TMU_COMPARATOR_PRE_TX1_ADDR  0x4001d8b4


/* comparator_post_tx1 register */
/*----------------------*/
/* Time window between the end of the TX phase and the de-assertion of the TX1 group signals. Unit = 0.5 us */
/* comparator_post : See register description. */
#define EXTAPB_REGFILE_TMU_COMPARATOR_POST_TX1_COMPARATOR_POST_MASK 0x07ff
#define EXTAPB_REGFILE_TMU_COMPARATOR_POST_TX1_COMPARATOR_POST_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int comparator_post : 11;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_comparator_post_tx1;
#define EXTAPB_REGFILE_TMU_COMPARATOR_POST_TX1_RST 0x8
#define EXTAPB_REGFILE_TMU_COMPARATOR_POST_TX1_ADDR  0x4001d8b8


/* comparator_pre_tx2 register */
/*----------------------*/
/* Time window between the start of the PLL phase and the assertion of the TX2 group signals. Unit = 0.5 us */
/* comparator_pre : See register description. */
#define EXTAPB_REGFILE_TMU_COMPARATOR_PRE_TX2_COMPARATOR_PRE_MASK 0x07ff
#define EXTAPB_REGFILE_TMU_COMPARATOR_PRE_TX2_COMPARATOR_PRE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int comparator_pre : 11;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_comparator_pre_tx2;
#define EXTAPB_REGFILE_TMU_COMPARATOR_PRE_TX2_RST 0x2a
#define EXTAPB_REGFILE_TMU_COMPARATOR_PRE_TX2_ADDR  0x4001d8bc


/* comparator_post_tx2 register */
/*----------------------*/
/* Time window between the end of the TX phase and the de-assertion of the TX2 group signals. Unit = 0.5 us */
/* comparator_post : See register description. */
#define EXTAPB_REGFILE_TMU_COMPARATOR_POST_TX2_COMPARATOR_POST_MASK 0x07ff
#define EXTAPB_REGFILE_TMU_COMPARATOR_POST_TX2_COMPARATOR_POST_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int comparator_post : 11;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_comparator_post_tx2;
#define EXTAPB_REGFILE_TMU_COMPARATOR_POST_TX2_RST 0x6
#define EXTAPB_REGFILE_TMU_COMPARATOR_POST_TX2_ADDR  0x4001d8c0


/* comparator_pre_tx3 register */
/*----------------------*/
/* Time window between the start of the PLL phase and the assertion of the TX3 group signals. Unit = 0.5 us */
/* comparator_pre : See register description. */
#define EXTAPB_REGFILE_TMU_COMPARATOR_PRE_TX3_COMPARATOR_PRE_MASK 0x07ff
#define EXTAPB_REGFILE_TMU_COMPARATOR_PRE_TX3_COMPARATOR_PRE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int comparator_pre : 11;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_comparator_pre_tx3;
#define EXTAPB_REGFILE_TMU_COMPARATOR_PRE_TX3_RST 0x2c
#define EXTAPB_REGFILE_TMU_COMPARATOR_PRE_TX3_ADDR  0x4001d8c4


/* comparator_post_tx3 register */
/*----------------------*/
/* Time window between the end of the TX phase and the de-assertion of the TX3 group signals. Unit = 0.5 us */
/* comparator_post : See register description */
#define EXTAPB_REGFILE_TMU_COMPARATOR_POST_TX3_COMPARATOR_POST_MASK 0x07ff
#define EXTAPB_REGFILE_TMU_COMPARATOR_POST_TX3_COMPARATOR_POST_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int comparator_post : 11;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_comparator_post_tx3;
#define EXTAPB_REGFILE_TMU_COMPARATOR_POST_TX3_RST 0x4
#define EXTAPB_REGFILE_TMU_COMPARATOR_POST_TX3_ADDR  0x4001d8c8


/* comparator_pre_rx1 register */
/*----------------------*/
/* Time window between the start of the PLL phase and the assertion of the RX1 group signals. Unit = 0.5 us */
/* comparator_pre : See register description. */
#define EXTAPB_REGFILE_TMU_COMPARATOR_PRE_RX1_COMPARATOR_PRE_MASK 0x07ff
#define EXTAPB_REGFILE_TMU_COMPARATOR_PRE_RX1_COMPARATOR_PRE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int comparator_pre : 11;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_comparator_pre_rx1;
#define EXTAPB_REGFILE_TMU_COMPARATOR_PRE_RX1_RST 0x28
#define EXTAPB_REGFILE_TMU_COMPARATOR_PRE_RX1_ADDR  0x4001d8cc


/* comparator_post_rx1 register */
/*----------------------*/
/* Time window between the end of the RX phase and the de-assertion of the RX1 group signals. Unit = 0.5 us */
/* comparator_post : See register description */
#define EXTAPB_REGFILE_TMU_COMPARATOR_POST_RX1_COMPARATOR_POST_MASK 0x07ff
#define EXTAPB_REGFILE_TMU_COMPARATOR_POST_RX1_COMPARATOR_POST_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int comparator_post : 11;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_comparator_post_rx1;
#define EXTAPB_REGFILE_TMU_COMPARATOR_POST_RX1_RST 0x8
#define EXTAPB_REGFILE_TMU_COMPARATOR_POST_RX1_ADDR  0x4001d8d0


/* comparator_pre_rx2 register */
/*----------------------*/
/* Time window between the start of the PLL phase and the assertion of the RX2 group signals. Unit = 0.5 us */
/* comparator_pre : See register description. */
#define EXTAPB_REGFILE_TMU_COMPARATOR_PRE_RX2_COMPARATOR_PRE_MASK 0x07ff
#define EXTAPB_REGFILE_TMU_COMPARATOR_PRE_RX2_COMPARATOR_PRE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int comparator_pre : 11;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_comparator_pre_rx2;
#define EXTAPB_REGFILE_TMU_COMPARATOR_PRE_RX2_RST 0x2a
#define EXTAPB_REGFILE_TMU_COMPARATOR_PRE_RX2_ADDR  0x4001d8d4


/* comparator_post_rx2 register */
/*----------------------*/
/* Time window between the end of the RX phase and the de-assertion of the RX2 group signals. Unit = 0.5 us */
/* comparator_post : See register description. */
#define EXTAPB_REGFILE_TMU_COMPARATOR_POST_RX2_COMPARATOR_POST_MASK 0x07ff
#define EXTAPB_REGFILE_TMU_COMPARATOR_POST_RX2_COMPARATOR_POST_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int comparator_post : 11;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_comparator_post_rx2;
#define EXTAPB_REGFILE_TMU_COMPARATOR_POST_RX2_RST 0x6
#define EXTAPB_REGFILE_TMU_COMPARATOR_POST_RX2_ADDR  0x4001d8d8


/* comparator_pre_rx3 register */
/*----------------------*/
/* Time window between the start of the PLL phase and the assertion of the RX3 group signals. Unit = 0.5 us */
/* comparator_pre : See register description. */
#define EXTAPB_REGFILE_TMU_COMPARATOR_PRE_RX3_COMPARATOR_PRE_MASK 0x07ff
#define EXTAPB_REGFILE_TMU_COMPARATOR_PRE_RX3_COMPARATOR_PRE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int comparator_pre : 11;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_comparator_pre_rx3;
#define EXTAPB_REGFILE_TMU_COMPARATOR_PRE_RX3_RST 0x2c
#define EXTAPB_REGFILE_TMU_COMPARATOR_PRE_RX3_ADDR  0x4001d8dc


/* comparator_post_rx3 register */
/*----------------------*/
/* Time window between the end of the RX phase and the de-assertion of the RX3 group signals. Unit = 0.5 us */
/* comparator_post : See register description. */
#define EXTAPB_REGFILE_TMU_COMPARATOR_POST_RX3_COMPARATOR_POST_MASK 0x07ff
#define EXTAPB_REGFILE_TMU_COMPARATOR_POST_RX3_COMPARATOR_POST_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int comparator_post : 11;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_comparator_post_rx3;
#define EXTAPB_REGFILE_TMU_COMPARATOR_POST_RX3_RST 0x4
#define EXTAPB_REGFILE_TMU_COMPARATOR_POST_RX3_ADDR  0x4001d8e0


/* comparator_packet_start register */
/*----------------------*/
/* Time window between the start of the PLL phase and the generation of the internal packet start. (If enabled). Unit = 0.5 us */
/* comparator : See register description. */
#define EXTAPB_REGFILE_TMU_COMPARATOR_PACKET_START_COMPARATOR_MASK 0x07ff
#define EXTAPB_REGFILE_TMU_COMPARATOR_PACKET_START_COMPARATOR_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int comparator : 11;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_comparator_packet_start;
#define EXTAPB_REGFILE_TMU_COMPARATOR_PACKET_START_RST 0x32
#define EXTAPB_REGFILE_TMU_COMPARATOR_PACKET_START_ADDR  0x4001d8e4


/* comparator_pre_dp_reset register */
/*----------------------*/
/* Time window between the assertion of the G1 group signals and the de-assertion of the reset signal towards the datapath. */
/* comparator_pre : See register description. */
#define EXTAPB_REGFILE_TMU_COMPARATOR_PRE_DP_RESET_COMPARATOR_PRE_MASK 0x07ff
#define EXTAPB_REGFILE_TMU_COMPARATOR_PRE_DP_RESET_COMPARATOR_PRE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int comparator_pre : 11;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_comparator_pre_dp_reset;
#define EXTAPB_REGFILE_TMU_COMPARATOR_PRE_DP_RESET_RST 0x28
#define EXTAPB_REGFILE_TMU_COMPARATOR_PRE_DP_RESET_ADDR  0x4001d8e8


/* comparator_post_dp_reset register */
/*----------------------*/
/* Time window between the start of the power down sequence and the assertion of the reset signal towards the datapath. */
/* comparator_post : See register description. */
#define EXTAPB_REGFILE_TMU_COMPARATOR_POST_DP_RESET_COMPARATOR_POST_MASK 0x07ff
#define EXTAPB_REGFILE_TMU_COMPARATOR_POST_DP_RESET_COMPARATOR_POST_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int comparator_post : 11;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_comparator_post_dp_reset;
#define EXTAPB_REGFILE_TMU_COMPARATOR_POST_DP_RESET_RST 0xf
#define EXTAPB_REGFILE_TMU_COMPARATOR_POST_DP_RESET_ADDR  0x4001d8ec


/* comparator_pa_rampup register */
/*----------------------*/
/* Time window between the assertion of the TX3 group signals and the start of the PA power ramp-up. Unit = 1 us */
/* comparator : See register description */
#define EXTAPB_REGFILE_TMU_COMPARATOR_PA_RAMPUP_COMPARATOR_MASK 0x001f
#define EXTAPB_REGFILE_TMU_COMPARATOR_PA_RAMPUP_COMPARATOR_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int comparator : 5;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_comparator_pa_rampup;
#define EXTAPB_REGFILE_TMU_COMPARATOR_PA_RAMPUP_RST 0x1
#define EXTAPB_REGFILE_TMU_COMPARATOR_PA_RAMPUP_ADDR  0x4001d8f0


/* comparator_pll_on register */
/*----------------------*/
/* Time window between the end of the RX/TX phase and the restart of the PLL phase. Unit 0.5 us */
/* comparator_pll_on : See register description */
#define EXTAPB_REGFILE_TMU_COMPARATOR_PLL_ON_COMPARATOR_PLL_ON_MASK 0x07ff
#define EXTAPB_REGFILE_TMU_COMPARATOR_PLL_ON_COMPARATOR_PLL_ON_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int comparator_pll_on : 11;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_comparator_pll_on;
#define EXTAPB_REGFILE_TMU_COMPARATOR_PLL_ON_RST 0x14
#define EXTAPB_REGFILE_TMU_COMPARATOR_PLL_ON_ADDR  0x4001d8f4


/* reset_mask register */
/*----------------------*/
/* Disable mask for the generated resets. */
/* dp_reset_dis : When 1, the reset scheme towards the datapath in the power sequence is disabled. */
/* dp_reset_force : When 1, the dp_reset is forced to 1 */
/* synth_reset_force : When 1, the synth_reset is forced to 1 */
/* synth_reset_dp_rst_dis : When 0, the synth_reset is enabled by dp_reset */
/* synth_reset_fcw_upd_dis : When 0, the synth_reset is enabled at update of FCW */
/* synth_reset_pll_lock_dis : When 0, the synth_reset is enabled till the PLL lockin sequence is started */
/* synth_reset_power_down_dis : When 0, the synth_reset is enabled as soon the global TMU enters the power_down state */
/* tone_reset_force : When 1, the tone_reset is forced to 1 */
/* tone_reset_dp_rst_dis : When 0, the synth_reset is enabled by dp_reset */
/* tone_reset_fcw_upd_dis : When 0, the tone_reset is enabled at update of FCW */
#define EXTAPB_REGFILE_TMU_RESET_MASK_DP_RESET_DIS_MASK 0x0001
#define EXTAPB_REGFILE_TMU_RESET_MASK_DP_RESET_DIS_POS  0
#define EXTAPB_REGFILE_TMU_RESET_MASK_DP_RESET_FORCE_MASK 0x0002
#define EXTAPB_REGFILE_TMU_RESET_MASK_DP_RESET_FORCE_POS  1
#define EXTAPB_REGFILE_TMU_RESET_MASK_SYNTH_RESET_FORCE_MASK 0x0004
#define EXTAPB_REGFILE_TMU_RESET_MASK_SYNTH_RESET_FORCE_POS  2
#define EXTAPB_REGFILE_TMU_RESET_MASK_SYNTH_RESET_DP_RST_DIS_MASK 0x0008
#define EXTAPB_REGFILE_TMU_RESET_MASK_SYNTH_RESET_DP_RST_DIS_POS  3
#define EXTAPB_REGFILE_TMU_RESET_MASK_SYNTH_RESET_FCW_UPD_DIS_MASK 0x0010
#define EXTAPB_REGFILE_TMU_RESET_MASK_SYNTH_RESET_FCW_UPD_DIS_POS  4
#define EXTAPB_REGFILE_TMU_RESET_MASK_SYNTH_RESET_PLL_LOCK_DIS_MASK 0x0020
#define EXTAPB_REGFILE_TMU_RESET_MASK_SYNTH_RESET_PLL_LOCK_DIS_POS  5
#define EXTAPB_REGFILE_TMU_RESET_MASK_SYNTH_RESET_POWER_DOWN_DIS_MASK 0x0040
#define EXTAPB_REGFILE_TMU_RESET_MASK_SYNTH_RESET_POWER_DOWN_DIS_POS  6
#define EXTAPB_REGFILE_TMU_RESET_MASK_TONE_RESET_FORCE_MASK 0x0080
#define EXTAPB_REGFILE_TMU_RESET_MASK_TONE_RESET_FORCE_POS  7
#define EXTAPB_REGFILE_TMU_RESET_MASK_TONE_RESET_DP_RST_DIS_MASK 0x0100
#define EXTAPB_REGFILE_TMU_RESET_MASK_TONE_RESET_DP_RST_DIS_POS  8
#define EXTAPB_REGFILE_TMU_RESET_MASK_TONE_RESET_FCW_UPD_DIS_MASK 0x0200
#define EXTAPB_REGFILE_TMU_RESET_MASK_TONE_RESET_FCW_UPD_DIS_POS  9
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int dp_reset_dis : 1;
    unsigned int dp_reset_force : 1;
    unsigned int synth_reset_force : 1;
    unsigned int synth_reset_dp_rst_dis : 1;
    unsigned int synth_reset_fcw_upd_dis : 1;
    unsigned int synth_reset_pll_lock_dis : 1;
    unsigned int synth_reset_power_down_dis : 1;
    unsigned int tone_reset_force : 1;
    unsigned int tone_reset_dp_rst_dis : 1;
    unsigned int tone_reset_fcw_upd_dis : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_reset_mask;
#define EXTAPB_REGFILE_TMU_RESET_MASK_RST 0x0
#define EXTAPB_REGFILE_TMU_RESET_MASK_ADDR  0x4001d8f8


/* pa_mask register */
/*----------------------*/
/* PA enable mask */
/* tmu_pa_start_dis : When 1, the coupling between TMU and the PA start is disabled */
/* tmu_pa_end_dis : When 1, the coupling between TMU and the PA end is disabled */
#define EXTAPB_REGFILE_TMU_PA_MASK_TMU_PA_START_DIS_MASK 0x0001
#define EXTAPB_REGFILE_TMU_PA_MASK_TMU_PA_START_DIS_POS  0
#define EXTAPB_REGFILE_TMU_PA_MASK_TMU_PA_END_DIS_MASK 0x0002
#define EXTAPB_REGFILE_TMU_PA_MASK_TMU_PA_END_DIS_POS  1
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int tmu_pa_start_dis : 1;
    unsigned int tmu_pa_end_dis : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_pa_mask;
#define EXTAPB_REGFILE_TMU_PA_MASK_RST 0x0
#define EXTAPB_REGFILE_TMU_PA_MASK_ADDR  0x4001d8fc


/* rfp_agc_intstat register */
/*----------------------*/
/* RFP AGC Interrupt status */
/* int_agc : AGC interrupt detected */
#define EXTAPB_REGFILE_TMU_RFP_AGC_INTSTAT_INT_AGC_MASK 0x000f
#define EXTAPB_REGFILE_TMU_RFP_AGC_INTSTAT_INT_AGC_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int int_agc : 4;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_rfp_agc_intstat;
#define EXTAPB_REGFILE_TMU_RFP_AGC_INTSTAT_RST 0x0
#define EXTAPB_REGFILE_TMU_RFP_AGC_INTSTAT_DYNAMIC true
#define EXTAPB_REGFILE_TMU_RFP_AGC_INTSTAT_SNAPCLOCK 0
#define EXTAPB_REGFILE_TMU_RFP_AGC_INTSTAT_ADDR  0x4001d900


/* rfp_agc_intsetstat register */
/*----------------------*/
/* RFP AGC Interrupt Set. Cannot be written without RX reference clock. Any next write will hang */
/* int_agc : Set event for AGC interrupt */
#define EXTAPB_REGFILE_TMU_RFP_AGC_INTSETSTAT_INT_AGC_MASK 0x000f
#define EXTAPB_REGFILE_TMU_RFP_AGC_INTSETSTAT_INT_AGC_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int int_agc : 4;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_rfp_agc_intsetstat;
#define EXTAPB_REGFILE_TMU_RFP_AGC_INTSETSTAT_RST 0x0
#define EXTAPB_REGFILE_TMU_RFP_AGC_INTSETSTAT_ADDR  0x4001d904


/* rfp_agc_intclrstat register */
/*----------------------*/
/* RFP AGC Interrupt clear. Cannot be written without RX reference clock. Any next write will hang */
/* int_agc : Clear event for AGC interrupt */
#define EXTAPB_REGFILE_TMU_RFP_AGC_INTCLRSTAT_INT_AGC_MASK 0x000f
#define EXTAPB_REGFILE_TMU_RFP_AGC_INTCLRSTAT_INT_AGC_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int int_agc : 4;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_rfp_agc_intclrstat;
#define EXTAPB_REGFILE_TMU_RFP_AGC_INTCLRSTAT_RST 0x0
#define EXTAPB_REGFILE_TMU_RFP_AGC_INTCLRSTAT_ADDR  0x4001d908


/* rfp_agc_inten register */
/*----------------------*/
/* RFP AGC Interrupt enable */
/* int_agc : Interrupt enable for AGC interrupt */
#define EXTAPB_REGFILE_TMU_RFP_AGC_INTEN_INT_AGC_MASK 0x000f
#define EXTAPB_REGFILE_TMU_RFP_AGC_INTEN_INT_AGC_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int int_agc : 4;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_rfp_agc_inten;
#define EXTAPB_REGFILE_TMU_RFP_AGC_INTEN_RST 0x0
#define EXTAPB_REGFILE_TMU_RFP_AGC_INTEN_ADDR  0x4001d90c


/* pa_cal_delay1 register */
/*----------------------*/
/* TBD */
/* value : TBD */
#define EXTAPB_REGFILE_TMU_PA_CAL_DELAY1_VALUE_MASK 0x03ff
#define EXTAPB_REGFILE_TMU_PA_CAL_DELAY1_VALUE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int value : 10;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_pa_cal_delay1;
#define EXTAPB_REGFILE_TMU_PA_CAL_DELAY1_RST 0x8
#define EXTAPB_REGFILE_TMU_PA_CAL_DELAY1_ADDR  0x4001d910


/* pa_cal_delay2 register */
/*----------------------*/
/* TBD */
/* value : TBD */
#define EXTAPB_REGFILE_TMU_PA_CAL_DELAY2_VALUE_MASK 0x03ff
#define EXTAPB_REGFILE_TMU_PA_CAL_DELAY2_VALUE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int value : 10;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_pa_cal_delay2;
#define EXTAPB_REGFILE_TMU_PA_CAL_DELAY2_RST 0x8
#define EXTAPB_REGFILE_TMU_PA_CAL_DELAY2_ADDR  0x4001d914


/* pa_cal_delay3 register */
/*----------------------*/
/* TBD */
/* value : TBD */
#define EXTAPB_REGFILE_TMU_PA_CAL_DELAY3_VALUE_MASK 0x03ff
#define EXTAPB_REGFILE_TMU_PA_CAL_DELAY3_VALUE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int value : 10;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_pa_cal_delay3;
#define EXTAPB_REGFILE_TMU_PA_CAL_DELAY3_RST 0x8
#define EXTAPB_REGFILE_TMU_PA_CAL_DELAY3_ADDR  0x4001d918


/* pa_cal_meas_window register */
/*----------------------*/
/* TBD */
/* value : TBD */
#define EXTAPB_REGFILE_TMU_PA_CAL_MEAS_WINDOW_VALUE_MASK 0xffff
#define EXTAPB_REGFILE_TMU_PA_CAL_MEAS_WINDOW_VALUE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int value : 16;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_pa_cal_meas_window;
#define EXTAPB_REGFILE_TMU_PA_CAL_MEAS_WINDOW_RST 0x10
#define EXTAPB_REGFILE_TMU_PA_CAL_MEAS_WINDOW_ADDR  0x4001d91c


/* arbitration_cfg register */
/*----------------------*/
/* TBD */
/* auto_zb_hp : For auto arbitration. If set ZB has highest priority, if clear BLE has highest priority */
/* man_arb_en : If set manual arbitration is enabled. If clear automatic arbitration is enabled. */
/* man_zb : If using manual mode, and this bit is set radio will be allocated to ZB, otherwise allocated to BLE */
#define EXTAPB_REGFILE_TMU_ARBITRATION_CFG_AUTO_ZB_HP_MASK 0x0001
#define EXTAPB_REGFILE_TMU_ARBITRATION_CFG_AUTO_ZB_HP_POS  0
#define EXTAPB_REGFILE_TMU_ARBITRATION_CFG_MAN_ARB_EN_MASK 0x0002
#define EXTAPB_REGFILE_TMU_ARBITRATION_CFG_MAN_ARB_EN_POS  1
#define EXTAPB_REGFILE_TMU_ARBITRATION_CFG_MAN_ZB_MASK 0x0004
#define EXTAPB_REGFILE_TMU_ARBITRATION_CFG_MAN_ZB_POS  2
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int auto_zb_hp : 1;
    unsigned int man_arb_en : 1;
    unsigned int man_zb : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_arbitration_cfg;
#define EXTAPB_REGFILE_TMU_ARBITRATION_CFG_RST 0x1
#define EXTAPB_REGFILE_TMU_ARBITRATION_CFG_ADDR  0x4001d920


/* rf_carrier_freq_int register */
/*----------------------*/
/* TBD */
/* rf_carrier_freq_int : TBD */
#define EXTAPB_REGFILE_TMU_RF_CARRIER_FREQ_INT_RF_CARRIER_FREQ_INT_MASK 0x0fff
#define EXTAPB_REGFILE_TMU_RF_CARRIER_FREQ_INT_RF_CARRIER_FREQ_INT_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rf_carrier_freq_int : 12;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_rf_carrier_freq_int;
#define EXTAPB_REGFILE_TMU_RF_CARRIER_FREQ_INT_RST 0x0
#define EXTAPB_REGFILE_TMU_RF_CARRIER_FREQ_INT_ADDR  0x4001d924


/* rf_carrier_freq_frac register */
/*----------------------*/
/* TBD */
/* rf_carrier_freq_frac : TBD */
#define EXTAPB_REGFILE_TMU_RF_CARRIER_FREQ_FRAC_RF_CARRIER_FREQ_FRAC_MASK 0x3fff
#define EXTAPB_REGFILE_TMU_RF_CARRIER_FREQ_FRAC_RF_CARRIER_FREQ_FRAC_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rf_carrier_freq_frac : 14;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_rf_carrier_freq_frac;
#define EXTAPB_REGFILE_TMU_RF_CARRIER_FREQ_FRAC_RST 0x0
#define EXTAPB_REGFILE_TMU_RF_CARRIER_FREQ_FRAC_ADDR  0x4001d928

#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
   /* ES1 if explicitly configured */
#else
   /* ES2 default */
/* comparator_post_pll register */
/*----------------------*/
/* [ES2] Time window between the start of the power-down sequence and the de-assertion of the PLL group signals. Unit = 0.5 us */
/* comparator_post : See register description. */
#define EXTAPB_REGFILE_TMU_COMPARATOR_POST_PLL_COMPARATOR_POST_MASK 0x07ff
#define EXTAPB_REGFILE_TMU_COMPARATOR_POST_PLL_COMPARATOR_POST_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int comparator_post : 11;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tmu_comparator_post_pll;
#define EXTAPB_REGFILE_TMU_COMPARATOR_POST_PLL_RST 0x0
#define EXTAPB_REGFILE_TMU_COMPARATOR_POST_PLL_ADDR  0x4001d92c
#endif

typedef struct{
    t_extapb_regfile_tmu_mode_ctrl  mode_ctrl;
    t_extapb_regfile_tmu_mode_ctrl_2  mode_ctrl_2;
    t_extapb_regfile_tmu_mode_ctrl_3  mode_ctrl_3;
    t_extapb_regfile_tmu_mode_ctrl_src  mode_ctrl_src;
    t_extapb_regfile_tmu_pre_tx  pre_tx;
    t_extapb_regfile_tmu_post_tx  post_tx;
    t_extapb_regfile_tmu_pre_rx  pre_rx;
    t_extapb_regfile_tmu_post_rx  post_rx;
    t_extapb_regfile_tmu_status  status;
    t_extapb_regfile_tmu_cal_status  cal_status;
    t_extapb_regfile_tmu_cal_status1  cal_status1;
    t_extapb_regfile_tmu_cal_status2  cal_status2;
    t_extapb_regfile_tmu_global_status  global_status;
    t_extapb_regfile_tmu_clk_override  clk_override;
    t_extapb_regfile_tmu_rx_sync_found_timeout  rx_sync_found_timeout;
    t_extapb_regfile_tmu_rfp_tmu_intstat  rfp_tmu_intstat;
    t_extapb_regfile_tmu_rfp_tmu_intsetstat  rfp_tmu_intsetstat;
    t_extapb_regfile_tmu_rfp_tmu_intclrstat  rfp_tmu_intclrstat;
    t_extapb_regfile_tmu_rfp_tmu_inten  rfp_tmu_inten;
    t_extapb_regfile_tmu_rfp_tmu_power_intstat  rfp_tmu_power_intstat;
    t_extapb_regfile_tmu_rfp_tmu_power_intsetstat  rfp_tmu_power_intsetstat;
    t_extapb_regfile_tmu_rfp_tmu_power_intclrstat  rfp_tmu_power_intclrstat;
    t_extapb_regfile_tmu_rfp_tmu_power_inten  rfp_tmu_power_inten;
    t_extapb_regfile_tmu_rfp_tmu_cal_intstat  rfp_tmu_cal_intstat;
    t_extapb_regfile_tmu_rfp_tmu_cal_intsetstat  rfp_tmu_cal_intsetstat;
    t_extapb_regfile_tmu_rfp_tmu_cal_intclrstat  rfp_tmu_cal_intclrstat;
    t_extapb_regfile_tmu_rfp_tmu_cal_inten  rfp_tmu_cal_inten;
    t_extapb_regfile_tmu_triggers  triggers;
    t_extapb_regfile_tmu_cal_triggers  cal_triggers;
    t_extapb_regfile_tmu_kmod_cal_triggers  kmod_cal_triggers;
    t_extapb_regfile_tmu_synth_cal_triggers  synth_cal_triggers;
    t_extapb_regfile_tmu_synth_cal_cfg  synth_cal_cfg;
    t_extapb_regfile_tmu_cal_mode  cal_mode;
    t_extapb_regfile_tmu_synth_cal_pll_vco_rst_window  synth_cal_pll_vco_rst_window;
    t_extapb_regfile_tmu_synth_cal_pll_lock_aac_pch_treshold  synth_cal_pll_lock_aac_pch_treshold;
    t_extapb_regfile_tmu_synth_cal_pll_lock_aac_lock_treshold  synth_cal_pll_lock_aac_lock_treshold;
    t_extapb_regfile_tmu_synth_cal_pll_lock_treshold_1  synth_cal_pll_lock_treshold_1;
    t_extapb_regfile_tmu_synth_cal_pll_lock_treshold_2  synth_cal_pll_lock_treshold_2;
    t_extapb_regfile_tmu_synth_cal_pll_lock_treshold_3  synth_cal_pll_lock_treshold_3;
    t_extapb_regfile_tmu_dco_cal_gain_switch_settling_time  dco_cal_gain_switch_settling_time;
    t_extapb_regfile_tmu_dco_cal_fine_cal_pause  dco_cal_fine_cal_pause;
    t_extapb_regfile_tmu_comparator_pre_g1  comparator_pre_g1;
    t_extapb_regfile_tmu_comparator_post_g1  comparator_post_g1;
    t_extapb_regfile_tmu_comparator_pre_g2  comparator_pre_g2;
    t_extapb_regfile_tmu_comparator_post_g2  comparator_post_g2;
    t_extapb_regfile_tmu_comparator_pre_tx1  comparator_pre_tx1;
    t_extapb_regfile_tmu_comparator_post_tx1  comparator_post_tx1;
    t_extapb_regfile_tmu_comparator_pre_tx2  comparator_pre_tx2;
    t_extapb_regfile_tmu_comparator_post_tx2  comparator_post_tx2;
    t_extapb_regfile_tmu_comparator_pre_tx3  comparator_pre_tx3;
    t_extapb_regfile_tmu_comparator_post_tx3  comparator_post_tx3;
    t_extapb_regfile_tmu_comparator_pre_rx1  comparator_pre_rx1;
    t_extapb_regfile_tmu_comparator_post_rx1  comparator_post_rx1;
    t_extapb_regfile_tmu_comparator_pre_rx2  comparator_pre_rx2;
    t_extapb_regfile_tmu_comparator_post_rx2  comparator_post_rx2;
    t_extapb_regfile_tmu_comparator_pre_rx3  comparator_pre_rx3;
    t_extapb_regfile_tmu_comparator_post_rx3  comparator_post_rx3;
    t_extapb_regfile_tmu_comparator_packet_start  comparator_packet_start;
    t_extapb_regfile_tmu_comparator_pre_dp_reset  comparator_pre_dp_reset;
    t_extapb_regfile_tmu_comparator_post_dp_reset  comparator_post_dp_reset;
    t_extapb_regfile_tmu_comparator_pa_rampup  comparator_pa_rampup;
    t_extapb_regfile_tmu_comparator_pll_on  comparator_pll_on;
    t_extapb_regfile_tmu_reset_mask  reset_mask;
    t_extapb_regfile_tmu_pa_mask  pa_mask;
    t_extapb_regfile_tmu_rfp_agc_intstat  rfp_agc_intstat;
    t_extapb_regfile_tmu_rfp_agc_intsetstat  rfp_agc_intsetstat;
    t_extapb_regfile_tmu_rfp_agc_intclrstat  rfp_agc_intclrstat;
    t_extapb_regfile_tmu_rfp_agc_inten  rfp_agc_inten;
    t_extapb_regfile_tmu_pa_cal_delay1  pa_cal_delay1;
    t_extapb_regfile_tmu_pa_cal_delay2  pa_cal_delay2;
    t_extapb_regfile_tmu_pa_cal_delay3  pa_cal_delay3;
    t_extapb_regfile_tmu_pa_cal_meas_window  pa_cal_meas_window;
    t_extapb_regfile_tmu_arbitration_cfg  arbitration_cfg;
    t_extapb_regfile_tmu_rf_carrier_freq_int  rf_carrier_freq_int;
    t_extapb_regfile_tmu_rf_carrier_freq_frac  rf_carrier_freq_frac;
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
    /* ES1 if explicitly configured */
#else
    /* ES2 default */
    t_extapb_regfile_tmu_comparator_post_pll  comparator_post_pll;
#endif
} t_extapb_regfile_tmu;
#define EXTAPB_REGFILE_TMU_ADDR 0x4001d800
#define EXTAPB_REGFILE_TMU ((t_extapb_regfile_tmu *)EXTAPB_REGFILE_TMU_ADDR)


/* synth_control module */
/*-------------------------*/


/* cfg register */
/*----------------------*/
/* Configuration */
/* cw_mode : Configures the CW mode for the synthesizer */
/* output_edge : Configures the output edge of the samples towards the PLL divider. */
/* zoh_en : Configures whether the ZOH is enabled at the CDC (to deal with the 32 MHz synthesizer clock) */
/* div_second_point : Control for second point divider function */
/* delay_second_point_super_fine : Control for second point fine delay */
#define EXTAPB_REGFILE_SYNTH_CONTROL_CFG_CW_MODE_MASK 0x0001
#define EXTAPB_REGFILE_SYNTH_CONTROL_CFG_CW_MODE_POS  0
#define EXTAPB_REGFILE_SYNTH_CONTROL_CFG_CW_MODE_INPUT_VAL 0
#define EXTAPB_REGFILE_SYNTH_CONTROL_CFG_CW_MODE_INPUT_VAL_MASK 0x0
#define EXTAPB_REGFILE_SYNTH_CONTROL_CFG_CW_MODE_FIXED_VAL 1
#define EXTAPB_REGFILE_SYNTH_CONTROL_CFG_CW_MODE_FIXED_VAL_MASK 0x1
#define EXTAPB_REGFILE_SYNTH_CONTROL_CFG_OUTPUT_EDGE_MASK 0x0002
#define EXTAPB_REGFILE_SYNTH_CONTROL_CFG_OUTPUT_EDGE_POS  1
#define EXTAPB_REGFILE_SYNTH_CONTROL_CFG_OUTPUT_EDGE_RISING_EDGE 0
#define EXTAPB_REGFILE_SYNTH_CONTROL_CFG_OUTPUT_EDGE_RISING_EDGE_MASK 0x0
#define EXTAPB_REGFILE_SYNTH_CONTROL_CFG_OUTPUT_EDGE_FALLING_EDGE 1
#define EXTAPB_REGFILE_SYNTH_CONTROL_CFG_OUTPUT_EDGE_FALLING_EDGE_MASK 0x2
#define EXTAPB_REGFILE_SYNTH_CONTROL_CFG_ZOH_EN_MASK 0x0004
#define EXTAPB_REGFILE_SYNTH_CONTROL_CFG_ZOH_EN_POS  2
#define EXTAPB_REGFILE_SYNTH_CONTROL_CFG_DIV_SECOND_POINT_MASK 0x0018
#define EXTAPB_REGFILE_SYNTH_CONTROL_CFG_DIV_SECOND_POINT_POS  3
#define EXTAPB_REGFILE_SYNTH_CONTROL_CFG_DIV_SECOND_POINT_DIV0 0
#define EXTAPB_REGFILE_SYNTH_CONTROL_CFG_DIV_SECOND_POINT_DIV0_MASK 0x0
#define EXTAPB_REGFILE_SYNTH_CONTROL_CFG_DIV_SECOND_POINT_DIV1 1
#define EXTAPB_REGFILE_SYNTH_CONTROL_CFG_DIV_SECOND_POINT_DIV1_MASK 0x8
#define EXTAPB_REGFILE_SYNTH_CONTROL_CFG_DIV_SECOND_POINT_DIV2 2
#define EXTAPB_REGFILE_SYNTH_CONTROL_CFG_DIV_SECOND_POINT_DIV2_MASK 0x10
#define EXTAPB_REGFILE_SYNTH_CONTROL_CFG_DIV_SECOND_POINT_DIV3 3
#define EXTAPB_REGFILE_SYNTH_CONTROL_CFG_DIV_SECOND_POINT_DIV3_MASK 0x18
#define EXTAPB_REGFILE_SYNTH_CONTROL_CFG_DELAY_SECOND_POINT_SUPER_FINE_MASK 0x0060
#define EXTAPB_REGFILE_SYNTH_CONTROL_CFG_DELAY_SECOND_POINT_SUPER_FINE_POS  5
#define EXTAPB_REGFILE_SYNTH_CONTROL_CFG_DELAY_SECOND_POINT_SUPER_FINE_DELAY0 0
#define EXTAPB_REGFILE_SYNTH_CONTROL_CFG_DELAY_SECOND_POINT_SUPER_FINE_DELAY0_MASK 0x0
#define EXTAPB_REGFILE_SYNTH_CONTROL_CFG_DELAY_SECOND_POINT_SUPER_FINE_DELAY1 1
#define EXTAPB_REGFILE_SYNTH_CONTROL_CFG_DELAY_SECOND_POINT_SUPER_FINE_DELAY1_MASK 0x20
#define EXTAPB_REGFILE_SYNTH_CONTROL_CFG_DELAY_SECOND_POINT_SUPER_FINE_DELAY2 2
#define EXTAPB_REGFILE_SYNTH_CONTROL_CFG_DELAY_SECOND_POINT_SUPER_FINE_DELAY2_MASK 0x40
#define EXTAPB_REGFILE_SYNTH_CONTROL_CFG_DELAY_SECOND_POINT_SUPER_FINE_DELAY3 3
#define EXTAPB_REGFILE_SYNTH_CONTROL_CFG_DELAY_SECOND_POINT_SUPER_FINE_DELAY3_MASK 0x60
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int cw_mode : 1;
    unsigned int output_edge : 1;
    unsigned int zoh_en : 1;
    unsigned int div_second_point : 2;
    unsigned int delay_second_point_super_fine : 2;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_synth_control_cfg;
#define EXTAPB_REGFILE_SYNTH_CONTROL_CFG_RST 0x8
#define EXTAPB_REGFILE_SYNTH_CONTROL_CFG_ADDR  0x4001d980


/* fcw_frac register */
/*----------------------*/
/* Frequency control word : fractional bits */
/* fcw_frac : Fractional bits (16) of frequency control word */
#define EXTAPB_REGFILE_SYNTH_CONTROL_FCW_FRAC_FCW_FRAC_MASK 0xffff
#define EXTAPB_REGFILE_SYNTH_CONTROL_FCW_FRAC_FCW_FRAC_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int fcw_frac : 16;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_synth_control_fcw_frac;
#define EXTAPB_REGFILE_SYNTH_CONTROL_FCW_FRAC_RST 0x0
#define EXTAPB_REGFILE_SYNTH_CONTROL_FCW_FRAC_ADDR  0x4001d984


/* fcw_int register */
/*----------------------*/
/* Frequency control word: integer bits */
/* fcw_int : Integer bits (8) of frequency control word */
#define EXTAPB_REGFILE_SYNTH_CONTROL_FCW_INT_FCW_INT_MASK 0x00ff
#define EXTAPB_REGFILE_SYNTH_CONTROL_FCW_INT_FCW_INT_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int fcw_int : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_synth_control_fcw_int;
#define EXTAPB_REGFILE_SYNTH_CONTROL_FCW_INT_RST 0x2
#define EXTAPB_REGFILE_SYNTH_CONTROL_FCW_INT_ADDR  0x4001d988


typedef struct{
    t_extapb_regfile_synth_control_cfg  cfg;
    t_extapb_regfile_synth_control_fcw_frac  fcw_frac;
    t_extapb_regfile_synth_control_fcw_int  fcw_int;
} t_extapb_regfile_synth_control;
#define EXTAPB_REGFILE_SYNTH_CONTROL_ADDR 0x4001d980
#define EXTAPB_REGFILE_SYNTH_CONTROL ((t_extapb_regfile_synth_control *)EXTAPB_REGFILE_SYNTH_CONTROL_ADDR)


/* tone_control module */
/*-------------------------*/


/* cfg register */
/*----------------------*/
/* Configuration */
/* cw_mode : Configures the CW mode for the tone generator */
/* output_edge : Configures the output edge of the samples towards the PLL divider. */
/* zoh_en : Configures whether the ZOH is enabled at the CDC (to deal with the 32 MHz synthesizer clock) */
/* div_second_point : Control for second point divider function */
/* delay_second_point_super_fine : Control for second point fine delay */
#define EXTAPB_REGFILE_TONE_CONTROL_CFG_CW_MODE_MASK 0x0001
#define EXTAPB_REGFILE_TONE_CONTROL_CFG_CW_MODE_POS  0
#define EXTAPB_REGFILE_TONE_CONTROL_CFG_CW_MODE_INPUT_VAL 0
#define EXTAPB_REGFILE_TONE_CONTROL_CFG_CW_MODE_INPUT_VAL_MASK 0x0
#define EXTAPB_REGFILE_TONE_CONTROL_CFG_CW_MODE_FIXED_VAL 1
#define EXTAPB_REGFILE_TONE_CONTROL_CFG_CW_MODE_FIXED_VAL_MASK 0x1
#define EXTAPB_REGFILE_TONE_CONTROL_CFG_OUTPUT_EDGE_MASK 0x0002
#define EXTAPB_REGFILE_TONE_CONTROL_CFG_OUTPUT_EDGE_POS  1
#define EXTAPB_REGFILE_TONE_CONTROL_CFG_OUTPUT_EDGE_RISING_EDGE 0
#define EXTAPB_REGFILE_TONE_CONTROL_CFG_OUTPUT_EDGE_RISING_EDGE_MASK 0x0
#define EXTAPB_REGFILE_TONE_CONTROL_CFG_OUTPUT_EDGE_FALLING_EDGE 1
#define EXTAPB_REGFILE_TONE_CONTROL_CFG_OUTPUT_EDGE_FALLING_EDGE_MASK 0x2
#define EXTAPB_REGFILE_TONE_CONTROL_CFG_ZOH_EN_MASK 0x0004
#define EXTAPB_REGFILE_TONE_CONTROL_CFG_ZOH_EN_POS  2
#define EXTAPB_REGFILE_TONE_CONTROL_CFG_DIV_SECOND_POINT_MASK 0x0018
#define EXTAPB_REGFILE_TONE_CONTROL_CFG_DIV_SECOND_POINT_POS  3
#define EXTAPB_REGFILE_TONE_CONTROL_CFG_DIV_SECOND_POINT_DIV0 0
#define EXTAPB_REGFILE_TONE_CONTROL_CFG_DIV_SECOND_POINT_DIV0_MASK 0x0
#define EXTAPB_REGFILE_TONE_CONTROL_CFG_DIV_SECOND_POINT_DIV1 1
#define EXTAPB_REGFILE_TONE_CONTROL_CFG_DIV_SECOND_POINT_DIV1_MASK 0x8
#define EXTAPB_REGFILE_TONE_CONTROL_CFG_DIV_SECOND_POINT_DIV2 2
#define EXTAPB_REGFILE_TONE_CONTROL_CFG_DIV_SECOND_POINT_DIV2_MASK 0x10
#define EXTAPB_REGFILE_TONE_CONTROL_CFG_DIV_SECOND_POINT_DIV3 3
#define EXTAPB_REGFILE_TONE_CONTROL_CFG_DIV_SECOND_POINT_DIV3_MASK 0x18
#define EXTAPB_REGFILE_TONE_CONTROL_CFG_DELAY_SECOND_POINT_SUPER_FINE_MASK 0x0060
#define EXTAPB_REGFILE_TONE_CONTROL_CFG_DELAY_SECOND_POINT_SUPER_FINE_POS  5
#define EXTAPB_REGFILE_TONE_CONTROL_CFG_DELAY_SECOND_POINT_SUPER_FINE_DELAY0 0
#define EXTAPB_REGFILE_TONE_CONTROL_CFG_DELAY_SECOND_POINT_SUPER_FINE_DELAY0_MASK 0x0
#define EXTAPB_REGFILE_TONE_CONTROL_CFG_DELAY_SECOND_POINT_SUPER_FINE_DELAY1 1
#define EXTAPB_REGFILE_TONE_CONTROL_CFG_DELAY_SECOND_POINT_SUPER_FINE_DELAY1_MASK 0x20
#define EXTAPB_REGFILE_TONE_CONTROL_CFG_DELAY_SECOND_POINT_SUPER_FINE_DELAY2 2
#define EXTAPB_REGFILE_TONE_CONTROL_CFG_DELAY_SECOND_POINT_SUPER_FINE_DELAY2_MASK 0x40
#define EXTAPB_REGFILE_TONE_CONTROL_CFG_DELAY_SECOND_POINT_SUPER_FINE_DELAY3 3
#define EXTAPB_REGFILE_TONE_CONTROL_CFG_DELAY_SECOND_POINT_SUPER_FINE_DELAY3_MASK 0x60
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int cw_mode : 1;
    unsigned int output_edge : 1;
    unsigned int zoh_en : 1;
    unsigned int div_second_point : 2;
    unsigned int delay_second_point_super_fine : 2;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tone_control_cfg;
#define EXTAPB_REGFILE_TONE_CONTROL_CFG_RST 0x8
#define EXTAPB_REGFILE_TONE_CONTROL_CFG_ADDR  0x4001d9c0


/* fcw_frac register */
/*----------------------*/
/* Frequency control word : fractional bits */
/* fcw_frac : Fractional bits (16) of frequency control word */
#define EXTAPB_REGFILE_TONE_CONTROL_FCW_FRAC_FCW_FRAC_MASK 0xffff
#define EXTAPB_REGFILE_TONE_CONTROL_FCW_FRAC_FCW_FRAC_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int fcw_frac : 16;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tone_control_fcw_frac;
#define EXTAPB_REGFILE_TONE_CONTROL_FCW_FRAC_RST 0x0
#define EXTAPB_REGFILE_TONE_CONTROL_FCW_FRAC_ADDR  0x4001d9c4


/* fcw_int register */
/*----------------------*/
/* Frequency control word: integer bits */
/* fcw_int : Integer bits (8) of frequency control word */
#define EXTAPB_REGFILE_TONE_CONTROL_FCW_INT_FCW_INT_MASK 0x00ff
#define EXTAPB_REGFILE_TONE_CONTROL_FCW_INT_FCW_INT_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int fcw_int : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_tone_control_fcw_int;
#define EXTAPB_REGFILE_TONE_CONTROL_FCW_INT_RST 0x2
#define EXTAPB_REGFILE_TONE_CONTROL_FCW_INT_ADDR  0x4001d9c8


typedef struct{
    t_extapb_regfile_tone_control_cfg  cfg;
    t_extapb_regfile_tone_control_fcw_frac  fcw_frac;
    t_extapb_regfile_tone_control_fcw_int  fcw_int;
} t_extapb_regfile_tone_control;
#define EXTAPB_REGFILE_TONE_CONTROL_ADDR 0x4001d9c0
#define EXTAPB_REGFILE_TONE_CONTROL ((t_extapb_regfile_tone_control *)EXTAPB_REGFILE_TONE_CONTROL_ADDR)


/* snap module */
/*-------------------------*/


/* disable_mask register */
/*----------------------*/
/* Snap/Snack will hang if a clock is missing. This register allows to disable Snap/Snack for specific clock domains. */
/* ref_clk : Ref clock */
/* rx_bb_clk : Rx BB clock */
#define EXTAPB_REGFILE_SNAP_DISABLE_MASK_REF_CLK_MASK 0x0001
#define EXTAPB_REGFILE_SNAP_DISABLE_MASK_REF_CLK_POS  0
#define EXTAPB_REGFILE_SNAP_DISABLE_MASK_RX_BB_CLK_MASK 0x0002
#define EXTAPB_REGFILE_SNAP_DISABLE_MASK_RX_BB_CLK_POS  1
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int ref_clk : 1;
    unsigned int rx_bb_clk : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_snap_disable_mask;
#define EXTAPB_REGFILE_SNAP_DISABLE_MASK_RST 0x2
#define EXTAPB_REGFILE_SNAP_DISABLE_MASK_ADDR  0x4001da00


typedef struct{
    t_extapb_regfile_snap_disable_mask  disable_mask;
} t_extapb_regfile_snap;
#define EXTAPB_REGFILE_SNAP_ADDR 0x4001da00
#define EXTAPB_REGFILE_SNAP ((t_extapb_regfile_snap *)EXTAPB_REGFILE_SNAP_ADDR)


/* apbm module */
/*-------------------------*/


/* address_lsb register */
/*----------------------*/
/* APB master address (LSB) */
/* address_lsb : Address value (LSB) */
#define EXTAPB_REGFILE_APBM_ADDRESS_LSB_ADDRESS_LSB_MASK 0xffff
#define EXTAPB_REGFILE_APBM_ADDRESS_LSB_ADDRESS_LSB_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int address_lsb : 16;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_apbm_address_lsb;
#define EXTAPB_REGFILE_APBM_ADDRESS_LSB_RST 0x0
#define EXTAPB_REGFILE_APBM_ADDRESS_LSB_ADDR  0x4001da20


/* address_msb register */
/*----------------------*/
/* APB master address (MSB) */
/* address_msb : Address value (MSB) */
#define EXTAPB_REGFILE_APBM_ADDRESS_MSB_ADDRESS_MSB_MASK 0x0003
#define EXTAPB_REGFILE_APBM_ADDRESS_MSB_ADDRESS_MSB_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int address_msb : 2;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_apbm_address_msb;
#define EXTAPB_REGFILE_APBM_ADDRESS_MSB_RST 0x0
#define EXTAPB_REGFILE_APBM_ADDRESS_MSB_ADDR  0x4001da24


/* access_cfg register */
/*----------------------*/
/* APB master access configuration */
/* clock_enable : Clock enable */
/* cmd_t : Command toggle */
/* write_en : Write enable */
#define EXTAPB_REGFILE_APBM_ACCESS_CFG_CLOCK_ENABLE_MASK 0x0001
#define EXTAPB_REGFILE_APBM_ACCESS_CFG_CLOCK_ENABLE_POS  0
#define EXTAPB_REGFILE_APBM_ACCESS_CFG_CMD_T_MASK 0x0002
#define EXTAPB_REGFILE_APBM_ACCESS_CFG_CMD_T_POS  1
#define EXTAPB_REGFILE_APBM_ACCESS_CFG_WRITE_EN_MASK 0x0004
#define EXTAPB_REGFILE_APBM_ACCESS_CFG_WRITE_EN_POS  2
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int clock_enable : 1;
    unsigned int cmd_t : 1;
    unsigned int write_en : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_apbm_access_cfg;
#define EXTAPB_REGFILE_APBM_ACCESS_CFG_RST 0x0
#define EXTAPB_REGFILE_APBM_ACCESS_CFG_ADDR  0x4001da28


/* wdata_lsb register */
/*----------------------*/
/* Write data (LSB part) */
/* wdata_lsb : Write data (LSB part) */
#define EXTAPB_REGFILE_APBM_WDATA_LSB_WDATA_LSB_MASK 0xffff
#define EXTAPB_REGFILE_APBM_WDATA_LSB_WDATA_LSB_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int wdata_lsb : 16;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_apbm_wdata_lsb;
#define EXTAPB_REGFILE_APBM_WDATA_LSB_RST 0x0
#define EXTAPB_REGFILE_APBM_WDATA_LSB_ADDR  0x4001da2c


/* wdata_msb register */
/*----------------------*/
/* Write data (MSB part) */
/* wdata_msb : Write data (MSB part) */
#define EXTAPB_REGFILE_APBM_WDATA_MSB_WDATA_MSB_MASK 0xffff
#define EXTAPB_REGFILE_APBM_WDATA_MSB_WDATA_MSB_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int wdata_msb : 16;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_apbm_wdata_msb;
#define EXTAPB_REGFILE_APBM_WDATA_MSB_RST 0x0
#define EXTAPB_REGFILE_APBM_WDATA_MSB_ADDR  0x4001da30


/* rdata_lsb register */
/*----------------------*/
/* Read data (LSB part) */
/* rdata_lsb : Read data (LSB part) */
#define EXTAPB_REGFILE_APBM_RDATA_LSB_RDATA_LSB_MASK 0xffff
#define EXTAPB_REGFILE_APBM_RDATA_LSB_RDATA_LSB_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rdata_lsb : 16;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_apbm_rdata_lsb;
#define EXTAPB_REGFILE_APBM_RDATA_LSB_RST 0x0
#define EXTAPB_REGFILE_APBM_RDATA_LSB_DYNAMIC true
#define EXTAPB_REGFILE_APBM_RDATA_LSB_SNAPCLOCK 0
#define EXTAPB_REGFILE_APBM_RDATA_LSB_ADDR  0x4001da34


/* rdata_msb register */
/*----------------------*/
/* Read data (MSB part) */
/* rdata_msb : Read data (MSB part) */
#define EXTAPB_REGFILE_APBM_RDATA_MSB_RDATA_MSB_MASK 0xffff
#define EXTAPB_REGFILE_APBM_RDATA_MSB_RDATA_MSB_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rdata_msb : 16;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_apbm_rdata_msb;
#define EXTAPB_REGFILE_APBM_RDATA_MSB_RST 0x0
#define EXTAPB_REGFILE_APBM_RDATA_MSB_DYNAMIC true
#define EXTAPB_REGFILE_APBM_RDATA_MSB_SNAPCLOCK 0
#define EXTAPB_REGFILE_APBM_RDATA_MSB_ADDR  0x4001da38


/* access_status register */
/*----------------------*/
/* APB master access status */
/* ack_t : Acknowledge toggle */
#define EXTAPB_REGFILE_APBM_ACCESS_STATUS_ACK_T_MASK 0x0001
#define EXTAPB_REGFILE_APBM_ACCESS_STATUS_ACK_T_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int ack_t : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_apbm_access_status;
#define EXTAPB_REGFILE_APBM_ACCESS_STATUS_RST 0x0
#define EXTAPB_REGFILE_APBM_ACCESS_STATUS_DYNAMIC true
#define EXTAPB_REGFILE_APBM_ACCESS_STATUS_SNAPCLOCK 0
#define EXTAPB_REGFILE_APBM_ACCESS_STATUS_ADDR  0x4001da3c


typedef struct{
    t_extapb_regfile_apbm_address_lsb  address_lsb;
    t_extapb_regfile_apbm_address_msb  address_msb;
    t_extapb_regfile_apbm_access_cfg  access_cfg;
    t_extapb_regfile_apbm_wdata_lsb  wdata_lsb;
    t_extapb_regfile_apbm_wdata_msb  wdata_msb;
    t_extapb_regfile_apbm_rdata_lsb  rdata_lsb;
    t_extapb_regfile_apbm_rdata_msb  rdata_msb;
    t_extapb_regfile_apbm_access_status  access_status;
} t_extapb_regfile_apbm;
#define EXTAPB_REGFILE_APBM_ADDR 0x4001da20
#define EXTAPB_REGFILE_APBM ((t_extapb_regfile_apbm *)EXTAPB_REGFILE_APBM_ADDR)


/* switch_matrix module */
/*-------------------------*/


/* pad_cfg0 register */
/*----------------------*/
/* SWM Pad 0 configuration */
/* mode : Mode configuration for SWM pad */
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG0_MODE_MASK 0x00ff
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG0_MODE_POS  0
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG0_MODE_FIXED_0 0
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG0_MODE_FIXED_0_MASK 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG0_MODE_FIXED_1 1
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG0_MODE_FIXED_1_MASK 0x1
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG0_MODE_SWM_XOT_DONE 10
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG0_MODE_SWM_XOT_DONE_MASK 0xa
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG0_MODE_SWM_REF_CLK 15
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG0_MODE_SWM_REF_CLK_MASK 0xf
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG0_MODE_GPIO_0 22
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG0_MODE_GPIO_0_MASK 0x16
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG0_MODE_SWM_TMU_GRP_G1_OUT 23
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG0_MODE_SWM_TMU_GRP_G1_OUT_MASK 0x17
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG0_MODE_SWM_ANT_SWITCH 26
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG0_MODE_SWM_ANT_SWITCH_MASK 0x1a
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG0_MODE_SWM_VCO_LOCK 27
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG0_MODE_SWM_VCO_LOCK_MASK 0x1b
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG0_MODE_SWM_PLL_DIVN_FO_SDM 32
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG0_MODE_SWM_PLL_DIVN_FO_SDM_MASK 0x20
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG0_MODE_SWM_TMU_GRP_PLL_OUT 33
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG0_MODE_SWM_TMU_GRP_PLL_OUT_MASK 0x21
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int mode : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_switch_matrix_pad_cfg0;
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG0_RST 0x16
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG0_ADDR  0x4001da40


/* pad_cfg1 register */
/*----------------------*/
/* SWM Pad 1 configuration */
/* mode : Mode configuration for SWM pad */
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG1_MODE_MASK 0x00ff
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG1_MODE_POS  0
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG1_MODE_FIXED_0 0
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG1_MODE_FIXED_0_MASK 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG1_MODE_FIXED_1 1
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG1_MODE_FIXED_1_MASK 0x1
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG1_MODE_SWM_REF_CLK 15
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG1_MODE_SWM_REF_CLK_MASK 0xf
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG1_MODE_GPIO_1 22
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG1_MODE_GPIO_1_MASK 0x16
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG1_MODE_SWM_TMU_GRP_G2_OUT 23
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG1_MODE_SWM_TMU_GRP_G2_OUT_MASK 0x17
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG1_MODE_SWM_R_CAL_DONE_CLX 24
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG1_MODE_SWM_R_CAL_DONE_CLX_MASK 0x18
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG1_MODE_SWM_ANT_SWITCH 26
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG1_MODE_SWM_ANT_SWITCH_MASK 0x1a
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG1_MODE_SWM_VCO_LOCK 27
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG1_MODE_SWM_VCO_LOCK_MASK 0x1b
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG1_MODE_SWM_PLL_DIVN_FO_SDM 32
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG1_MODE_SWM_PLL_DIVN_FO_SDM_MASK 0x20
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG1_MODE_SWM_TMU_GRP_PLL_OUT 33
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG1_MODE_SWM_TMU_GRP_PLL_OUT_MASK 0x21
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int mode : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_switch_matrix_pad_cfg1;
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG1_RST 0x16
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG1_ADDR  0x4001da44


/* pad_cfg2 register */
/*----------------------*/
/* SWM Pad 2 configuration */
/* mode : Mode configuration for SWM pad */
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG2_MODE_MASK 0x00ff
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG2_MODE_POS  0
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG2_MODE_FIXED_0 0
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG2_MODE_FIXED_0_MASK 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG2_MODE_FIXED_1 1
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG2_MODE_FIXED_1_MASK 0x1
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG2_MODE_SWM_SPI_MISO 2
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG2_MODE_SWM_SPI_MISO_MASK 0x2
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG2_MODE_SWM_DBG_SER_RX_DATA_3 11
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG2_MODE_SWM_DBG_SER_RX_DATA_3_MASK 0xb
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG2_MODE_SWM_DBG_SER_CALIB_DATA_3 12
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG2_MODE_SWM_DBG_SER_CALIB_DATA_3_MASK 0xc
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG2_MODE_SWM_REF_CLK 15
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG2_MODE_SWM_REF_CLK_MASK 0xf
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG2_MODE_SWM_ADC_FS_SER_FRAME 17
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG2_MODE_SWM_ADC_FS_SER_FRAME_MASK 0x11
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG2_MODE_SWM_ADC_HS_SER_DATA_MSB 18
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG2_MODE_SWM_ADC_HS_SER_DATA_MSB_MASK 0x12
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG2_MODE_GPIO_2 22
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG2_MODE_GPIO_2_MASK 0x16
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG2_MODE_SWM_TMU_GRP_RX1_OUT 23
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG2_MODE_SWM_TMU_GRP_RX1_OUT_MASK 0x17
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG2_MODE_SWM_ANT_SWITCH 26
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG2_MODE_SWM_ANT_SWITCH_MASK 0x1a
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG2_MODE_SWM_VCO_LOCK 27
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG2_MODE_SWM_VCO_LOCK_MASK 0x1b
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG2_MODE_SWM_PLL_DIVN_FO_SDM 32
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG2_MODE_SWM_PLL_DIVN_FO_SDM_MASK 0x20
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG2_MODE_SWM_TMU_GRP_PLL_OUT 33
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG2_MODE_SWM_TMU_GRP_PLL_OUT_MASK 0x21
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int mode : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_switch_matrix_pad_cfg2;
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG2_RST 0x16
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG2_ADDR  0x4001da48


/* pad_cfg3 register */
/*----------------------*/
/* SWM Pad 3 configuration */
/* mode : Mode configuration for SWM pad */
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG3_MODE_MASK 0x00ff
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG3_MODE_POS  0
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG3_MODE_FIXED_0 0
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG3_MODE_FIXED_0_MASK 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG3_MODE_FIXED_1 1
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG3_MODE_FIXED_1_MASK 0x1
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG3_MODE_IP_SWM_DBG_SER_RX_DATA_2 11
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG3_MODE_IP_SWM_DBG_SER_RX_DATA_2_MASK 0xb
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG3_MODE_IP_SWM_DBG_SER_CALIB_DATA_2 12
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG3_MODE_IP_SWM_DBG_SER_CALIB_DATA_2_MASK 0xc
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG3_MODE_IP_SWM_REF_CLK 15
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG3_MODE_IP_SWM_REF_CLK_MASK 0xf
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG3_MODE_IP_SWM_ADC_FS_SER_DATA_4 17
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG3_MODE_IP_SWM_ADC_FS_SER_DATA_4_MASK 0x11
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG3_MODE_IP_SWM_ADC_HS_SER_DATA_4 18
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG3_MODE_IP_SWM_ADC_HS_SER_DATA_4_MASK 0x12
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG3_MODE_IP_GPIO_3 22
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG3_MODE_IP_GPIO_3_MASK 0x16
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG3_MODE_IP_SWM_TMU_GRP_RX2_OUT 23
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG3_MODE_IP_SWM_TMU_GRP_RX2_OUT_MASK 0x17
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG3_MODE_IP_SWM_ANT_SWITCH 26
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG3_MODE_IP_SWM_ANT_SWITCH_MASK 0x1a
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG3_MODE_IP_SWM_VCO_LOCK 27
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG3_MODE_IP_SWM_VCO_LOCK_MASK 0x1b
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG3_MODE_SWM_PLL_DIVN_FO_SDM 32
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG3_MODE_SWM_PLL_DIVN_FO_SDM_MASK 0x20
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG3_MODE_SWM_TMU_GRP_PLL_OUT 33
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG3_MODE_SWM_TMU_GRP_PLL_OUT_MASK 0x21
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int mode : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_switch_matrix_pad_cfg3;
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG3_RST 0x16
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG3_ADDR  0x4001da4c


/* pad_cfg4 register */
/*----------------------*/
/* SWM Pad 4 configuration */
/* mode : Mode configuration for SWM pad */
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG4_MODE_MASK 0x00ff
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG4_MODE_POS  0
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG4_MODE_FIXED_0 0
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG4_MODE_FIXED_0_MASK 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG4_MODE_FIXED_1 1
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG4_MODE_FIXED_1_MASK 0x1
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG4_MODE_SWM_SPI_MISO 3
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG4_MODE_SWM_SPI_MISO_MASK 0x3
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG4_MODE_SWM_REF_CLK 15
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG4_MODE_SWM_REF_CLK_MASK 0xf
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG4_MODE_GPIO_4 22
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG4_MODE_GPIO_4_MASK 0x16
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG4_MODE_SWM_ANT_SWITCH 26
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG4_MODE_SWM_ANT_SWITCH_MASK 0x1a
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG4_MODE_SWM_VCO_LOCK 27
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG4_MODE_SWM_VCO_LOCK_MASK 0x1b
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG4_MODE_SWM_PLL_DIVN_FO_SDM 32
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG4_MODE_SWM_PLL_DIVN_FO_SDM_MASK 0x20
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG4_MODE_SWM_TMU_GRP_PLL_OUT 33
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG4_MODE_SWM_TMU_GRP_PLL_OUT_MASK 0x21
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int mode : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_switch_matrix_pad_cfg4;
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG4_RST 0x16
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG4_ADDR  0x4001da50


/* pad_cfg5 register */
/*----------------------*/
/* SWM Pad 5 configuration */
/* mode : Mode configuration for SWM pad */
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG5_MODE_MASK 0x00ff
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG5_MODE_POS  0
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG5_MODE_FIXED_0 0
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG5_MODE_FIXED_0_MASK 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG5_MODE_FIXED_1 1
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG5_MODE_FIXED_1_MASK 0x1
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG5_MODE_SWM_REF_CLK 15
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG5_MODE_SWM_REF_CLK_MASK 0xf
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG5_MODE_GPIO_5 22
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG5_MODE_GPIO_5_MASK 0x16
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG5_MODE_SWM_ANT_SWITCH 26
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG5_MODE_SWM_ANT_SWITCH_MASK 0x1a
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG5_MODE_SWM_VCO_LOCK 27
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG5_MODE_SWM_VCO_LOCK_MASK 0x1b
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG5_MODE_SWM_PLL_DIVN_FO_SDM 32
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG5_MODE_SWM_PLL_DIVN_FO_SDM_MASK 0x20
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG5_MODE_SWM_TMU_GRP_PLL_OUT 33
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG5_MODE_SWM_TMU_GRP_PLL_OUT_MASK 0x21
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int mode : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_switch_matrix_pad_cfg5;
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG5_RST 0x16
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG5_ADDR  0x4001da54


/* pad_cfg6 register */
/*----------------------*/
/* SWM Pad 6 configuration */
/* mode : Mode configuration for SWM pad */
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG6_MODE_MASK 0x00ff
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG6_MODE_POS  0
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG6_MODE_FIXED_0 0
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG6_MODE_FIXED_0_MASK 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG6_MODE_FIXED_1 1
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG6_MODE_FIXED_1_MASK 0x1
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG6_MODE_SWM_SPI_MISO 4
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG6_MODE_SWM_SPI_MISO_MASK 0x4
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG6_MODE_SWM_RX_DATA 6
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG6_MODE_SWM_RX_DATA_MASK 0x6
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG6_MODE_SWM_DBG_SER_RX_DATA_1 11
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG6_MODE_SWM_DBG_SER_RX_DATA_1_MASK 0xb
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG6_MODE_SWM_DBG_SER_CALIB_DATA_1 12
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG6_MODE_SWM_DBG_SER_CALIB_DATA_1_MASK 0xc
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG6_MODE_SWM_REF_CLK 15
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG6_MODE_SWM_REF_CLK_MASK 0xf
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG6_MODE_SWM_ADC_FS_SER_DATA_3 17
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG6_MODE_SWM_ADC_FS_SER_DATA_3_MASK 0x11
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG6_MODE_SWM_ADC_HS_SER_DATA_3 18
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG6_MODE_SWM_ADC_HS_SER_DATA_3_MASK 0x12
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG6_MODE_GPIO_6 22
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG6_MODE_GPIO_6_MASK 0x16
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG6_MODE_SWM_TMU_GRP_RX3_OUT 23
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG6_MODE_SWM_TMU_GRP_RX3_OUT_MASK 0x17
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG6_MODE_SWM_ANT_SWITCH 26
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG6_MODE_SWM_ANT_SWITCH_MASK 0x1a
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG6_MODE_SWM_VCO_LOCK 27
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG6_MODE_SWM_VCO_LOCK_MASK 0x1b
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG6_MODE_SWM_PLL_DIVN_FO_SDM 32
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG6_MODE_SWM_PLL_DIVN_FO_SDM_MASK 0x20
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG6_MODE_SWM_TMU_GRP_PLL_OUT 33
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG6_MODE_SWM_TMU_GRP_PLL_OUT_MASK 0x21
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int mode : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_switch_matrix_pad_cfg6;
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG6_RST 0x16
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG6_ADDR  0x4001da58


/* pad_cfg7 register */
/*----------------------*/
/* SWM Pad 7 configuration */
/* mode : Mode configuration for SWM pad */
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG7_MODE_MASK 0x00ff
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG7_MODE_POS  0
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG7_MODE_FIXED_0 0
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG7_MODE_FIXED_0_MASK 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG7_MODE_FIXED_1 1
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG7_MODE_FIXED_1_MASK 0x1
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG7_MODE_SWM_DBG_SER_RX_DATA_0 11
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG7_MODE_SWM_DBG_SER_RX_DATA_0_MASK 0xb
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG7_MODE_SWM_DBG_SER_CALIB_DATA_0 12
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG7_MODE_SWM_DBG_SER_CALIB_DATA_0_MASK 0xc
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG7_MODE_SWM_REF_CLK 15
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG7_MODE_SWM_REF_CLK_MASK 0xf
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG7_MODE_SWM_ADC_FS_SER_DATA_2 17
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG7_MODE_SWM_ADC_FS_SER_DATA_2_MASK 0x11
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG7_MODE_SWM_ADC_HS_SER_DATA_2 18
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG7_MODE_SWM_ADC_HS_SER_DATA_2_MASK 0x12
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG7_MODE_GPIO_7 22
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG7_MODE_GPIO_7_MASK 0x16
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG7_MODE_SWM_TMU_GRP_TX1_OUT 23
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG7_MODE_SWM_TMU_GRP_TX1_OUT_MASK 0x17
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG7_MODE_SWM_ANT_SWITCH 26
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG7_MODE_SWM_ANT_SWITCH_MASK 0x1a
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG7_MODE_SWM_VCO_LOCK 27
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG7_MODE_SWM_VCO_LOCK_MASK 0x1b
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG7_MODE_SWM_PLL_DIVN_FO_SDM 32
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG7_MODE_SWM_PLL_DIVN_FO_SDM_MASK 0x20
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG7_MODE_SWM_TMU_GRP_PLL_OUT 33
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG7_MODE_SWM_TMU_GRP_PLL_OUT_MASK 0x21
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int mode : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_switch_matrix_pad_cfg7;
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG7_RST 0x16
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG7_ADDR  0x4001da5c


/* pad_cfg8 register */
/*----------------------*/
/* SWM Pad 8 configuration */
/* mode : Mode configuration for SWM pad */
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG8_MODE_MASK 0x00ff
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG8_MODE_POS  0
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG8_MODE_FIXED_0 0
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG8_MODE_FIXED_0_MASK 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG8_MODE_FIXED_1 1
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG8_MODE_FIXED_1_MASK 0x1
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG8_MODE_SWM_TX_SYNC_CLX 6
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG8_MODE_SWM_TX_SYNC_CLX_MASK 0x6
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG8_MODE_SWM_XOT_DONE 9
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG8_MODE_SWM_XOT_DONE_MASK 0x9
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG8_MODE_SWM_DBG_SER_RX_FRAME 11
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG8_MODE_SWM_DBG_SER_RX_FRAME_MASK 0xb
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG8_MODE_SWM_DBG_SER_CALIB_FRAME 12
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG8_MODE_SWM_DBG_SER_CALIB_FRAME_MASK 0xc
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG8_MODE_SWM_REF_CLK 15
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG8_MODE_SWM_REF_CLK_MASK 0xf
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG8_MODE_SWM_ADC_FS_SER_DATA_1 17
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG8_MODE_SWM_ADC_FS_SER_DATA_1_MASK 0x11
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG8_MODE_SWM_ADC_HS_SER_DATA_1 18
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG8_MODE_SWM_ADC_HS_SER_DATA_1_MASK 0x12
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG8_MODE_GPIO_8 22
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG8_MODE_GPIO_8_MASK 0x16
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG8_MODE_SWM_TMU_GRP_TX2_OUT 23
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG8_MODE_SWM_TMU_GRP_TX2_OUT_MASK 0x17
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG8_MODE_SWM_ANT_SWITCH 26
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG8_MODE_SWM_ANT_SWITCH_MASK 0x1a
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG8_MODE_SWM_VCO_LOCK 27
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG8_MODE_SWM_VCO_LOCK_MASK 0x1b
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG8_MODE_SWM_PLL_DIVN_FO_SDM 32
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG8_MODE_SWM_PLL_DIVN_FO_SDM_MASK 0x20
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG8_MODE_SWM_TMU_GRP_PLL_OUT 33
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG8_MODE_SWM_TMU_GRP_PLL_OUT_MASK 0x21
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int mode : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_switch_matrix_pad_cfg8;
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG8_RST 0x16
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG8_ADDR  0x4001da60


/* pad_cfg9 register */
/*----------------------*/
/* SWM Pad 9 configuration */
/* mode : Mode configuration for SWM pad */
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG9_MODE_MASK 0x00ff
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG9_MODE_POS  0
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG9_MODE_FIXED_0 0
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG9_MODE_FIXED_0_MASK 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG9_MODE_FIXED_1 1
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG9_MODE_FIXED_1_MASK 0x1
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG9_MODE_SWM_DBG_SER_RX_CLK 11
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG9_MODE_SWM_DBG_SER_RX_CLK_MASK 0xb
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG9_MODE_SWM_DBG_SER_CALIB_CLK 12
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG9_MODE_SWM_DBG_SER_CALIB_CLK_MASK 0xc
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG9_MODE_SWM_REF_CLK 15
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG9_MODE_SWM_REF_CLK_MASK 0xf
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG9_MODE_SWM_ADC_FS_SER_DATA_0 17
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG9_MODE_SWM_ADC_FS_SER_DATA_0_MASK 0x11
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG9_MODE_SWM_ADC_HS_SER_DATA_0 18
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG9_MODE_SWM_ADC_HS_SER_DATA_0_MASK 0x12
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG9_MODE_GPIO_9 22
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG9_MODE_GPIO_9_MASK 0x16
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG9_MODE_SWM_TMU_GRP_TX3_OUT 23
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG9_MODE_SWM_TMU_GRP_TX3_OUT_MASK 0x17
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG9_MODE_SWM_ANT_SWITCH 26
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG9_MODE_SWM_ANT_SWITCH_MASK 0x1a
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG9_MODE_SWM_VCO_LOCK 27
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG9_MODE_SWM_VCO_LOCK_MASK 0x1b
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG9_MODE_SWM_PLL_DIVN_FO_SDM 32
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG9_MODE_SWM_PLL_DIVN_FO_SDM_MASK 0x20
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG9_MODE_SWM_TMU_GRP_PLL_OUT 33
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG9_MODE_SWM_TMU_GRP_PLL_OUT_MASK 0x21
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int mode : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_switch_matrix_pad_cfg9;
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG9_RST 0x16
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG9_ADDR  0x4001da64


/* pad_cfg10 register */
/*----------------------*/
/* SWM Pad 10 configuration */
/* mode : Mode configuration for SWM pad */
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG10_MODE_MASK 0x00ff
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG10_MODE_POS  0
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG10_MODE_FIXED_0 0
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG10_MODE_FIXED_0_MASK 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG10_MODE_FIXED_1 1
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG10_MODE_FIXED_1_MASK 0x1
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG10_MODE_SWM_REF_CLK 15
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG10_MODE_SWM_REF_CLK_MASK 0xf
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG10_MODE_GPIO_10 22
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG10_MODE_GPIO_10_MASK 0x16
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG10_MODE_SWM_ANT_SWITCH 26
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG10_MODE_SWM_ANT_SWITCH_MASK 0x1a
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG10_MODE_SWM_VCO_LOCK 27
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG10_MODE_SWM_VCO_LOCK_MASK 0x1b
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG10_MODE_SWM_PLL_DIVN_FO_SDM 32
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG10_MODE_SWM_PLL_DIVN_FO_SDM_MASK 0x20
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG10_MODE_SWM_TMU_GRP_PLL_OUT 33
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG10_MODE_SWM_TMU_GRP_PLL_OUT_MASK 0x21
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int mode : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_switch_matrix_pad_cfg10;
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG10_RST 0x16
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG10_ADDR  0x4001da68


/* pad_cfg11 register */
/*----------------------*/
/* SWM Pad 11 configuration */
/* mode : Mode configuration for SWM pad */
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG11_MODE_MASK 0x00ff
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG11_MODE_POS  0
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG11_MODE_FIXED_0 0
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG11_MODE_FIXED_0_MASK 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG11_MODE_FIXED_1 1
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG11_MODE_FIXED_1_MASK 0x1
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG11_MODE_SWM_REF_CLK 15
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG11_MODE_SWM_REF_CLK_MASK 0xf
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG11_MODE_GPIO_11 22
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG11_MODE_GPIO_11_MASK 0x16
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG11_MODE_SWM_ANT_SWITCH 26
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG11_MODE_SWM_ANT_SWITCH_MASK 0x1a
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG11_MODE_SWM_VCO_LOCK 27
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG11_MODE_SWM_VCO_LOCK_MASK 0x1b
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG11_MODE_SWM_PLL_DIVN_FO_SDM 32
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG11_MODE_SWM_PLL_DIVN_FO_SDM_MASK 0x20
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG11_MODE_SWM_TMU_GRP_PLL_OUT 33
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG11_MODE_SWM_TMU_GRP_PLL_OUT_MASK 0x21
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int mode : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_switch_matrix_pad_cfg11;
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG11_RST 0x16
#define EXTAPB_REGFILE_SWITCH_MATRIX_PAD_CFG11_ADDR  0x4001da6c


/* sig_cfg0 register */
/*----------------------*/
/* SWM Internal signal configuration - op_swm_spi_clk */
/* mode : Mode configuration for SWM internal signal */
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG0_MODE_MASK 0x00ff
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG0_MODE_POS  0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG0_MODE_FIXED_0 0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG0_MODE_FIXED_0_MASK 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG0_MODE_FIXED_1 1
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG0_MODE_FIXED_1_MASK 0x1
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG0_MODE_SWM_00 2
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG0_MODE_SWM_00_MASK 0x2
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG0_MODE_SWM_01 3
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG0_MODE_SWM_01_MASK 0x3
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG0_MODE_SWM_02 4
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG0_MODE_SWM_02_MASK 0x4
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG0_MODE_SWM_03 5
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG0_MODE_SWM_03_MASK 0x5
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG0_MODE_SWM_04 6
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG0_MODE_SWM_04_MASK 0x6
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG0_MODE_SWM_05 7
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG0_MODE_SWM_05_MASK 0x7
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG0_MODE_SWM_06 8
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG0_MODE_SWM_06_MASK 0x8
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG0_MODE_SWM_07 9
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG0_MODE_SWM_07_MASK 0x9
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG0_MODE_SWM_08 10
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG0_MODE_SWM_08_MASK 0xa
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG0_MODE_SWM_09 11
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG0_MODE_SWM_09_MASK 0xb
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG0_MODE_SWM_10 12
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG0_MODE_SWM_10_MASK 0xc
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG0_MODE_SWM_11 13
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG0_MODE_SWM_11_MASK 0xd
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int mode : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_switch_matrix_sig_cfg0;
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG0_RST 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG0_ADDR  0x4001da70


/* sig_cfg1 register */
/*----------------------*/
/* SWM Internal signal configuration - op_swm_spi_cs_n */
/* mode : Mode configuration for SWM internal signal */
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG1_MODE_MASK 0x00ff
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG1_MODE_POS  0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG1_MODE_FIXED_0 0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG1_MODE_FIXED_0_MASK 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG1_MODE_FIXED_1 1
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG1_MODE_FIXED_1_MASK 0x1
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG1_MODE_SWM_00 2
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG1_MODE_SWM_00_MASK 0x2
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG1_MODE_SWM_01 3
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG1_MODE_SWM_01_MASK 0x3
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG1_MODE_SWM_02 4
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG1_MODE_SWM_02_MASK 0x4
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG1_MODE_SWM_03 5
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG1_MODE_SWM_03_MASK 0x5
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG1_MODE_SWM_04 6
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG1_MODE_SWM_04_MASK 0x6
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG1_MODE_SWM_05 7
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG1_MODE_SWM_05_MASK 0x7
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG1_MODE_SWM_06 8
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG1_MODE_SWM_06_MASK 0x8
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG1_MODE_SWM_07 9
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG1_MODE_SWM_07_MASK 0x9
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG1_MODE_SWM_08 10
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG1_MODE_SWM_08_MASK 0xa
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG1_MODE_SWM_09 11
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG1_MODE_SWM_09_MASK 0xb
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG1_MODE_SWM_10 12
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG1_MODE_SWM_10_MASK 0xc
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG1_MODE_SWM_11 13
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG1_MODE_SWM_11_MASK 0xd
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int mode : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_switch_matrix_sig_cfg1;
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG1_RST 0x1
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG1_ADDR  0x4001da74


/* sig_cfg2 register */
/*----------------------*/
/* SWM Internal signal configuration - op_swm_spi_mosi */
/* mode : Mode configuration for SWM internal signal */
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG2_MODE_MASK 0x00ff
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG2_MODE_POS  0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG2_MODE_FIXED_0 0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG2_MODE_FIXED_0_MASK 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG2_MODE_FIXED_1 1
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG2_MODE_FIXED_1_MASK 0x1
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG2_MODE_SWM_00 2
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG2_MODE_SWM_00_MASK 0x2
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG2_MODE_SWM_01 3
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG2_MODE_SWM_01_MASK 0x3
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG2_MODE_SWM_02 4
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG2_MODE_SWM_02_MASK 0x4
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG2_MODE_SWM_03 5
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG2_MODE_SWM_03_MASK 0x5
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG2_MODE_SWM_04 6
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG2_MODE_SWM_04_MASK 0x6
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG2_MODE_SWM_05 7
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG2_MODE_SWM_05_MASK 0x7
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG2_MODE_SWM_06 8
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG2_MODE_SWM_06_MASK 0x8
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG2_MODE_SWM_07 9
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG2_MODE_SWM_07_MASK 0x9
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG2_MODE_SWM_08 10
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG2_MODE_SWM_08_MASK 0xa
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG2_MODE_SWM_09 11
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG2_MODE_SWM_09_MASK 0xb
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG2_MODE_SWM_10 12
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG2_MODE_SWM_10_MASK 0xc
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG2_MODE_SWM_11 13
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG2_MODE_SWM_11_MASK 0xd
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int mode : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_switch_matrix_sig_cfg2;
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG2_RST 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG2_ADDR  0x4001da78


/* sig_cfg4 register */
/*----------------------*/
/* SWM Internal signal configuration - op_swm_ref_clk */
/* mode : Mode configuration for SWM internal signal */
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG4_MODE_MASK 0x00ff
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG4_MODE_POS  0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG4_MODE_FIXED_0 0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG4_MODE_FIXED_0_MASK 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG4_MODE_FIXED_1 1
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG4_MODE_FIXED_1_MASK 0x1
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG4_MODE_SWM_00 2
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG4_MODE_SWM_00_MASK 0x2
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG4_MODE_SWM_01 3
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG4_MODE_SWM_01_MASK 0x3
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG4_MODE_SWM_02 4
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG4_MODE_SWM_02_MASK 0x4
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG4_MODE_SWM_03 5
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG4_MODE_SWM_03_MASK 0x5
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG4_MODE_SWM_04 6
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG4_MODE_SWM_04_MASK 0x6
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG4_MODE_SWM_05 7
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG4_MODE_SWM_05_MASK 0x7
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG4_MODE_SWM_06 8
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG4_MODE_SWM_06_MASK 0x8
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG4_MODE_SWM_07 9
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG4_MODE_SWM_07_MASK 0x9
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG4_MODE_SWM_08 10
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG4_MODE_SWM_08_MASK 0xa
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG4_MODE_SWM_09 11
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG4_MODE_SWM_09_MASK 0xb
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG4_MODE_SWM_10 12
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG4_MODE_SWM_10_MASK 0xc
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG4_MODE_SWM_11 13
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG4_MODE_SWM_11_MASK 0xd
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int mode : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_switch_matrix_sig_cfg4;
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG4_RST 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG4_ADDR  0x4001da80


/* sig_cfg5 register */
/*----------------------*/
/* SWM Internal signal configuration - op_swm_dbg_clk */
/* mode : Mode configuration for SWM internal signal */
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG5_MODE_MASK 0x00ff
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG5_MODE_POS  0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG5_MODE_FIXED_0 0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG5_MODE_FIXED_0_MASK 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG5_MODE_FIXED_1 1
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG5_MODE_FIXED_1_MASK 0x1
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG5_MODE_SWM_00 2
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG5_MODE_SWM_00_MASK 0x2
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG5_MODE_SWM_01 3
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG5_MODE_SWM_01_MASK 0x3
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG5_MODE_SWM_02 4
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG5_MODE_SWM_02_MASK 0x4
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG5_MODE_SWM_03 5
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG5_MODE_SWM_03_MASK 0x5
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG5_MODE_SWM_04 6
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG5_MODE_SWM_04_MASK 0x6
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG5_MODE_SWM_05 7
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG5_MODE_SWM_05_MASK 0x7
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG5_MODE_SWM_06 8
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG5_MODE_SWM_06_MASK 0x8
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG5_MODE_SWM_07 9
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG5_MODE_SWM_07_MASK 0x9
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG5_MODE_SWM_08 10
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG5_MODE_SWM_08_MASK 0xa
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG5_MODE_SWM_09 11
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG5_MODE_SWM_09_MASK 0xb
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG5_MODE_SWM_10 12
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG5_MODE_SWM_10_MASK 0xc
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG5_MODE_SWM_11 13
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG5_MODE_SWM_11_MASK 0xd
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int mode : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_switch_matrix_sig_cfg5;
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG5_RST 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG5_ADDR  0x4001da84


/* sig_cfg6 register */
/*----------------------*/
/* SWM Internal signal configuration - op_swm_hsp_clk */
/* mode : Mode configuration for SWM internal signal */
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG6_MODE_MASK 0x00ff
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG6_MODE_POS  0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG6_MODE_FIXED_0 0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG6_MODE_FIXED_0_MASK 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG6_MODE_FIXED_1 1
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG6_MODE_FIXED_1_MASK 0x1
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG6_MODE_SWM_00 2
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG6_MODE_SWM_00_MASK 0x2
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG6_MODE_SWM_01 3
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG6_MODE_SWM_01_MASK 0x3
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG6_MODE_SWM_02 4
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG6_MODE_SWM_02_MASK 0x4
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG6_MODE_SWM_03 5
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG6_MODE_SWM_03_MASK 0x5
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG6_MODE_SWM_04 6
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG6_MODE_SWM_04_MASK 0x6
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG6_MODE_SWM_05 7
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG6_MODE_SWM_05_MASK 0x7
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG6_MODE_SWM_06 8
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG6_MODE_SWM_06_MASK 0x8
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG6_MODE_SWM_07 9
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG6_MODE_SWM_07_MASK 0x9
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG6_MODE_SWM_08 10
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG6_MODE_SWM_08_MASK 0xa
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG6_MODE_SWM_09 11
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG6_MODE_SWM_09_MASK 0xb
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG6_MODE_SWM_10 12
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG6_MODE_SWM_10_MASK 0xc
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG6_MODE_SWM_11 13
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG6_MODE_SWM_11_MASK 0xd
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int mode : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_switch_matrix_sig_cfg6;
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG6_RST 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG6_ADDR  0x4001da88


/* sig_cfg7 register */
/*----------------------*/
/* SWM Internal signal configuration - op_gpio(11...0) */
/* mode : Mode configuration for SWM internal signal */
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG7_MODE_MASK 0x00ff
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG7_MODE_POS  0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG7_MODE_FIXED_0 0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG7_MODE_FIXED_0_MASK 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG7_MODE_FIXED_1 1
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG7_MODE_FIXED_1_MASK 0x1
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG7_MODE_SWM 2
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG7_MODE_SWM_MASK 0x2
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int mode : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_switch_matrix_sig_cfg7;
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG7_RST 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG7_ADDR  0x4001da8c


/* sig_cfg8 register */
/*----------------------*/
/* SWM Internal signal configuration - op_swm_r_cal_start_clx */
/* mode : Mode configuration for SWM internal signal */
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG8_MODE_MASK 0x00ff
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG8_MODE_POS  0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG8_MODE_FIXED_0 0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG8_MODE_FIXED_0_MASK 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG8_MODE_FIXED_1 1
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG8_MODE_FIXED_1_MASK 0x1
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG8_MODE_SWM_00 2
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG8_MODE_SWM_00_MASK 0x2
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG8_MODE_SWM_01 3
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG8_MODE_SWM_01_MASK 0x3
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG8_MODE_SWM_02 4
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG8_MODE_SWM_02_MASK 0x4
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG8_MODE_SWM_03 5
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG8_MODE_SWM_03_MASK 0x5
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG8_MODE_SWM_04 6
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG8_MODE_SWM_04_MASK 0x6
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG8_MODE_SWM_05 7
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG8_MODE_SWM_05_MASK 0x7
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG8_MODE_SWM_06 8
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG8_MODE_SWM_06_MASK 0x8
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG8_MODE_SWM_07 9
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG8_MODE_SWM_07_MASK 0x9
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG8_MODE_SWM_08 10
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG8_MODE_SWM_08_MASK 0xa
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG8_MODE_SWM_09 11
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG8_MODE_SWM_09_MASK 0xb
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG8_MODE_SWM_10 12
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG8_MODE_SWM_10_MASK 0xc
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG8_MODE_SWM_11 13
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG8_MODE_SWM_11_MASK 0xd
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int mode : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_switch_matrix_sig_cfg8;
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG8_RST 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG8_ADDR  0x4001da90


/* sig_cfg11 register */
/*----------------------*/
/* SWM Internal signal configuration - op_swm_dac_par(7...0) */
/* mode : Mode configuration for SWM internal signal */
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG11_MODE_MASK 0x00ff
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG11_MODE_POS  0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG11_MODE_FIXED_0 0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG11_MODE_FIXED_0_MASK 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG11_MODE_FIXED_1 1
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG11_MODE_FIXED_1_MASK 0x1
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG11_MODE_SWM 2
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG11_MODE_SWM_MASK 0x2
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int mode : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_switch_matrix_sig_cfg11;
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG11_RST 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG11_ADDR  0x4001da9c


/* sig_cfg12 register */
/*----------------------*/
/* SWM Internal signal configuration - op_swm_par_pll_divn(7...0) */
/* mode : Mode configuration for SWM internal signal */
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG12_MODE_MASK 0x00ff
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG12_MODE_POS  0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG12_MODE_FIXED_0 0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG12_MODE_FIXED_0_MASK 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG12_MODE_FIXED_1 1
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG12_MODE_FIXED_1_MASK 0x1
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG12_MODE_SWM 2
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG12_MODE_SWM_MASK 0x2
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int mode : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_switch_matrix_sig_cfg12;
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG12_RST 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG12_ADDR  0x4001daa0


/* sig_cfg13 register */
/*----------------------*/
/* SWM Internal signal configuration - op_swm_xot_start */
/* mode : Mode configuration for SWM internal signal */
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG13_MODE_MASK 0x00ff
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG13_MODE_POS  0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG13_MODE_FIXED_0 0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG13_MODE_FIXED_0_MASK 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG13_MODE_FIXED_1 1
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG13_MODE_FIXED_1_MASK 0x1
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG13_MODE_SWM_00 2
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG13_MODE_SWM_00_MASK 0x2
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG13_MODE_SWM_01 3
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG13_MODE_SWM_01_MASK 0x3
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG13_MODE_SWM_02 4
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG13_MODE_SWM_02_MASK 0x4
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG13_MODE_SWM_03 5
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG13_MODE_SWM_03_MASK 0x5
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG13_MODE_SWM_04 6
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG13_MODE_SWM_04_MASK 0x6
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG13_MODE_SWM_05 7
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG13_MODE_SWM_05_MASK 0x7
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG13_MODE_SWM_06 8
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG13_MODE_SWM_06_MASK 0x8
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG13_MODE_SWM_07 9
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG13_MODE_SWM_07_MASK 0x9
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG13_MODE_SWM_08 10
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG13_MODE_SWM_08_MASK 0xa
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG13_MODE_SWM_09 11
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG13_MODE_SWM_09_MASK 0xb
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG13_MODE_SWM_10 12
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG13_MODE_SWM_10_MASK 0xc
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG13_MODE_SWM_11 13
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG13_MODE_SWM_11_MASK 0xd
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int mode : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_switch_matrix_sig_cfg13;
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG13_RST 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG13_ADDR  0x4001daa4


/* sig_cfg14 register */
/*----------------------*/
/* SWM Internal signal configuration - op_swm_dac_ser_frame */
/* mode : Mode configuration for SWM internal signal */
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG14_MODE_MASK 0x00ff
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG14_MODE_POS  0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG14_MODE_FIXED_0 0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG14_MODE_FIXED_0_MASK 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG14_MODE_FIXED_1 1
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG14_MODE_FIXED_1_MASK 0x1
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG14_MODE_SWM_00 2
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG14_MODE_SWM_00_MASK 0x2
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG14_MODE_SWM_01 3
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG14_MODE_SWM_01_MASK 0x3
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG14_MODE_SWM_02 4
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG14_MODE_SWM_02_MASK 0x4
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG14_MODE_SWM_03 5
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG14_MODE_SWM_03_MASK 0x5
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG14_MODE_SWM_04 6
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG14_MODE_SWM_04_MASK 0x6
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG14_MODE_SWM_05 7
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG14_MODE_SWM_05_MASK 0x7
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG14_MODE_SWM_06 8
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG14_MODE_SWM_06_MASK 0x8
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG14_MODE_SWM_07 9
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG14_MODE_SWM_07_MASK 0x9
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG14_MODE_SWM_08 10
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG14_MODE_SWM_08_MASK 0xa
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG14_MODE_SWM_09 11
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG14_MODE_SWM_09_MASK 0xb
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG14_MODE_SWM_10 12
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG14_MODE_SWM_10_MASK 0xc
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG14_MODE_SWM_11 13
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG14_MODE_SWM_11_MASK 0xd
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int mode : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_switch_matrix_sig_cfg14;
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG14_RST 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG14_ADDR  0x4001daa8


/* sig_cfg17 register */
/*----------------------*/
/* SWM Internal signal configuration - op_swm_xot_clk */
/* mode : Mode configuration for SWM internal signal */
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG17_MODE_MASK 0x00ff
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG17_MODE_POS  0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG17_MODE_FIXED_0 0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG17_MODE_FIXED_0_MASK 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG17_MODE_FIXED_1 1
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG17_MODE_FIXED_1_MASK 0x1
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG17_MODE_SWM_00 2
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG17_MODE_SWM_00_MASK 0x2
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG17_MODE_SWM_01 3
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG17_MODE_SWM_01_MASK 0x3
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG17_MODE_SWM_02 4
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG17_MODE_SWM_02_MASK 0x4
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG17_MODE_SWM_03 5
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG17_MODE_SWM_03_MASK 0x5
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG17_MODE_SWM_04 6
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG17_MODE_SWM_04_MASK 0x6
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG17_MODE_SWM_05 7
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG17_MODE_SWM_05_MASK 0x7
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG17_MODE_SWM_06 8
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG17_MODE_SWM_06_MASK 0x8
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG17_MODE_SWM_07 9
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG17_MODE_SWM_07_MASK 0x9
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG17_MODE_SWM_08 10
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG17_MODE_SWM_08_MASK 0xa
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG17_MODE_SWM_09 11
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG17_MODE_SWM_09_MASK 0xb
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG17_MODE_SWM_10 12
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG17_MODE_SWM_10_MASK 0xc
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG17_MODE_SWM_11 13
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG17_MODE_SWM_11_MASK 0xd
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int mode : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_switch_matrix_sig_cfg17;
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG17_RST 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG17_ADDR  0x4001dab4


/* sig_cfg18 register */
/*----------------------*/
/* SWM Internal signal configuration - op_swm_dac_ser_data(3...0) */
/* mode : Mode configuration for SWM internal signal */
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG18_MODE_MASK 0x00ff
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG18_MODE_POS  0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG18_MODE_FIXED_0 0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG18_MODE_FIXED_0_MASK 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG18_MODE_FIXED_1 1
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG18_MODE_FIXED_1_MASK 0x1
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG18_MODE_SWM 2
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG18_MODE_SWM_MASK 0x2
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int mode : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_switch_matrix_sig_cfg18;
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG18_RST 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SIG_CFG18_ADDR  0x4001dab8


/* dcb_cfg register */
/*----------------------*/
/* DCB configuration */
/* rf_dcb0 : Enable RF DCB0 */
/* rf_dcb1 : Enable RF DCB1 */
/* pmu_dcb0 : Enable PMU DCB0 */
/* pmu_dcb1 : Enable PMU DCB1 */
#define EXTAPB_REGFILE_SWITCH_MATRIX_DCB_CFG_RF_DCB0_MASK 0x0001
#define EXTAPB_REGFILE_SWITCH_MATRIX_DCB_CFG_RF_DCB0_POS  0
#define EXTAPB_REGFILE_SWITCH_MATRIX_DCB_CFG_RF_DCB0_DISABLE 0
#define EXTAPB_REGFILE_SWITCH_MATRIX_DCB_CFG_RF_DCB0_DISABLE_MASK 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_DCB_CFG_RF_DCB0_ENABLE 1
#define EXTAPB_REGFILE_SWITCH_MATRIX_DCB_CFG_RF_DCB0_ENABLE_MASK 0x1
#define EXTAPB_REGFILE_SWITCH_MATRIX_DCB_CFG_RF_DCB1_MASK 0x0002
#define EXTAPB_REGFILE_SWITCH_MATRIX_DCB_CFG_RF_DCB1_POS  1
#define EXTAPB_REGFILE_SWITCH_MATRIX_DCB_CFG_RF_DCB1_DISABLE 0
#define EXTAPB_REGFILE_SWITCH_MATRIX_DCB_CFG_RF_DCB1_DISABLE_MASK 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_DCB_CFG_RF_DCB1_ENABLE 1
#define EXTAPB_REGFILE_SWITCH_MATRIX_DCB_CFG_RF_DCB1_ENABLE_MASK 0x2
#define EXTAPB_REGFILE_SWITCH_MATRIX_DCB_CFG_PMU_DCB0_MASK 0x0004
#define EXTAPB_REGFILE_SWITCH_MATRIX_DCB_CFG_PMU_DCB0_POS  2
#define EXTAPB_REGFILE_SWITCH_MATRIX_DCB_CFG_PMU_DCB0_DISABLE 0
#define EXTAPB_REGFILE_SWITCH_MATRIX_DCB_CFG_PMU_DCB0_DISABLE_MASK 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_DCB_CFG_PMU_DCB0_ENABLE 1
#define EXTAPB_REGFILE_SWITCH_MATRIX_DCB_CFG_PMU_DCB0_ENABLE_MASK 0x4
#define EXTAPB_REGFILE_SWITCH_MATRIX_DCB_CFG_PMU_DCB1_MASK 0x0008
#define EXTAPB_REGFILE_SWITCH_MATRIX_DCB_CFG_PMU_DCB1_POS  3
#define EXTAPB_REGFILE_SWITCH_MATRIX_DCB_CFG_PMU_DCB1_DISABLE 0
#define EXTAPB_REGFILE_SWITCH_MATRIX_DCB_CFG_PMU_DCB1_DISABLE_MASK 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_DCB_CFG_PMU_DCB1_ENABLE 1
#define EXTAPB_REGFILE_SWITCH_MATRIX_DCB_CFG_PMU_DCB1_ENABLE_MASK 0x8
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int rf_dcb0 : 1;
    unsigned int rf_dcb1 : 1;
    unsigned int pmu_dcb0 : 1;
    unsigned int pmu_dcb1 : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_switch_matrix_dcb_cfg;
#define EXTAPB_REGFILE_SWITCH_MATRIX_DCB_CFG_RST 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_DCB_CFG_ADDR  0x4001dac8


/* reserved_out register */
/*----------------------*/
/* Reserved OUT */
/* value : reserved vector */
#define EXTAPB_REGFILE_SWITCH_MATRIX_RESERVED_OUT_VALUE_MASK 0xffff
#define EXTAPB_REGFILE_SWITCH_MATRIX_RESERVED_OUT_VALUE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int value : 16;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_switch_matrix_reserved_out;
#define EXTAPB_REGFILE_SWITCH_MATRIX_RESERVED_OUT_RST 0x1
#define EXTAPB_REGFILE_SWITCH_MATRIX_RESERVED_OUT_ADDR  0x4001dacc


/* reserved_in register */
/*----------------------*/
/* Reserved IN */
/* value : reserved vector */
#define EXTAPB_REGFILE_SWITCH_MATRIX_RESERVED_IN_VALUE_MASK 0xffff
#define EXTAPB_REGFILE_SWITCH_MATRIX_RESERVED_IN_VALUE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int value : 16;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_switch_matrix_reserved_in;
#define EXTAPB_REGFILE_SWITCH_MATRIX_RESERVED_IN_RST 0x1
#define EXTAPB_REGFILE_SWITCH_MATRIX_RESERVED_IN_DYNAMIC true
#define EXTAPB_REGFILE_SWITCH_MATRIX_RESERVED_IN_SNAPCLOCK 1
#define EXTAPB_REGFILE_SWITCH_MATRIX_RESERVED_IN_ADDR  0x4001dad0


/* override_out register */
/*----------------------*/
/* This register represents an override for each SWM output pin in the toplevel switch matrix. When the corresponding bit in this register has been set to '1', the corresponding configuration will be forced upon the toplevel switch matrix. */
/* value : empty */
#define EXTAPB_REGFILE_SWITCH_MATRIX_OVERRIDE_OUT_VALUE_MASK 0x0fff
#define EXTAPB_REGFILE_SWITCH_MATRIX_OVERRIDE_OUT_VALUE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int value : 12;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_switch_matrix_override_out;
#define EXTAPB_REGFILE_SWITCH_MATRIX_OVERRIDE_OUT_RST 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_OVERRIDE_OUT_ADDR  0x4001dad4


/* spi_location register */
/*----------------------*/
/* empty */
/* value : empty */
#define EXTAPB_REGFILE_SWITCH_MATRIX_SPI_LOCATION_VALUE_MASK 0x0003
#define EXTAPB_REGFILE_SWITCH_MATRIX_SPI_LOCATION_VALUE_POS  0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SPI_LOCATION_VALUE_SPI_LOC_0 0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SPI_LOCATION_VALUE_SPI_LOC_0_MASK 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SPI_LOCATION_VALUE_SPI_LOC_1 1
#define EXTAPB_REGFILE_SWITCH_MATRIX_SPI_LOCATION_VALUE_SPI_LOC_1_MASK 0x1
#define EXTAPB_REGFILE_SWITCH_MATRIX_SPI_LOCATION_VALUE_SPI_LOC_2 2
#define EXTAPB_REGFILE_SWITCH_MATRIX_SPI_LOCATION_VALUE_SPI_LOC_2_MASK 0x2
#define EXTAPB_REGFILE_SWITCH_MATRIX_SPI_LOCATION_VALUE_SPI_LOC_3 3
#define EXTAPB_REGFILE_SWITCH_MATRIX_SPI_LOCATION_VALUE_SPI_LOC_3_MASK 0x3
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int value : 2;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_switch_matrix_spi_location;
#define EXTAPB_REGFILE_SWITCH_MATRIX_SPI_LOCATION_RST 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_SPI_LOCATION_ADDR  0x4001dad8


/* ana_enable register */
/*----------------------*/
/* empty */
/* value : empty */
#define EXTAPB_REGFILE_SWITCH_MATRIX_ANA_ENABLE_VALUE_MASK 0x000f
#define EXTAPB_REGFILE_SWITCH_MATRIX_ANA_ENABLE_VALUE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int value : 4;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_switch_matrix_ana_enable;
#define EXTAPB_REGFILE_SWITCH_MATRIX_ANA_ENABLE_RST 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_ANA_ENABLE_ADDR  0x4001dadc


/* ehs0 register */
/*----------------------*/
/* Enable PAD low speed. To be used in conjunction with EHS1. Low speed: EHS1='0',EHS0='1'. Nominal speed: EHS1='0',EHS0='0'. High speed: EHS1='1'. */
/* value : empty */
#define EXTAPB_REGFILE_SWITCH_MATRIX_EHS0_VALUE_MASK 0x0fff
#define EXTAPB_REGFILE_SWITCH_MATRIX_EHS0_VALUE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int value : 12;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_switch_matrix_ehs0;
#define EXTAPB_REGFILE_SWITCH_MATRIX_EHS0_RST 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_EHS0_ADDR  0x4001dae0


/* ehs1 register */
/*----------------------*/
/* Enable PAD high speed. To be used in conjunction with EHS0. Low speed: EHS1='0',EHS0='1'. Nominal speed: EHS1='0',EHS0='0'. High speed: EHS1='1'. */
/* value : empty */
#define EXTAPB_REGFILE_SWITCH_MATRIX_EHS1_VALUE_MASK 0x0fff
#define EXTAPB_REGFILE_SWITCH_MATRIX_EHS1_VALUE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int value : 12;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_switch_matrix_ehs1;
#define EXTAPB_REGFILE_SWITCH_MATRIX_EHS1_RST 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_EHS1_ADDR  0x4001dae4


/* override_in register */
/*----------------------*/
/* This register represents an override for each SWM input pin in the toplevel switch matrix. When the corresponding bit in this register has been set to '1', the corresponding configuration will be forced upon the toplevel switch matrix. */
/* value : empty */
#define EXTAPB_REGFILE_SWITCH_MATRIX_OVERRIDE_IN_VALUE_MASK 0x0fff
#define EXTAPB_REGFILE_SWITCH_MATRIX_OVERRIDE_IN_VALUE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int value : 12;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_switch_matrix_override_in;
#define EXTAPB_REGFILE_SWITCH_MATRIX_OVERRIDE_IN_RST 0x0
#define EXTAPB_REGFILE_SWITCH_MATRIX_OVERRIDE_IN_ADDR  0x4001dae8


typedef struct{
    t_extapb_regfile_switch_matrix_pad_cfg0  pad_cfg0;
    t_extapb_regfile_switch_matrix_pad_cfg1  pad_cfg1;
    t_extapb_regfile_switch_matrix_pad_cfg2  pad_cfg2;
    t_extapb_regfile_switch_matrix_pad_cfg3  pad_cfg3;
    t_extapb_regfile_switch_matrix_pad_cfg4  pad_cfg4;
    t_extapb_regfile_switch_matrix_pad_cfg5  pad_cfg5;
    t_extapb_regfile_switch_matrix_pad_cfg6  pad_cfg6;
    t_extapb_regfile_switch_matrix_pad_cfg7  pad_cfg7;
    t_extapb_regfile_switch_matrix_pad_cfg8  pad_cfg8;
    t_extapb_regfile_switch_matrix_pad_cfg9  pad_cfg9;
    t_extapb_regfile_switch_matrix_pad_cfg10  pad_cfg10;
    t_extapb_regfile_switch_matrix_pad_cfg11  pad_cfg11;
    t_extapb_regfile_switch_matrix_sig_cfg0  sig_cfg0;
    t_extapb_regfile_switch_matrix_sig_cfg1  sig_cfg1;
    t_extapb_regfile_switch_matrix_sig_cfg2  sig_cfg2;
    unsigned int  reserved0[1];
    t_extapb_regfile_switch_matrix_sig_cfg4  sig_cfg4;
    t_extapb_regfile_switch_matrix_sig_cfg5  sig_cfg5;
    t_extapb_regfile_switch_matrix_sig_cfg6  sig_cfg6;
    t_extapb_regfile_switch_matrix_sig_cfg7  sig_cfg7;
    t_extapb_regfile_switch_matrix_sig_cfg8  sig_cfg8;
    unsigned int  reserved1[2];
    t_extapb_regfile_switch_matrix_sig_cfg11  sig_cfg11;
    t_extapb_regfile_switch_matrix_sig_cfg12  sig_cfg12;
    t_extapb_regfile_switch_matrix_sig_cfg13  sig_cfg13;
    t_extapb_regfile_switch_matrix_sig_cfg14  sig_cfg14;
    unsigned int  reserved2[2];
    t_extapb_regfile_switch_matrix_sig_cfg17  sig_cfg17;
    t_extapb_regfile_switch_matrix_sig_cfg18  sig_cfg18;
    unsigned int  reserved3[3];
    t_extapb_regfile_switch_matrix_dcb_cfg  dcb_cfg;
    t_extapb_regfile_switch_matrix_reserved_out  reserved_out;
    t_extapb_regfile_switch_matrix_reserved_in  reserved_in;
    t_extapb_regfile_switch_matrix_override_out  override_out;
    t_extapb_regfile_switch_matrix_spi_location  spi_location;
    t_extapb_regfile_switch_matrix_ana_enable  ana_enable;
    t_extapb_regfile_switch_matrix_ehs0  ehs0;
    t_extapb_regfile_switch_matrix_ehs1  ehs1;
    t_extapb_regfile_switch_matrix_override_in  override_in;
} t_extapb_regfile_switch_matrix;
#define EXTAPB_REGFILE_SWITCH_MATRIX_ADDR 0x4001da40
#define EXTAPB_REGFILE_SWITCH_MATRIX ((t_extapb_regfile_switch_matrix *)EXTAPB_REGFILE_SWITCH_MATRIX_ADDR)


/* debug_adc module */
/*-------------------------*/


/* enable register */
/*----------------------*/
/* Enabling of the clocks. */
/* gen : Enabling of the SAR-ADC debug. */
/* ref : Enabling of the reference clock. */
/* dbg : Enabling of the externally applied debug clock. */
#define EXTAPB_REGFILE_DEBUG_ADC_ENABLE_GEN_MASK 0x0001
#define EXTAPB_REGFILE_DEBUG_ADC_ENABLE_GEN_POS  0
#define EXTAPB_REGFILE_DEBUG_ADC_ENABLE_REF_MASK 0x0002
#define EXTAPB_REGFILE_DEBUG_ADC_ENABLE_REF_POS  1
#define EXTAPB_REGFILE_DEBUG_ADC_ENABLE_DBG_MASK 0x0004
#define EXTAPB_REGFILE_DEBUG_ADC_ENABLE_DBG_POS  2
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int gen : 1;
    unsigned int ref : 1;
    unsigned int dbg : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_debug_adc_enable;
#define EXTAPB_REGFILE_DEBUG_ADC_ENABLE_RST 0x0
#define EXTAPB_REGFILE_DEBUG_ADC_ENABLE_ADDR  0x4001db00


/* cfg register */
/*----------------------*/
/* Configuration. */
/* half_speed : Select half or full speed ADC debugging. */
/* select_q : In half speed, select I or Q ADC. */
#define EXTAPB_REGFILE_DEBUG_ADC_CFG_HALF_SPEED_MASK 0x0001
#define EXTAPB_REGFILE_DEBUG_ADC_CFG_HALF_SPEED_POS  0
#define EXTAPB_REGFILE_DEBUG_ADC_CFG_SELECT_Q_MASK 0x0002
#define EXTAPB_REGFILE_DEBUG_ADC_CFG_SELECT_Q_POS  1
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int half_speed : 1;
    unsigned int select_q : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_debug_adc_cfg;
#define EXTAPB_REGFILE_DEBUG_ADC_CFG_RST 0x0
#define EXTAPB_REGFILE_DEBUG_ADC_CFG_ADDR  0x4001db04


/* snap_cmd register */
/*----------------------*/
/* Snap command */
/* trigger_t : trigger toggle to trigger the snap process */
/* done_t : Done toggle indicating that the snap process has been completed. */
#define EXTAPB_REGFILE_DEBUG_ADC_SNAP_CMD_TRIGGER_T_MASK 0x0001
#define EXTAPB_REGFILE_DEBUG_ADC_SNAP_CMD_TRIGGER_T_POS  0
#define EXTAPB_REGFILE_DEBUG_ADC_SNAP_CMD_DONE_T_MASK 0x8000
#define EXTAPB_REGFILE_DEBUG_ADC_SNAP_CMD_DONE_T_POS  15
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int trigger_t : 1;
    unsigned int : 14;
    unsigned int done_t : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_debug_adc_snap_cmd;
#define EXTAPB_REGFILE_DEBUG_ADC_SNAP_CMD_RST 0x0
#define EXTAPB_REGFILE_DEBUG_ADC_SNAP_CMD_ADDR  0x4001db08


/* snap_i register */
/*----------------------*/
/* Snapshot of the SAR ADC I */
/* value : Snapshot value of the SAR ADC I. */
#define EXTAPB_REGFILE_DEBUG_ADC_SNAP_I_VALUE_MASK 0x03ff
#define EXTAPB_REGFILE_DEBUG_ADC_SNAP_I_VALUE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int value : 10;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_debug_adc_snap_i;
#define EXTAPB_REGFILE_DEBUG_ADC_SNAP_I_RST 0x0
#define EXTAPB_REGFILE_DEBUG_ADC_SNAP_I_DYNAMIC true
#define EXTAPB_REGFILE_DEBUG_ADC_SNAP_I_SNAPCLOCK 0
#define EXTAPB_REGFILE_DEBUG_ADC_SNAP_I_ADDR  0x4001db0c


/* snap_q register */
/*----------------------*/
/* Snapshot of the SAR ADC Q */
/* value : Snapshot value of the SAR ADC Q. */
#define EXTAPB_REGFILE_DEBUG_ADC_SNAP_Q_VALUE_MASK 0x03ff
#define EXTAPB_REGFILE_DEBUG_ADC_SNAP_Q_VALUE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int value : 10;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_debug_adc_snap_q;
#define EXTAPB_REGFILE_DEBUG_ADC_SNAP_Q_RST 0x0
#define EXTAPB_REGFILE_DEBUG_ADC_SNAP_Q_DYNAMIC true
#define EXTAPB_REGFILE_DEBUG_ADC_SNAP_Q_SNAPCLOCK 0
#define EXTAPB_REGFILE_DEBUG_ADC_SNAP_Q_ADDR  0x4001db10


typedef struct{
    t_extapb_regfile_debug_adc_enable  enable;
    t_extapb_regfile_debug_adc_cfg  cfg;
    t_extapb_regfile_debug_adc_snap_cmd  snap_cmd;
    t_extapb_regfile_debug_adc_snap_i  snap_i;
    t_extapb_regfile_debug_adc_snap_q  snap_q;
} t_extapb_regfile_debug_adc;
#define EXTAPB_REGFILE_DEBUG_ADC_ADDR 0x4001db00
#define EXTAPB_REGFILE_DEBUG_ADC ((t_extapb_regfile_debug_adc *)EXTAPB_REGFILE_DEBUG_ADC_ADDR)


/* gpio module */
/*-------------------------*/


/* gpio_out register */
/*----------------------*/
/* GPIO output */
/* gpio_out : GPIO out value */
#define EXTAPB_REGFILE_GPIO_GPIO_OUT_GPIO_OUT_MASK 0x0fff
#define EXTAPB_REGFILE_GPIO_GPIO_OUT_GPIO_OUT_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int gpio_out : 12;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_gpio_gpio_out;
#define EXTAPB_REGFILE_GPIO_GPIO_OUT_RST 0x0
#define EXTAPB_REGFILE_GPIO_GPIO_OUT_ADDR  0x4001db20


/* gpio_out_en register */
/*----------------------*/
/* GPIO output enable */
/* gpio_out_en : GPIO out enable value */
#define EXTAPB_REGFILE_GPIO_GPIO_OUT_EN_GPIO_OUT_EN_MASK 0x0fff
#define EXTAPB_REGFILE_GPIO_GPIO_OUT_EN_GPIO_OUT_EN_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int gpio_out_en : 12;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_gpio_gpio_out_en;
#define EXTAPB_REGFILE_GPIO_GPIO_OUT_EN_RST 0x0
#define EXTAPB_REGFILE_GPIO_GPIO_OUT_EN_ADDR  0x4001db24


/* gpio_in register */
/*----------------------*/
/* GPIO input */
/* gpio_in : GPIO input value */
#define EXTAPB_REGFILE_GPIO_GPIO_IN_GPIO_IN_MASK 0x0fff
#define EXTAPB_REGFILE_GPIO_GPIO_IN_GPIO_IN_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int gpio_in : 12;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_gpio_gpio_in;
#define EXTAPB_REGFILE_GPIO_GPIO_IN_RST 0x0
#define EXTAPB_REGFILE_GPIO_GPIO_IN_DYNAMIC true
#define EXTAPB_REGFILE_GPIO_GPIO_IN_SNAPCLOCK 0
#define EXTAPB_REGFILE_GPIO_GPIO_IN_ADDR  0x4001db28


typedef struct{
    t_extapb_regfile_gpio_gpio_out  gpio_out;
    t_extapb_regfile_gpio_gpio_out_en  gpio_out_en;
    t_extapb_regfile_gpio_gpio_in  gpio_in;
} t_extapb_regfile_gpio;
#define EXTAPB_REGFILE_GPIO_ADDR 0x4001db20
#define EXTAPB_REGFILE_GPIO ((t_extapb_regfile_gpio *)EXTAPB_REGFILE_GPIO_ADDR)


/* debug_dac module */
/*-------------------------*/


/* enable register */
/*----------------------*/
/* Enabling of the clocks. */
/* gen : Enabling of the SAR-ADC debug. */
/* ref : Enabling of the reference clock. */
/* dbg : Enabling of the externally applied debug clock. */
/* dac_ovr : DAC override enable */
/* pll_divn_ovr : PLL DIVN override enable */
#define EXTAPB_REGFILE_DEBUG_DAC_ENABLE_GEN_MASK 0x0001
#define EXTAPB_REGFILE_DEBUG_DAC_ENABLE_GEN_POS  0
#define EXTAPB_REGFILE_DEBUG_DAC_ENABLE_REF_MASK 0x0002
#define EXTAPB_REGFILE_DEBUG_DAC_ENABLE_REF_POS  1
#define EXTAPB_REGFILE_DEBUG_DAC_ENABLE_DBG_MASK 0x0004
#define EXTAPB_REGFILE_DEBUG_DAC_ENABLE_DBG_POS  2
#define EXTAPB_REGFILE_DEBUG_DAC_ENABLE_DAC_OVR_MASK 0x0008
#define EXTAPB_REGFILE_DEBUG_DAC_ENABLE_DAC_OVR_POS  3
#define EXTAPB_REGFILE_DEBUG_DAC_ENABLE_PLL_DIVN_OVR_MASK 0x0010
#define EXTAPB_REGFILE_DEBUG_DAC_ENABLE_PLL_DIVN_OVR_POS  4
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int gen : 1;
    unsigned int ref : 1;
    unsigned int dbg : 1;
    unsigned int dac_ovr : 1;
    unsigned int pll_divn_ovr : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_debug_dac_enable;
#define EXTAPB_REGFILE_DEBUG_DAC_ENABLE_RST 0x0
#define EXTAPB_REGFILE_DEBUG_DAC_ENABLE_ADDR  0x4001db40


/* src register */
/*----------------------*/
/* Data source of the DACs. */
/* dac : Data source for the DAC. */
/* pll_divn : Data source for the PLL DIVN. */
#define EXTAPB_REGFILE_DEBUG_DAC_SRC_DAC_MASK 0x0003
#define EXTAPB_REGFILE_DEBUG_DAC_SRC_DAC_POS  0
#define EXTAPB_REGFILE_DEBUG_DAC_SRC_PLL_DIVN_MASK 0x000c
#define EXTAPB_REGFILE_DEBUG_DAC_SRC_PLL_DIVN_POS  2
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int dac : 2;
    unsigned int pll_divn : 2;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_debug_dac_src;
#define EXTAPB_REGFILE_DEBUG_DAC_SRC_RST 0x0
#define EXTAPB_REGFILE_DEBUG_DAC_SRC_ADDR  0x4001db44


/* dac_pll_divn register */
/*----------------------*/
/* Writing to this register sets the DAC and PLL DIVN values simultaneously */
/* dac : Value of the DAC. */
/* pll_divn : Value of the PLL DIVN. */
#define EXTAPB_REGFILE_DEBUG_DAC_DAC_PLL_DIVN_DAC_MASK 0x00ff
#define EXTAPB_REGFILE_DEBUG_DAC_DAC_PLL_DIVN_DAC_POS  0
#define EXTAPB_REGFILE_DEBUG_DAC_DAC_PLL_DIVN_PLL_DIVN_MASK 0x7f00
#define EXTAPB_REGFILE_DEBUG_DAC_DAC_PLL_DIVN_PLL_DIVN_POS  8
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int dac : 8;
    unsigned int pll_divn : 7;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_debug_dac_dac_pll_divn;
#define EXTAPB_REGFILE_DEBUG_DAC_DAC_PLL_DIVN_RST 0x0
#define EXTAPB_REGFILE_DEBUG_DAC_DAC_PLL_DIVN_ADDR  0x4001db48


typedef struct{
    t_extapb_regfile_debug_dac_enable  enable;
    t_extapb_regfile_debug_dac_src  src;
    t_extapb_regfile_debug_dac_dac_pll_divn  dac_pll_divn;
} t_extapb_regfile_debug_dac;
#define EXTAPB_REGFILE_DEBUG_DAC_ADDR 0x4001db40
#define EXTAPB_REGFILE_DEBUG_DAC ((t_extapb_regfile_debug_dac *)EXTAPB_REGFILE_DEBUG_DAC_ADDR)


/* xo_cal module */
/*-------------------------*/


/* cfg register */
/*----------------------*/
/* Configuration of the Crystal Oscillator Calibration module. */
/* start_inv : Polarity of the externally applied START signal. */
/* start_ovr : Override of the START signal towards the RF. */
/* start : Override value of the START signal towards the RF. */
/* stop_inv : Polarity of the STOP signal from the RF. */
/* stop_cntr_end : Generate the external DONE signal when the counter reaches its end. */
/* xo32k_mode : When 0 : 32 MHz XO cal is used, when 1 : 32 kHz XO cal is used */
#define EXTAPB_REGFILE_XO_CAL_CFG_START_INV_MASK 0x0001
#define EXTAPB_REGFILE_XO_CAL_CFG_START_INV_POS  0
#define EXTAPB_REGFILE_XO_CAL_CFG_START_OVR_MASK 0x0002
#define EXTAPB_REGFILE_XO_CAL_CFG_START_OVR_POS  1
#define EXTAPB_REGFILE_XO_CAL_CFG_START_MASK 0x0004
#define EXTAPB_REGFILE_XO_CAL_CFG_START_POS  2
#define EXTAPB_REGFILE_XO_CAL_CFG_STOP_INV_MASK 0x0008
#define EXTAPB_REGFILE_XO_CAL_CFG_STOP_INV_POS  3
#define EXTAPB_REGFILE_XO_CAL_CFG_STOP_CNTR_END_MASK 0x0010
#define EXTAPB_REGFILE_XO_CAL_CFG_STOP_CNTR_END_POS  4
#define EXTAPB_REGFILE_XO_CAL_CFG_XO32K_MODE_MASK 0x0020
#define EXTAPB_REGFILE_XO_CAL_CFG_XO32K_MODE_POS  5
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int start_inv : 1;
    unsigned int start_ovr : 1;
    unsigned int start : 1;
    unsigned int stop_inv : 1;
    unsigned int stop_cntr_end : 1;
    unsigned int xo32k_mode : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_xo_cal_cfg;
#define EXTAPB_REGFILE_XO_CAL_CFG_RST 0x0
#define EXTAPB_REGFILE_XO_CAL_CFG_ADDR  0x4001db80


/* cmd register */
/*----------------------*/
/* Command register */
/* ovr : Override instructing the state machine to use the START/STOP signals from this register. */
/* start : START signal for testing the state machine. */
/* stop : STOP signal for testing the state machine. */
#define EXTAPB_REGFILE_XO_CAL_CMD_OVR_MASK 0x0001
#define EXTAPB_REGFILE_XO_CAL_CMD_OVR_POS  0
#define EXTAPB_REGFILE_XO_CAL_CMD_START_MASK 0x0002
#define EXTAPB_REGFILE_XO_CAL_CMD_START_POS  1
#define EXTAPB_REGFILE_XO_CAL_CMD_STOP_MASK 0x0004
#define EXTAPB_REGFILE_XO_CAL_CMD_STOP_POS  2
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int ovr : 1;
    unsigned int start : 1;
    unsigned int stop : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_xo_cal_cmd;
#define EXTAPB_REGFILE_XO_CAL_CMD_RST 0x0
#define EXTAPB_REGFILE_XO_CAL_CMD_ADDR  0x4001db84


/* status register */
/*----------------------*/
/* Status register */
/* done : Status of the calibration run. */
#define EXTAPB_REGFILE_XO_CAL_STATUS_DONE_MASK 0x0001
#define EXTAPB_REGFILE_XO_CAL_STATUS_DONE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int done : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_xo_cal_status;
#define EXTAPB_REGFILE_XO_CAL_STATUS_RST 0x0
#define EXTAPB_REGFILE_XO_CAL_STATUS_DYNAMIC true
#define EXTAPB_REGFILE_XO_CAL_STATUS_SNAPCLOCK 0
#define EXTAPB_REGFILE_XO_CAL_STATUS_ADDR  0x4001db88


/* cntr register */
/*----------------------*/
/* Counter register */
/* cntr : Result of the counter. */
#define EXTAPB_REGFILE_XO_CAL_CNTR_CNTR_MASK 0xffff
#define EXTAPB_REGFILE_XO_CAL_CNTR_CNTR_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int cntr : 16;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_xo_cal_cntr;
#define EXTAPB_REGFILE_XO_CAL_CNTR_RST 0x0
#define EXTAPB_REGFILE_XO_CAL_CNTR_DYNAMIC true
#define EXTAPB_REGFILE_XO_CAL_CNTR_SNAPCLOCK 0
#define EXTAPB_REGFILE_XO_CAL_CNTR_ADDR  0x4001db8c


typedef struct{
    t_extapb_regfile_xo_cal_cfg  cfg;
    t_extapb_regfile_xo_cal_cmd  cmd;
    t_extapb_regfile_xo_cal_status  status;
    t_extapb_regfile_xo_cal_cntr  cntr;
} t_extapb_regfile_xo_cal;
#define EXTAPB_REGFILE_XO_CAL_ADDR 0x4001db80
#define EXTAPB_REGFILE_XO_CAL ((t_extapb_regfile_xo_cal *)EXTAPB_REGFILE_XO_CAL_ADDR)


/* rf_bgp_cal module */
/*-------------------------*/


/* cfg register */
/*----------------------*/
/* Configuration of the RF Bandgap Calibration module. */
/* pwr_delay : power delay setting */
/* cmp_delay : comparator delay setting */
#define EXTAPB_REGFILE_RF_BGP_CAL_CFG_PWR_DELAY_MASK 0x001f
#define EXTAPB_REGFILE_RF_BGP_CAL_CFG_PWR_DELAY_POS  0
#define EXTAPB_REGFILE_RF_BGP_CAL_CFG_CMP_DELAY_MASK 0x01e0
#define EXTAPB_REGFILE_RF_BGP_CAL_CFG_CMP_DELAY_POS  5
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pwr_delay : 5;
    unsigned int cmp_delay : 4;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rf_bgp_cal_cfg;
#define EXTAPB_REGFILE_RF_BGP_CAL_CFG_RST 0x0
#define EXTAPB_REGFILE_RF_BGP_CAL_CFG_ADDR  0x4001db90


/* iref register */
/*----------------------*/
/* Readable Reference Current output of the RF bandgap calibration */
/* iref : Reference current */
#define EXTAPB_REGFILE_RF_BGP_CAL_IREF_IREF_MASK 0x001f
#define EXTAPB_REGFILE_RF_BGP_CAL_IREF_IREF_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int iref : 5;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rf_bgp_cal_iref;
#define EXTAPB_REGFILE_RF_BGP_CAL_IREF_RST 0x0
#define EXTAPB_REGFILE_RF_BGP_CAL_IREF_DYNAMIC true
#define EXTAPB_REGFILE_RF_BGP_CAL_IREF_SNAPCLOCK 0
#define EXTAPB_REGFILE_RF_BGP_CAL_IREF_ADDR  0x4001db94


/* error register */
/*----------------------*/
/* RF Bandgap Calibration error register */
/* error : error */
/* error_status : error status */
#define EXTAPB_REGFILE_RF_BGP_CAL_ERROR_ERROR_MASK 0x0001
#define EXTAPB_REGFILE_RF_BGP_CAL_ERROR_ERROR_POS  0
#define EXTAPB_REGFILE_RF_BGP_CAL_ERROR_ERROR_STATUS_MASK 0x0006
#define EXTAPB_REGFILE_RF_BGP_CAL_ERROR_ERROR_STATUS_POS  1
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int error : 1;
    unsigned int error_status : 2;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_rf_bgp_cal_error;
#define EXTAPB_REGFILE_RF_BGP_CAL_ERROR_RST 0x0
#define EXTAPB_REGFILE_RF_BGP_CAL_ERROR_DYNAMIC true
#define EXTAPB_REGFILE_RF_BGP_CAL_ERROR_SNAPCLOCK 0
#define EXTAPB_REGFILE_RF_BGP_CAL_ERROR_ADDR  0x4001db98


typedef struct{
    t_extapb_regfile_rf_bgp_cal_cfg  cfg;
    t_extapb_regfile_rf_bgp_cal_iref  iref;
    t_extapb_regfile_rf_bgp_cal_error  error;
} t_extapb_regfile_rf_bgp_cal;
#define EXTAPB_REGFILE_RF_BGP_CAL_ADDR 0x4001db90
#define EXTAPB_REGFILE_RF_BGP_CAL ((t_extapb_regfile_rf_bgp_cal *)EXTAPB_REGFILE_RF_BGP_CAL_ADDR)


/* dummy module */
/*-------------------------*/


/* dummy_reg register */
/*----------------------*/
/* Dummy registers */
/* dummy_val : Dummy value. */
#define EXTAPB_REGFILE_DUMMY_DUMMY_REG_DUMMY_VAL_MASK 0xffff
#define EXTAPB_REGFILE_DUMMY_DUMMY_REG_DUMMY_VAL_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int dummy_val : 16;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_dummy_dummy_reg;
#define EXTAPB_REGFILE_DUMMY_DUMMY_REG_RST 0x0
#define EXTAPB_REGFILE_DUMMY_DUMMY_REG0_ADDR 0x4001dc00
#define EXTAPB_REGFILE_DUMMY_DUMMY_REG0 ((t_extapb_regfile_dummy_dummy_reg *)EXTAPB_REGFILE_DUMMY_DUMMY_REG0_ADDR)
#define EXTAPB_REGFILE_DUMMY_DUMMY_REG1_ADDR 0x4001dc04
#define EXTAPB_REGFILE_DUMMY_DUMMY_REG1 ((t_extapb_regfile_dummy_dummy_reg *)EXTAPB_REGFILE_DUMMY_DUMMY_REG1_ADDR)
#define EXTAPB_REGFILE_DUMMY_DUMMY_REG2_ADDR 0x4001dc08
#define EXTAPB_REGFILE_DUMMY_DUMMY_REG2 ((t_extapb_regfile_dummy_dummy_reg *)EXTAPB_REGFILE_DUMMY_DUMMY_REG2_ADDR)
#define EXTAPB_REGFILE_DUMMY_DUMMY_REG3_ADDR 0x4001dc0c
#define EXTAPB_REGFILE_DUMMY_DUMMY_REG3 ((t_extapb_regfile_dummy_dummy_reg *)EXTAPB_REGFILE_DUMMY_DUMMY_REG3_ADDR)
#define EXTAPB_REGFILE_DUMMY_DUMMY_REG4_ADDR 0x4001dc10
#define EXTAPB_REGFILE_DUMMY_DUMMY_REG4 ((t_extapb_regfile_dummy_dummy_reg *)EXTAPB_REGFILE_DUMMY_DUMMY_REG4_ADDR)
#define EXTAPB_REGFILE_DUMMY_DUMMY_REG5_ADDR 0x4001dc14
#define EXTAPB_REGFILE_DUMMY_DUMMY_REG5 ((t_extapb_regfile_dummy_dummy_reg *)EXTAPB_REGFILE_DUMMY_DUMMY_REG5_ADDR)
#define EXTAPB_REGFILE_DUMMY_DUMMY_REG6_ADDR 0x4001dc18
#define EXTAPB_REGFILE_DUMMY_DUMMY_REG6 ((t_extapb_regfile_dummy_dummy_reg *)EXTAPB_REGFILE_DUMMY_DUMMY_REG6_ADDR)
#define EXTAPB_REGFILE_DUMMY_DUMMY_REG7_ADDR 0x4001dc1c
#define EXTAPB_REGFILE_DUMMY_DUMMY_REG7 ((t_extapb_regfile_dummy_dummy_reg *)EXTAPB_REGFILE_DUMMY_DUMMY_REG7_ADDR)


typedef struct{
    t_extapb_regfile_dummy_dummy_reg  dummy_reg[8];
} t_extapb_regfile_dummy;
#define EXTAPB_REGFILE_DUMMY_ADDR 0x4001dc00
#define EXTAPB_REGFILE_DUMMY ((t_extapb_regfile_dummy *)EXTAPB_REGFILE_DUMMY_ADDR)


/* pa_control module */
/*-------------------------*/


/* pa_ramp_cfg register */
/*----------------------*/
/* TX PA ramp up and down configuration */
/* tx_pa_ramp_init : Indicates point where ramping will start from or end at */
/* tx_pa_slice_incr_delay : Step delay configed in terms of 16 MHz clock cycles. 0 corresponds to 1 clockcycle. 0x3F corresponds to 128 clock cycles */
/* pa_slice_ramp_bypass_en : PA ramp bypass */
#define EXTAPB_REGFILE_PA_CONTROL_PA_RAMP_CFG_TX_PA_RAMP_INIT_MASK 0x000f
#define EXTAPB_REGFILE_PA_CONTROL_PA_RAMP_CFG_TX_PA_RAMP_INIT_POS  0
#define EXTAPB_REGFILE_PA_CONTROL_PA_RAMP_CFG_TX_PA_SLICE_INCR_DELAY_MASK 0x07f0
#define EXTAPB_REGFILE_PA_CONTROL_PA_RAMP_CFG_TX_PA_SLICE_INCR_DELAY_POS  4
#define EXTAPB_REGFILE_PA_CONTROL_PA_RAMP_CFG_PA_SLICE_RAMP_BYPASS_EN_MASK 0x0800
#define EXTAPB_REGFILE_PA_CONTROL_PA_RAMP_CFG_PA_SLICE_RAMP_BYPASS_EN_POS  11
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int tx_pa_ramp_init : 4;
    unsigned int tx_pa_slice_incr_delay : 7;
    unsigned int pa_slice_ramp_bypass_en : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_ramp_cfg;
#define EXTAPB_REGFILE_PA_CONTROL_PA_RAMP_CFG_RST 0x140
#define EXTAPB_REGFILE_PA_CONTROL_PA_RAMP_CFG_ADDR  0x4001dc40


/* pa_cal_comp_cfg register */
/*----------------------*/
/* PA calibration compensation config */
/* pa_cal_comp_bypass_en : Enable bit for PA calibration compensation bypass mux */
#define EXTAPB_REGFILE_PA_CONTROL_PA_CAL_COMP_CFG_PA_CAL_COMP_BYPASS_EN_MASK 0x0001
#define EXTAPB_REGFILE_PA_CONTROL_PA_CAL_COMP_CFG_PA_CAL_COMP_BYPASS_EN_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pa_cal_comp_bypass_en : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_cal_comp_cfg;
#define EXTAPB_REGFILE_PA_CONTROL_PA_CAL_COMP_CFG_RST 0x1
#define EXTAPB_REGFILE_PA_CONTROL_PA_CAL_COMP_CFG_ADDR  0x4001dc44


/* man_pa_cfg register */
/*----------------------*/
/* Manual PA control */
/* man_pa_setting : Manual register setting */
/* man_pa_setting_en : Manual register setting enable */
#define EXTAPB_REGFILE_PA_CONTROL_MAN_PA_CFG_MAN_PA_SETTING_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_MAN_PA_CFG_MAN_PA_SETTING_POS  0
#define EXTAPB_REGFILE_PA_CONTROL_MAN_PA_CFG_MAN_PA_SETTING_EN_MASK 0x0200
#define EXTAPB_REGFILE_PA_CONTROL_MAN_PA_CFG_MAN_PA_SETTING_EN_POS  9
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int man_pa_setting : 9;
    unsigned int man_pa_setting_en : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_man_pa_cfg;
#define EXTAPB_REGFILE_PA_CONTROL_MAN_PA_CFG_RST 0x0
#define EXTAPB_REGFILE_PA_CONTROL_MAN_PA_CFG_ADDR  0x4001dc48


/* pa_lut0 register */
/*----------------------*/
/* PA LUT entry 0 */
/* nslice : Power to nslice lookup table. Entry 0 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT0_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT0_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut0;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT0_RST 0x1
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT0_ADDR  0x4001dc4c


/* pa_lut1 register */
/*----------------------*/
/* PA LUT entry 1 */
/* nslice : Power to nslice lookup table. Entry 1 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT1_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT1_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut1;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT1_RST 0x1
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT1_ADDR  0x4001dc50


/* pa_lut2 register */
/*----------------------*/
/* PA LUT entry 2 */
/* nslice : Power to nslice lookup table. Entry 2 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT2_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT2_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut2;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT2_RST 0x1
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT2_ADDR  0x4001dc54


/* pa_lut3 register */
/*----------------------*/
/* PA LUT entry 3 */
/* nslice : Power to nslice lookup table. Entry 3 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT3_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT3_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut3;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT3_RST 0x1
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT3_ADDR  0x4001dc58


/* pa_lut4 register */
/*----------------------*/
/* PA LUT entry 4 */
/* nslice : Power to nslice lookup table. Entry 4 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT4_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT4_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut4;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT4_RST 0x1
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT4_ADDR  0x4001dc5c


/* pa_lut5 register */
/*----------------------*/
/* PA LUT entry 5 */
/* nslice : Power to nslice lookup table. Entry 5 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT5_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT5_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut5;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT5_RST 0x2
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT5_ADDR  0x4001dc60


/* pa_lut6 register */
/*----------------------*/
/* PA LUT entry 6 */
/* nslice : Power to nslice lokup table. Entry 6 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT6_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT6_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut6;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT6_RST 0x2
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT6_ADDR  0x4001dc64


/* pa_lut7 register */
/*----------------------*/
/* PA LUT entry 7 */
/* nslice : Power to nslice lookup table. Entry 7 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT7_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT7_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut7;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT7_RST 0x2
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT7_ADDR  0x4001dc68


/* pa_lut8 register */
/*----------------------*/
/* PA LUT entry 8 */
/* nslice : Power to nslice lookup table. Entry 8 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT8_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT8_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut8;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT8_RST 0x2
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT8_ADDR  0x4001dc6c


/* pa_lut9 register */
/*----------------------*/
/* PA LUT entry 9 */
/* nslice : Power to nslice lookup table. Entry 9 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT9_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT9_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut9;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT9_RST 0x3
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT9_ADDR  0x4001dc70


/* pa_lut10 register */
/*----------------------*/
/* PA LUT entry 10 */
/* nslice : Power to nslice lookup table. Entry 10 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT10_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT10_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut10;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT10_RST 0x3
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT10_ADDR  0x4001dc74


/* pa_lut11 register */
/*----------------------*/
/* PA LUT entry 11 */
/* nslice : Power to nslice lookup table. Entry 11 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT11_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT11_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut11;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT11_RST 0x3
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT11_ADDR  0x4001dc78


/* pa_lut12 register */
/*----------------------*/
/* PA LUT entry 12 */
/* nslice : Power to nslice lookup table. Entry 12 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT12_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT12_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut12;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT12_RST 0x4
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT12_ADDR  0x4001dc7c


/* pa_lut13 register */
/*----------------------*/
/* PA LUT entry 13 */
/* nslice : Power to nslice lookup table. Entry 13 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT13_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT13_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut13;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT13_RST 0x4
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT13_ADDR  0x4001dc80


/* pa_lut14 register */
/*----------------------*/
/* PA LUT entry 14 */
/* nslice : Power to nslice lookup table. Entry 14 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT14_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT14_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut14;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT14_RST 0x5
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT14_ADDR  0x4001dc84


/* pa_lut15 register */
/*----------------------*/
/* PA LUT entry 15 */
/* nslice : Power to nslice lookup table. Entry 15 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT15_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT15_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut15;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT15_RST 0x5
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT15_ADDR  0x4001dc88


/* pa_lut16 register */
/*----------------------*/
/* PA LUT entry 16 */
/* nslice : Power to nslice lookup table. Entry 16 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT16_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT16_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut16;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT16_RST 0x6
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT16_ADDR  0x4001dc8c


/* pa_lut17 register */
/*----------------------*/
/* PA LUT entry 17 */
/* nslice : Power to nslice lookup table. Entry 17 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT17_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT17_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut17;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT17_RST 0x7
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT17_ADDR  0x4001dc90


/* pa_lut18 register */
/*----------------------*/
/* PA LUT entry 18 */
/* nslice : Power to nslice lookup table. Entry 18 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT18_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT18_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut18;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT18_RST 0x8
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT18_ADDR  0x4001dc94


/* pa_lut19 register */
/*----------------------*/
/* PA LUT entry 19 */
/* nslice : Power to nslice lookup table. Entry 19 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT19_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT19_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut19;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT19_RST 0x8
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT19_ADDR  0x4001dc98


/* pa_lut20 register */
/*----------------------*/
/* PA LUT entry 20 */
/* nslice : Power to nslice lookup table. Entry 20 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT20_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT20_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut20;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT20_RST 0xa
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT20_ADDR  0x4001dc9c


/* pa_lut21 register */
/*----------------------*/
/* PA LUT entry 21 */
/* nslice : Power to nslice lookup table. Entry 21 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT21_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT21_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut21;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT21_RST 0xb
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT21_ADDR  0x4001dca0


/* pa_lut22 register */
/*----------------------*/
/* PA LUT entry 22 */
/* nslice : Power to nslice lookup table. Entry 22 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT22_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT22_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut22;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT22_RST 0xc
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT22_ADDR  0x4001dca4


/* pa_lut23 register */
/*----------------------*/
/* PA LUT entry 23 */
/* nslice : Power to nslice lookup table. Entry 23 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT23_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT23_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut23;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT23_RST 0xe
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT23_ADDR  0x4001dca8


/* pa_lut24 register */
/*----------------------*/
/* PA LUT entry 24 */
/* nslice : Power to nslice lookup table. Entry 24 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT24_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT24_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut24;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT24_RST 0x10
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT24_ADDR  0x4001dcac


/* pa_lut25 register */
/*----------------------*/
/* PA LUT entry 25 */
/* nslice : Power to nslice lookup table. Entry 25 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT25_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT25_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut25;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT25_RST 0x12
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT25_ADDR  0x4001dcb0


/* pa_lut26 register */
/*----------------------*/
/* PA LUT entry 26 */
/* nslice : Power to nslice lookup table. Entry 26 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT26_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT26_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut26;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT26_RST 0x14
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT26_ADDR  0x4001dcb4


/* pa_lut27 register */
/*----------------------*/
/* PA LUT entry 27 */
/* nslice : Power to nslice lookup table. Entry 27 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT27_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT27_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut27;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT27_RST 0x17
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT27_ADDR  0x4001dcb8


/* pa_lut28 register */
/*----------------------*/
/* PA LUT entry 28 */
/* nslice : Power to nslice lookup table. Entry 28 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT28_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT28_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut28;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT28_RST 0x1a
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT28_ADDR  0x4001dcbc


/* pa_lut29 register */
/*----------------------*/
/* PA LUT entry 29 */
/* nslice : Power to nslice lookup table. Entry 29 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT29_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT29_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut29;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT29_RST 0x1e
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT29_ADDR  0x4001dcc0


/* pa_lut30 register */
/*----------------------*/
/* PA LUT entry 30 */
/* nslice : Power to nslice lookup table. Entry 30 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT30_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT30_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut30;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT30_RST 0x22
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT30_ADDR  0x4001dcc4


/* pa_lut31 register */
/*----------------------*/
/* PA LUT entry 31 */
/* nslice : Power to nslice lookup table. Entry 31 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT31_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT31_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut31;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT31_RST 0x27
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT31_ADDR  0x4001dcc8


/* pa_lut32 register */
/*----------------------*/
/* PA LUT entry 32 */
/* nslice : Power to nslice lookup table. Entry 32 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT32_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT32_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut32;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT32_RST 0x2e
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT32_ADDR  0x4001dccc


/* pa_lut33 register */
/*----------------------*/
/* PA LUT entry 33 */
/* nslice : Power to nslice lookup table. Entry 33 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT33_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT33_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut33;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT33_RST 0x36
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT33_ADDR  0x4001dcd0


/* pa_lut34 register */
/*----------------------*/
/* PA LUT entry 34 */
/* nslice : Power to nslice lookup table. Entry 34 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT34_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT34_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut34;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT34_RST 0x3f
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT34_ADDR  0x4001dcd4


/* pa_lut35 register */
/*----------------------*/
/* PA LUT entry 35 */
/* nslice : Power to nslice lookup table. Entry 35 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT35_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT35_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut35;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT35_RST 0x4c
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT35_ADDR  0x4001dcd8


/* pa_lut36 register */
/*----------------------*/
/* PA LUT entry 36 */
/* nslice : Power to nslice lookup table. Entry 36 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT36_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT36_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut36;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT36_RST 0x5c
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT36_ADDR  0x4001dcdc


/* pa_lut37 register */
/*----------------------*/
/* PA LUT entry 37 */
/* nslice : Power to nslice lookup table. Entry 37 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT37_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT37_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut37;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT37_RST 0x73
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT37_ADDR  0x4001dce0


/* pa_lut38 register */
/*----------------------*/
/* PA LUT entry 38 */
/* nslice : Power to nslice lookup table. Entry 38 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT38_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT38_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut38;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT38_RST 0x96
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT38_ADDR  0x4001dce4


/* pa_lut39 register */
/*----------------------*/
/* PA LUT entry 39 */
/* nslice : Power to nslice lookup table. Entry 39 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT39_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT39_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut39;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT39_RST 0xd0
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT39_ADDR  0x4001dce8


/* pa_lut40 register */
/*----------------------*/
/* PA LUT entry 40 */
/* nslice : Power to nslice lookup table. Entry 40 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT40_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT40_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut40;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT40_RST 0x144
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT40_ADDR  0x4001dcec


/* pa_lut41 register */
/*----------------------*/
/* PA LUT entry 41 */
/* nslice : Power to nslice lookup table. Entry 41 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT41_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT41_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut41;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT41_RST 0x1ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT41_ADDR  0x4001dcf0


/* pa_lut42 register */
/*----------------------*/
/* PA LUT entry 42 */
/* nslice : Power to nslice lookup table. Entry 42 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT42_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT42_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut42;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT42_RST 0x1ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT42_ADDR  0x4001dcf4


/* pa_lut43 register */
/*----------------------*/
/* PA LUT entry 43 */
/* nslice : Power to nslice lookup table. Entry 43 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT43_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT43_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut43;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT43_RST 0x1ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT43_ADDR  0x4001dcf8


/* pa_lut44 register */
/*----------------------*/
/* PA LUT entry 44 */
/* nslice : Power to nslice lookup table. Entry 44 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT44_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT44_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut44;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT44_RST 0x1ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT44_ADDR  0x4001dcfc


/* pa_lut45 register */
/*----------------------*/
/* PA LUT entry 45 */
/* nslice : Power to nslice lookup table. Entry 45 */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT45_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT45_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut45;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT45_RST 0x1ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT45_ADDR  0x4001dd00


/* pa_lut_interpolate_cfg register */
/*----------------------*/
/* TBD */
/* lut_offset : Identifies LUT entry that corresponds to 0dBm */
/* interpolate_en : Enable interpolation between LUT entries for 0.5dB steps when set */
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT_INTERPOLATE_CFG_LUT_OFFSET_MASK 0x003f
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT_INTERPOLATE_CFG_LUT_OFFSET_POS  0
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT_INTERPOLATE_CFG_INTERPOLATE_EN_MASK 0x0040
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT_INTERPOLATE_CFG_INTERPOLATE_EN_POS  6
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int lut_offset : 6;
    unsigned int interpolate_en : 1;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_lut_interpolate_cfg;
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT_INTERPOLATE_CFG_RST 0x5e
#define EXTAPB_REGFILE_PA_CONTROL_PA_LUT_INTERPOLATE_CFG_ADDR  0x4001dd04


/* pa_status_pcorr register */
/*----------------------*/
/* PA status Pcorr */
/* pcorr : pcorr resulting from the power level adjustment */
#define EXTAPB_REGFILE_PA_CONTROL_PA_STATUS_PCORR_PCORR_MASK 0x00ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_STATUS_PCORR_PCORR_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int pcorr : 8;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_status_pcorr;
#define EXTAPB_REGFILE_PA_CONTROL_PA_STATUS_PCORR_RST 0x0
#define EXTAPB_REGFILE_PA_CONTROL_PA_STATUS_PCORR_DYNAMIC true
#define EXTAPB_REGFILE_PA_CONTROL_PA_STATUS_PCORR_SNAPCLOCK 0
#define EXTAPB_REGFILE_PA_CONTROL_PA_STATUS_PCORR_ADDR  0x4001dd08


/* pa_status_nslice register */
/*----------------------*/
/* PA status Nslice */
/* nslice : nslice resulting from LUT and interpolation */
#define EXTAPB_REGFILE_PA_CONTROL_PA_STATUS_NSLICE_NSLICE_MASK 0x01ff
#define EXTAPB_REGFILE_PA_CONTROL_PA_STATUS_NSLICE_NSLICE_POS  0
#ifdef APB_ALLOW_BITFIELDS
typedef volatile union{
#else
typedef volatile struct{
#endif /*APB_ALLOW_BITFIELDS*/
  unsigned int val;
#ifdef APB_ALLOW_BITFIELDS
  struct{
    unsigned int nslice : 9;
  } fields;
#endif /*APB_ALLOW_BITFIELDS*/
} t_extapb_regfile_pa_control_pa_status_nslice;
#define EXTAPB_REGFILE_PA_CONTROL_PA_STATUS_NSLICE_RST 0x0
#define EXTAPB_REGFILE_PA_CONTROL_PA_STATUS_NSLICE_DYNAMIC true
#define EXTAPB_REGFILE_PA_CONTROL_PA_STATUS_NSLICE_SNAPCLOCK 0
#define EXTAPB_REGFILE_PA_CONTROL_PA_STATUS_NSLICE_ADDR  0x4001dd0c


typedef struct{
    t_extapb_regfile_pa_control_pa_ramp_cfg  pa_ramp_cfg;
    t_extapb_regfile_pa_control_pa_cal_comp_cfg  pa_cal_comp_cfg;
    t_extapb_regfile_pa_control_man_pa_cfg  man_pa_cfg;
    t_extapb_regfile_pa_control_pa_lut0  pa_lut0;
    t_extapb_regfile_pa_control_pa_lut1  pa_lut1;
    t_extapb_regfile_pa_control_pa_lut2  pa_lut2;
    t_extapb_regfile_pa_control_pa_lut3  pa_lut3;
    t_extapb_regfile_pa_control_pa_lut4  pa_lut4;
    t_extapb_regfile_pa_control_pa_lut5  pa_lut5;
    t_extapb_regfile_pa_control_pa_lut6  pa_lut6;
    t_extapb_regfile_pa_control_pa_lut7  pa_lut7;
    t_extapb_regfile_pa_control_pa_lut8  pa_lut8;
    t_extapb_regfile_pa_control_pa_lut9  pa_lut9;
    t_extapb_regfile_pa_control_pa_lut10  pa_lut10;
    t_extapb_regfile_pa_control_pa_lut11  pa_lut11;
    t_extapb_regfile_pa_control_pa_lut12  pa_lut12;
    t_extapb_regfile_pa_control_pa_lut13  pa_lut13;
    t_extapb_regfile_pa_control_pa_lut14  pa_lut14;
    t_extapb_regfile_pa_control_pa_lut15  pa_lut15;
    t_extapb_regfile_pa_control_pa_lut16  pa_lut16;
    t_extapb_regfile_pa_control_pa_lut17  pa_lut17;
    t_extapb_regfile_pa_control_pa_lut18  pa_lut18;
    t_extapb_regfile_pa_control_pa_lut19  pa_lut19;
    t_extapb_regfile_pa_control_pa_lut20  pa_lut20;
    t_extapb_regfile_pa_control_pa_lut21  pa_lut21;
    t_extapb_regfile_pa_control_pa_lut22  pa_lut22;
    t_extapb_regfile_pa_control_pa_lut23  pa_lut23;
    t_extapb_regfile_pa_control_pa_lut24  pa_lut24;
    t_extapb_regfile_pa_control_pa_lut25  pa_lut25;
    t_extapb_regfile_pa_control_pa_lut26  pa_lut26;
    t_extapb_regfile_pa_control_pa_lut27  pa_lut27;
    t_extapb_regfile_pa_control_pa_lut28  pa_lut28;
    t_extapb_regfile_pa_control_pa_lut29  pa_lut29;
    t_extapb_regfile_pa_control_pa_lut30  pa_lut30;
    t_extapb_regfile_pa_control_pa_lut31  pa_lut31;
    t_extapb_regfile_pa_control_pa_lut32  pa_lut32;
    t_extapb_regfile_pa_control_pa_lut33  pa_lut33;
    t_extapb_regfile_pa_control_pa_lut34  pa_lut34;
    t_extapb_regfile_pa_control_pa_lut35  pa_lut35;
    t_extapb_regfile_pa_control_pa_lut36  pa_lut36;
    t_extapb_regfile_pa_control_pa_lut37  pa_lut37;
    t_extapb_regfile_pa_control_pa_lut38  pa_lut38;
    t_extapb_regfile_pa_control_pa_lut39  pa_lut39;
    t_extapb_regfile_pa_control_pa_lut40  pa_lut40;
    t_extapb_regfile_pa_control_pa_lut41  pa_lut41;
    t_extapb_regfile_pa_control_pa_lut42  pa_lut42;
    t_extapb_regfile_pa_control_pa_lut43  pa_lut43;
    t_extapb_regfile_pa_control_pa_lut44  pa_lut44;
    t_extapb_regfile_pa_control_pa_lut45  pa_lut45;
    t_extapb_regfile_pa_control_pa_lut_interpolate_cfg  pa_lut_interpolate_cfg;
    t_extapb_regfile_pa_control_pa_status_pcorr  pa_status_pcorr;
    t_extapb_regfile_pa_control_pa_status_nslice  pa_status_nslice;
} t_extapb_regfile_pa_control;
#define EXTAPB_REGFILE_PA_CONTROL_ADDR 0x4001dc40
#define EXTAPB_REGFILE_PA_CONTROL ((t_extapb_regfile_pa_control *)EXTAPB_REGFILE_PA_CONTROL_ADDR)


typedef struct{
    t_extapb_regfile_test  test;
    unsigned int  reserved0[1];
    t_extapb_regfile_clockshop  clockshop;
    unsigned int  reserved1[1];
    t_extapb_regfile_ip2001_global  ip2001_global;
    unsigned int  reserved2[3];
    t_extapb_regfile_rx_datapath  rx_datapath;
    unsigned int  reserved3[3];
    t_extapb_regfile_transceiver  transceiver;
    unsigned int  reserved4[51];
    t_extapb_regfile_calibration  calibration;
    unsigned int  reserved5[12];
    t_extapb_regfile_tx_datapath  tx_datapath;
    unsigned int  reserved6[24];
    t_extapb_regfile_tmu  tmu;
#if defined(CPU_JN518X_REV)&&(CPU_JN518X_REV == 1)
    /* ES1 if explicitly configured */
    unsigned int  reserved7[21];
#else
    /* ES2 default */
    unsigned int  reserved7[20];
#endif
    t_extapb_regfile_synth_control  synth_control;
    unsigned int  reserved8[13];
    t_extapb_regfile_tone_control  tone_control;
    unsigned int  reserved9[13];
    t_extapb_regfile_snap  snap;
    unsigned int  reserved10[7];
    t_extapb_regfile_apbm  apbm;
    t_extapb_regfile_switch_matrix  switch_matrix;
    unsigned int  reserved11[5];
    t_extapb_regfile_debug_adc  debug_adc;
    unsigned int  reserved12[3];
    t_extapb_regfile_gpio  gpio;
    unsigned int  reserved13[5];
    t_extapb_regfile_debug_dac  debug_dac;
    unsigned int  reserved14[13];
    t_extapb_regfile_xo_cal  xo_cal;
    t_extapb_regfile_rf_bgp_cal  rf_bgp_cal;
    unsigned int  reserved15[25];
    t_extapb_regfile_dummy  dummy;
    unsigned int  reserved16[8];
    t_extapb_regfile_pa_control  pa_control;
    unsigned int  reserved17[188];
} t_extapb_regfile;
#define EXTAPB_REGFILE_ADDR 0x4001d000
#define EXTAPB_REGFILE ((t_extapb_regfile *)EXTAPB_REGFILE_ADDR)


typedef struct{
    unsigned int  reserved0[268465152];
    t_extapb_regfile  regfile;
} t_extapb;
#define EXTAPB_ADDR 0x0
#define EXTAPB ((t_extapb *)EXTAPB_ADDR)

#endif /*JN518X_RFP_MODEM_H*/
