/*
 *    Copyright (c) 2016-17, The OpenThread Authors.
 *    All rights reserved.
 *
 *    Redistribution and use in source and binary forms, with or without
 *    modification, are permitted provided that the following conditions are met:
 *    1. Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *    2. Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *    3. Neither the name of the copyright holder nor the
 *       names of its contributors may be used to endorse or promote products
 *       derived from this software without specific prior written permission.
 *
 *    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 *    ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 *    WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 *    DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY
 *    DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 *    (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 *    LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 *    ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 *    (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 *    SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/**
 * @file
 *   This file contains list of NCP Spinel properties supporting "set" operation.
 */

/**
* This file is used/included for two purposes:
 *
 *    1) From `NcpBase` class definition to declare the property handler methods.
 *    2) From the definition of `mSetPropertyHandlerTable` to match the properties with their handler methods.
 *
 * The following macro is used by this file:
 *
 *    NCP_SET_PROP(name)
 *
 * `name` is the name of spinel property (excluding the `SPINEL_PROP_` prefix).

 * NOTE: At the end of this file the above macro is `#undef`ed.
 */

#ifndef NCP_SET_PROP
#error Undefined `NCP_SET_PROP` macro.
#endif

// Properties supporting "set" operation

    NCP_SET_PROP(POWER_STATE)
    NCP_SET_PROP(HOST_POWER_STATE)
    NCP_SET_PROP(UNSOL_UPDATE_FILTER)
#if OPENTHREAD_ENABLE_RAW_LINK_API
    NCP_SET_PROP(PHY_ENABLED)
    NCP_SET_PROP(MAC_15_4_SADDR)
    NCP_SET_PROP(STREAM_RAW)
#endif // OPENTHREAD_ENABLE_RAW_LINK_API
    NCP_SET_PROP(PHY_TX_POWER)
    NCP_SET_PROP(PHY_CHAN)
    NCP_SET_PROP(MAC_PROMISCUOUS_MODE)
    NCP_SET_PROP(MAC_SCAN_MASK)
    NCP_SET_PROP(MAC_SCAN_STATE)
    NCP_SET_PROP(MAC_SCAN_PERIOD)
    NCP_SET_PROP(MAC_15_4_PANID)
    NCP_SET_PROP(MAC_15_4_LADDR)
    NCP_SET_PROP(MAC_DATA_POLL_PERIOD)
    NCP_SET_PROP(MAC_RAW_STREAM_ENABLED)
    NCP_SET_PROP(NET_IF_UP)
    NCP_SET_PROP(NET_STACK_UP)
    NCP_SET_PROP(NET_ROLE)
    NCP_SET_PROP(NET_NETWORK_NAME)
    NCP_SET_PROP(NET_XPANID)
    NCP_SET_PROP(NET_MASTER_KEY)
    NCP_SET_PROP(NET_KEY_SEQUENCE_COUNTER)
    NCP_SET_PROP(NET_KEY_SWITCH_GUARDTIME)
    NCP_SET_PROP(THREAD_ASSISTING_PORTS)
    NCP_SET_PROP(STREAM_NET_INSECURE)
    NCP_SET_PROP(STREAM_NET)
    NCP_SET_PROP(IPV6_ML_PREFIX)
    NCP_SET_PROP(IPV6_ICMP_PING_OFFLOAD)
    NCP_SET_PROP(THREAD_RLOC16_DEBUG_PASSTHRU)
#if OPENTHREAD_ENABLE_MAC_FILTER
    NCP_SET_PROP(MAC_WHITELIST)
    NCP_SET_PROP(MAC_WHITELIST_ENABLED)
    NCP_SET_PROP(MAC_BLACKLIST)
    NCP_SET_PROP(MAC_BLACKLIST_ENABLED)
    NCP_SET_PROP(MAC_FIXED_RSS)
#endif
#if OPENTHREAD_ENABLE_RAW_LINK_API
    NCP_SET_PROP(MAC_SRC_MATCH_ENABLED)
    NCP_SET_PROP(MAC_SRC_MATCH_SHORT_ADDRESSES)
    NCP_SET_PROP(MAC_SRC_MATCH_EXTENDED_ADDRESSES)
#endif
    NCP_SET_PROP(THREAD_MODE)
    NCP_SET_PROP(NET_REQUIRE_JOIN_EXISTING)
    NCP_SET_PROP(DEBUG_NCP_LOG_LEVEL)
    NCP_SET_PROP(THREAD_DISCOVERY_SCAN_JOINER_FLAG)
    NCP_SET_PROP(THREAD_DISCOVERY_SCAN_ENABLE_FILTERING)
    NCP_SET_PROP(THREAD_DISCOVERY_SCAN_PANID)
#if OPENTHREAD_ENABLE_BORDER_ROUTER
    NCP_SET_PROP(THREAD_ALLOW_LOCAL_NET_DATA_CHANGE)
#endif
#if OPENTHREAD_FTD
    NCP_SET_PROP(NET_PSKC)
    NCP_SET_PROP(THREAD_CHILD_TIMEOUT)
    NCP_SET_PROP(THREAD_NETWORK_ID_TIMEOUT)
    NCP_SET_PROP(THREAD_LOCAL_LEADER_WEIGHT)
    NCP_SET_PROP(THREAD_ROUTER_ROLE_ENABLED)
    NCP_SET_PROP(THREAD_CHILD_COUNT_MAX)
    NCP_SET_PROP(THREAD_ROUTER_UPGRADE_THRESHOLD)
    NCP_SET_PROP(THREAD_ROUTER_DOWNGRADE_THRESHOLD)
    NCP_SET_PROP(THREAD_CONTEXT_REUSE_DELAY)
    NCP_SET_PROP(THREAD_ROUTER_SELECTION_JITTER)
    NCP_SET_PROP(THREAD_PREFERRED_ROUTER_ID)
#if OPENTHREAD_CONFIG_ENABLE_STEERING_DATA_SET_OOB
    NCP_SET_PROP(THREAD_STEERING_DATA)
#endif
#endif // #if OPENTHREAD_FTD
#if OPENTHREAD_ENABLE_JAM_DETECTION
    NCP_SET_PROP(JAM_DETECT_ENABLE)
    NCP_SET_PROP(JAM_DETECT_RSSI_THRESHOLD)
    NCP_SET_PROP(JAM_DETECT_WINDOW)
    NCP_SET_PROP(JAM_DETECT_BUSY)
#endif
#if OPENTHREAD_ENABLE_TMF_PROXY && OPENTHREAD_FTD
    NCP_SET_PROP(THREAD_TMF_PROXY_ENABLED)
    NCP_SET_PROP(THREAD_TMF_PROXY_STREAM)
#endif
#if OPENTHREAD_ENABLE_DIAG
    NCP_SET_PROP(NEST_STREAM_MFG)
#endif
#if OPENTHREAD_ENABLE_LEGACY
    NCP_SET_PROP(NEST_LEGACY_ULA_PREFIX)
#endif

#if OPENTHREAD_ENABLE_COMMISSIONER && OPENTHREAD_FTD
    NCP_SET_PROP(THREAD_COMMISSIONER_ENABLED)
#endif
    NCP_SET_PROP(CNTR_RESET)

#undef NCP_SET_PROP
