#  Copyright (c) 2020, The OpenThread Authors.
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions are met:
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#  3. Neither the name of the copyright holder nor the
#     names of its contributors may be used to endorse or promote products
#     derived from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
#  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#  POSSIBILITY OF SUCH DAMAGE.
#

visibility = [ "../../../*" ]

declare_args() {
  # Platform portability header for spinel.
  spinel_platform_header = "\"spinel_platform.h\""
}

spinel_sources = [
  "openthread-spinel-config.h",
  "radio_spinel.hpp",
  "radio_spinel_impl.hpp",
  "spinel.c",
  "spinel_buffer.cpp",
  "spinel_buffer.hpp",
  "spinel_decoder.cpp",
  "spinel_decoder.hpp",
  "spinel_encoder.cpp",
  "spinel_encoder.hpp",
  "spinel_platform.h",
]

config("spinel_config") {
  defines = [ "SPINEL_PLATFORM_HEADER=${spinel_platform_header}" ]
  include_dirs = [ ".." ]
}

config("spinel_config_openthread_message_enable") {
  defines = [ "OPENTHREAD_SPINEL_CONFIG_OPENTHREAD_MESSAGE_ENABLE=1" ]
}

config("spinel_config_openthread_message_disable") {
  defines = [ "OPENTHREAD_SPINEL_CONFIG_OPENTHREAD_MESSAGE_ENABLE=0" ]
}

source_set("spinel-api") {
  public = [ "spinel.h" ]
  public_configs = [ ":spinel_config" ]
}

static_library("libopenthread-spinel-ncp") {
  sources = spinel_sources
  public_deps = [
    ":spinel-api",
    "../../core:libopenthread_core_headers",
    "../platform:libopenthread-platform",
  ]
  public_configs = [ ":spinel_config_openthread_message_enable" ]
}

static_library("libopenthread-spinel-rcp") {
  sources = spinel_sources
  public_deps = [
    ":spinel-api",
    "../../core:libopenthread_core_headers",
    "../platform:libopenthread-platform",
  ]
  public_configs = [ ":spinel_config_openthread_message_disable" ]
}
