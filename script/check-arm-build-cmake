#!/bin/bash
#
#  Copyright (c) 2020, The OpenThread Authors.
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions are met:
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#  3. Neither the name of the copyright holder nor the
#     names of its contributors may be used to endorse or promote products
#     derived from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
#  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#  POSSIBILITY OF SUCH DAMAGE.
#

set -euxo pipefail

readonly OT_SRCDIR="$(pwd)"
readonly OT_BUILDDIR="$OT_SRCDIR/build"

readonly OT_COMMON_OPTIONS=(
    "-DOT_COMPILE_WARNING_AS_ERROR=ON"
)

reset_source()
{
    rm -rf "$OT_BUILDDIR"
}

build_cc1352()
{
    local options=("${OT_COMMON_OPTIONS[@]}")

    options+=(
        "-DOT_PLATFORM=cc1352"
        "-DCMAKE_TOOLCHAIN_FILE=examples/platforms/cc1352/arm-none-eabi.cmake"
        "-DOT_COMMISSIONER=on"
        "-DOT_DHCP6_CLIENT=on"
        "-DOT_DHCP6_SERVER=on"
        "-DOT_DNS_CLIENT=on"
        "-DOT_JOINER=on"
        "-DOT_SLAAC=on"
        "-DCMAKE_BUILD_TYPE=Release"
    )

    reset_source
    mkdir -p "$OT_BUILDDIR"
    cd "$OT_BUILDDIR"
    cmake -GNinja "${options[@]}" ..
    ninja
    cd "$OT_SRCDIR"
}

build_cc2538()
{
    local options=("${OT_COMMON_OPTIONS[@]}")

    options+=(
        "-DOT_PLATFORM=cc2538"
        "-DCMAKE_TOOLCHAIN_FILE=examples/platforms/cc2538/arm-none-eabi.cmake"
    )

    reset_source
    mkdir -p "$OT_BUILDDIR"
    cd "$OT_BUILDDIR"
    cmake -GNinja "${options[@]}" ..
    ninja
    cd "$OT_SRCDIR"
}

build_cc2650()
{
    local options=("${OT_COMMON_OPTIONS[@]}")

    options+=(
        "-DOT_PLATFORM=cc2650"
        "-DCMAKE_TOOLCHAIN_FILE=examples/platforms/cc2650/arm-none-eabi.cmake"
        "-DCMAKE_BUILD_TYPE=Release"
    )

    reset_source
    mkdir -p "$OT_BUILDDIR"
    cd "$OT_BUILDDIR"
    cmake -GNinja "${options[@]}" ..
    ninja ot-cli-mtd ot-ncp-mtd
    cd "$OT_SRCDIR"
}

build_cc2652()
{
    local options=("${OT_COMMON_OPTIONS[@]}")

    options+=(
        "-DOT_PLATFORM=cc2652"
        "-DCMAKE_TOOLCHAIN_FILE=examples/platforms/cc2652/arm-none-eabi.cmake"
        "-DOT_COMMISSIONER=on"
        "-DOT_DHCP6_CLIENT=on"
        "-DOT_DHCP6_SERVER=on"
        "-DOT_DNS_CLIENT=on"
        "-DOT_JOINER=on"
        "-DOT_SLAAC=on"
        "-DCMAKE_BUILD_TYPE=Release"
    )

    reset_source
    mkdir -p "$OT_BUILDDIR"
    cd "$OT_BUILDDIR"
    cmake -GNinja "${options[@]}" ..
    ninja
    cd "$OT_SRCDIR"
}

build_kw41z()
{
    local options=("${OT_COMMON_OPTIONS[@]}")

    options+=(
        "-DOT_PLATFORM=kw41z"
        "-DCMAKE_TOOLCHAIN_FILE=examples/platforms/kw41z/arm-none-eabi.cmake"
        "-DOT_COMMISSIONER=on"
        "-DOT_DHCP6_CLIENT=on"
        "-DOT_DHCP6_SERVER=on"
        "-DOT_DNS_CLIENT=on"
        "-DOT_JOINER=on"
        "-DOT_SLAAC=on"
        "-DCMAKE_BUILD_TYPE=Release"
    )

    reset_source
    mkdir -p "$OT_BUILDDIR"
    cd "$OT_BUILDDIR"
    cmake -GNinja "${options[@]}" ..
    ninja
    cd "$OT_SRCDIR"
}

build_qpg6095()
{
    local options=("${OT_COMMON_OPTIONS[@]}")

    options+=(
        "-DOT_PLATFORM=qpg6095"
        "-DCMAKE_TOOLCHAIN_FILE=examples/platforms/qpg6095/arm-none-eabi.cmake"
        "-DOT_COMMISSIONER=on"
        "-DOT_DHCP6_CLIENT=on"
        "-DOT_DHCP6_SERVER=on"
        "-DOT_DNS_CLIENT=on"
        "-DOT_JOINER=on"
        "-DOT_SLAAC=on"
        "-DCMAKE_BUILD_TYPE=Release"
    )

    reset_source
    mkdir -p "$OT_BUILDDIR"
    cd "$OT_BUILDDIR"
    cmake -GNinja "${options[@]}" ..
    ninja
    cd "$OT_SRCDIR"
}

build_samr21()
{
    local options=("${OT_COMMON_OPTIONS[@]}")

    options+=(
        "-DOT_PLATFORM=samr21"
        "-DCMAKE_TOOLCHAIN_FILE=examples/platforms/samr21/arm-none-eabi.cmake"
        "-DOT_COMMISSIONER=on"
        "-DOT_DHCP6_CLIENT=on"
        "-DOT_DHCP6_SERVER=on"
        "-DOT_DNS_CLIENT=on"
        "-DOT_JOINER=on"
        "-DOT_SLAAC=on"
        "-DCMAKE_BUILD_TYPE=Release"
    )

    reset_source
    wget http://ww1.microchip.com/downloads/en/DeviceDoc/asf-standalone-archive-3.45.0.85.zip || die
    unzip -qq asf-standalone-archive-3.45.0.85.zip || die
    mv xdk-asf-3.45.0 third_party/microchip/asf || die
    mkdir -p "$OT_BUILDDIR"
    cd "$OT_BUILDDIR"
    cmake -GNinja "${options[@]}" ..
    ninja
    cd "$OT_SRCDIR"
}

main()
{
    build_cc1352
    build_cc2538
    build_cc2650
    build_cc2652
    build_kw41z
    build_qpg6095
    build_samr21
}

main "$@"
