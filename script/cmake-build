#!/bin/bash
#
#  Copyright (c) 2020, The OpenThread Authors.
#  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions are met:
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#  3. Neither the name of the copyright holder nor the
#     names of its contributors may be used to endorse or promote products
#     derived from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
#  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
#  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
#  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
#  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
#  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
#  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
#  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
#  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
#  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#  POSSIBILITY OF SUCH DAMAGE.
#

set -euo pipefail

readonly OT_SRCDIR="$(pwd)"
readonly OT_PLATFORMS=(cc1352 cc2538 cc2650 cc2652 kw41z qpg6095 samr21 simulation posix)
readonly OT_POSIX_SIM_COMMON_OPTIONS=(
    "-DOT_BORDER_AGENT=on"
    "-DOT_BORDER_ROUTER=on"
    "-DOT_COAP=on"
    "-DOT_COAP_OBSERVE=on"
    "-DOT_COAPS=on"
    "-DOT_COMMISSIONER=on"
    "-DOT_CHANNEL_MANAGER=on"
    "-DOT_CHANNEL_MONITOR=on"
    "-DOT_CHILD_SUPERVISION=on"
    "-DOT_DHCP6_CLIENT=on"
    "-DOT_DHCP6_SERVER=on"
    "-DOT_DIAGNOSTIC=on"
    "-DOT_DNS_CLIENT=on"
    "-DOT_ECDSA=on"
    "-DOT_IP6_FRAGM=on"
    "-DOT_JAM_DETECTION=on"
    "-DOT_JOINER=on"
    "-DOT_LEGACY=on"
    "-DOT_MAC_FILTER=on"
    "-DOT_MTD_NETDIAG=on"
    "-DOT_REFERENCE_DEVICE=on"
    "-DOT_SERVICE=on"
    "-DOT_SNTP_CLIENT=on"
    "-DOT_SLAAC=ON"
    "-DOT_COVERAGE=ON"
    "-DOT_LOG_LEVEL_DYNAMIC=ON"
    "-DOT_COMPILE_WARNING_AS_ERROR=ON"
)

die()
{
    echo " ** ERROR: Openthread cmake doesn't support platform \"$1\""
    exit 1
}

print_usage()
{
    echo "USAGE: $0 <TARGET> [OPTIONS]

TARGET  :
    Build target. Optional targets: ${OT_PLATFORMS[*]}

OPTIONS :
    OpenThread configuration options.

EXAMPLES:
    # Build specified platform:
    $0 simulation

    # Build specified platform with addtional options:
    $0 posix -DOT_DAEMON=on -DOT_PLATFORM_NETIF=on
    "

    exit 1
}

build()
{
    platform=$1
    options=("$2")
    targets=("${OT_CMAKE_NINJA_TARGET:-$3}")
    builddir="${OT_CMAKE_BUILD_DIR:-build/${platform}}"

    mkdir -p "${builddir}"
    cd "${builddir}"
    cmake -GNinja "${options[@]}" "${OT_SRCDIR}"
    ninja "${targets[@]-}"
    cd "${OT_SRCDIR}"
}

main()
{
    if [[ $# == 0 ]]; then
        echo >&2 "Please select a platform: ${OT_PLATFORMS[*]}"
        # 128 for Invalid arguments
        exit 128
    elif [[ $# == 1 ]] && [[ $1 == "help" ]]; then
        print_usage
    fi

    local targets=()
    local platform="$1"
    shift
    local options=(
        "-DOT_PLATFORM=${platform}"
        "$@"
    )

    # Check if the platform supports cmake.
    echo "${OT_PLATFORMS[@]}" | grep -wq "${platform}" || die "${platform}"

    if [[ ${platform} == "posix" ]]; then
        local posix_options=(
            "-DOT_LOG_OUTPUT=PLATFORM_DEFINED"
            "-DOT_POSIX_MAX_POWER_TABLE=on"
        )

        options+=("${OT_POSIX_SIM_COMMON_OPTIONS[@]}" "${posix_options[@]}")
    elif [[ ${platform} == "simulation" ]]; then
        local simulation_options=("-DOT_LINK_RAW=on")
        options+=("${OT_POSIX_SIM_COMMON_OPTIONS[@]}" "${simulation_options[@]}")
    else
        options+=("-DCMAKE_TOOLCHAIN_FILE=examples/platforms/${platform}/arm-none-eabi.cmake")
    fi

    if [[ ${platform} == "cc2650" ]]; then
        targets+=("ot-cli-mtd" "ot-ncp-mtd")
    fi

    build "${platform}" "${options[*]}" "${targets[*]:-}"
}

main "$@"
